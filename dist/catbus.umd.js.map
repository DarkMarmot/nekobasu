{"version":3,"file":"catbus.umd.js","sources":["../src/flib.js","../src/packet.js","../src/dataTypes.js","../src/subscriberList.js","../src/data.js","../src/poolAspects.js","../src/frame.js","../src/pool.js","../src/stream.js","../src/bus.js","../src/nyan.js","../src/nyanBus.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(){\n        const pool = this;\n        return function() {\n            Catbus.enqueue(pool);\n        }\n    },\n\n    getSyncTimer: function(){\n        const pool = this;\n        return function() {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        const pool = this;\n        return function() {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            if(g) {\n                hash[g] = msg;\n            } else { // no source, copy message props into hash to merge nameless streams of key data\n                for(const k in msg){\n                    hash[k] = msg[k];\n                }\n            }\n\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getHash: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getHasKeys: function(keys, noLatch) {\n\n        let latched = false;\n        const len = keys.length;\n\n        return function (msg) {\n\n            if(latched || !len)\n                return true;\n\n            for(let i = 0; i < len; i++) {\n\n                const k = keys[i];\n                if(!msg.hasOwnProperty(k))\n                    return false;\n            }\n\n            if(!noLatch)\n                latched = true;\n\n            return true;\n\n        }\n\n    },\n\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    handle(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.handle(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\nconst NO_TOPIC = '___NO_TOPIC___';\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        topic = topic || undefined;\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.handle(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).remove(watcher);\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n    topics(){\n\n        return this._subscriberListsByTopic.keys();\n\n    };\n\n    survey(){ // get entire key/value store by topic:lastPacket\n\n        const entries = this._subscriberListsByTopic.entries();\n        const m = new Map();\n        for (const [key, value] of entries) {\n            m.set(key, value.lastPacket);\n        }\n\n        return m;\n    };\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const subscriberList = this._subscriberListsByTopic.get(topic);\n        return subscriberList ? subscriberList.lastPacket : null;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        topic = topic || undefined;\n        const list = this._demandSubscriberList(topic);\n        list.handle(msg, topic, silently);\n        this._wildcardSubscriberList.handle(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const lastPacket = this.peek(topic);\n\n        if(lastPacket)\n            this.write(lastPacket._msg, topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nclass PoolAspects {\n\n    constructor() {\n\n        this.until      = null;\n        this.reduce     = null;\n        this.when       = null;\n        this.clear      = null;\n        this.timer      = null;\n        this.keep       = null;\n    };\n\n}\n\nexport default PoolAspects;\n\n//\n// this._keep = null; // pool storage\n// this._until = null; // stream end lifecycle -- todo switch until to when in current setup\n// this._timer = null; // release from pool timer\n// this._clear = false; // condition to clear storage on release\n// this._when = false; // invokes timer for release\n","import F from './flib.js';\nimport PoolAspects from './poolAspects.js';\n\n\nclass Frame {\n\n    constructor(bus, streams) {\n\n        streams = streams || [];\n        this._bus = bus;\n        this._index = bus._frames.length;\n        this._holding = false; //begins group, keep, schedule frames\n        this._streams = streams;\n\n        this._process = null; // name of sync process method in streams\n        this._action = null; // function defining sync stream action\n        this._isFactory = false; // whether sync action is a stateful factory function\n\n        this._poolAspects = null;\n\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].debugFrame = this;\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    get streams() {\n        return [].concat(this._streams);\n    }\n\n    applySyncProcess(name, action, isFactory, ...args){ // generate means action function must be called to generate stateful action\n\n        this._process = name;\n        this._action = action;\n        this._isFactory = isFactory;\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        if(isFactory) {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action(...args);\n                s.processMethod = s[name];\n            }\n        } else {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action;\n                s.processMethod = s[name];\n            }\n        }\n\n        return this;\n\n    };\n\n    hold(){\n\n        this._holding = true;\n        this._poolAspects = new PoolAspects();\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.createPool();\n            s.processMethod = s.doPool;\n        }\n\n        return this;\n\n    };\n\n    pull(){\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.pull();\n        }\n\n    };\n\n    source(name) {\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.name = name;\n        }\n        return this;\n\n    }\n\n    run(func, stateful){\n        return this.applySyncProcess('doRun', func, stateful);\n    };\n\n    msg(fAny, stateful){\n        return this.applySyncProcess('doMsg', F.FUNCTOR(fAny), stateful);\n    };\n\n\n    transform(fAny, stateful){\n        return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    };\n\n    delay(fNum, stateful){\n        return this.applySyncProcess('doDelay', F.FUNCTOR(fNum), stateful);\n    };\n\n    filter(func, stateful){\n        return this.applySyncProcess('doFilter', func, stateful);\n    };\n\n    skipDupes() {\n        return this.applySyncProcess('doFilter', F.getSkipDupes, true);\n    };\n\n    hasKeys(keys) {\n        return this.applySyncProcess('doFilter', F.getHasKeys, true, keys);\n    };\n\n    clear(factory, ...args){\n        return this.buildPoolAspect('clear', factory, ...args);\n    };\n\n    // factory should define content and reset methods have signature f(msg, source) return f.content()\n\n    reduce(factory, ...args){\n        return this.buildPoolAspect('keep', factory, ...args);\n    };\n\n    timer(factory, ...args){\n        return this.buildPoolAspect('timer', factory, ...args);\n    };\n\n    when(factory, ...args){\n        return this.buildPoolAspect('when', factory, ...args);\n    };\n\n    until(factory, ...args){\n        return this.buildPoolAspect('until', factory, ...args);\n    };\n\n    buildPoolAspect(aspect, factory, ...args){\n\n        if(aspect === 'timer')\n            this._holding = false;\n\n        this._poolAspects[aspect] = [factory, ...args];\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build(aspect, factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n    destroy(){\n\n        const streams = this._streams;\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].cleanupMethod();\n        }\n        this._streams = null;\n\n    };\n    \n}\n\nexport default Frame;\n\n\n","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(stream){\n\n        this.stream = stream;\n\n        this.keep = null;\n        this.when = F.ALWAYS_TRUE;\n        this.until = F.ALWAYS_TRUE;\n        this.timer = null; // throttle, debounce, defer, batch, sync\n        this.clear = F.ALWAYS_FALSE;\n        this.isPrimed = false;\n        this.source = stream.name;\n\n    };\n\n    handle(msg, source) {\n\n        this.keep(msg, source);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.stream.emit(msg, pool.stream.name);\n\n    };\n\n}\n\n\n\nexport default Pool;","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.debugFrame = null;\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    handle(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, this.name || source); // handle method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, topic, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n        source = thisStream.name || source;\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.handle(msg, source, topic);\n        }\n\n    };\n\n    doFilter(msg, source, topic) {\n\n        if(!this.actionMethod(msg, source, topic))\n            return;\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doMsg(msg, source, topic) {\n\n        msg = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    doTransform(msg, source, topic) {\n\n\n        msg = this.actionMethod.msg ? this.actionMethod.msg(msg, source, topic) : msg;\n        source = this.actionMethod.source ? this.actionMethod.source(msg, source, topic) : source;\n        topic = this.actionMethod.topic ? this.actionMethod.topic(msg, source, topic) : topic;\n        this.emit(msg, source, topic);\n\n    };\n\n    doDelay(msg, source, topic) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod(msg, source, topic) || 0, msg, source, topic, this);\n\n    };\n\n    doSource(msg, source, topic) {\n\n        this.name = this.actionMethod(); // todo shoehorned -- this needs it's own setup\n        //source = this.actionMethod(msg, source, topic);\n        // this.name = function(){ return }\n        this.emit(msg, this.name || source, topic);\n\n    };\n\n\n    doRun(msg, source, topic) {\n\n        this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source, topic) {\n\n        this.pool.handle(msg, this.name || source, topic);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\nStream.fromMonitor = function(data, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.survey();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.monitor(toStream);\n\n    return stream;\n\n};\n\n\n\nStream.fromTopicData = function(data, topicData, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || data.name;\n    stream.name = streamName;\n\n    let currentTopic = topicData.read();\n\n    const toTopicChange = function(msg){\n        data.unsubscribe(toStream, currentTopic);\n        currentTopic = msg;\n        data.subscribe(toStream, currentTopic);\n    };\n\n    topicData.subscribe(toTopicChange);\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        topicData.unsubscribe(toTopicChange);\n        data.unsubscribe(toStream, currentTopic);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.subscribe(toStream, currentTopic);\n\n    return stream;\n\n};\n\n\nStream.fromSubscribe = function(data, topic, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.subscribe(toStream, topic);\n\n    return stream;\n\n};\n\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.handle(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Stream from './stream.js';\n\n\nclass Bus {\n\n    constructor(scope, streams) {\n\n        this._frames = [];\n        this._dead = false;\n        this._scope = scope; // data scope\n        this._children = []; // from forks\n        this._parent = null;\n\n        if(scope)\n            scope._busList.push(this);\n\n        const f = new Frame(this, streams || []);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n    // todo private?\n\n    addFrame(streams) {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, streams);\n        this._frames.push(nextFrame);\n\n        _wireFrames(lastFrame, nextFrame);\n\n        return nextFrame;\n    };\n\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, wiring prior streams, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        fork.parent = this;\n        _wireFrames(this._currentFrame, fork._currentFrame, true);\n\n        return fork;\n    };\n\n    back() {\n\n        if(!this._parent)\n            throw new Error('Cannot exit fork, parent does not exist!');\n\n        return this.parent;\n\n    };\n\n    join() {\n\n        const parent = this.back();\n        parent.add(this);\n        return parent;\n\n    }\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        _wireFrames(bus._currentFrame, frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    pull() {\n\n        const frame1 = this._frames[0];\n\n        if(frame1._streams.length > 0){\n            frame1.pull();\n            return this;\n        }\n\n        if(this._frames.length !== 1){\n            const frame2 = this._frames[1];\n            frame2.pull();\n        }\n\n        return this;\n\n    };\n\n    event(name, target, eventName, useCapture) {\n\n        eventName = eventName || name;\n        F.ASSERT_NOT_HOLDING(this);\n        const stream = Stream.fromEvent(target, eventName, useCapture);\n        stream.name = name;\n        this.addFrame([stream]);\n        return this;\n\n    };\n\n    eventList(list) {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const len = list.length;\n        const streams = [];\n\n        for(let i = 0; i < len; i++){\n            const e = list[i];\n            const eventName = e.eventName || e.name;\n            const name = e.name || e.eventName;\n            const s = Stream.fromEvent(e.target, eventName, e.useCapture);\n            s.name = name;\n            streams.push(s);\n        }\n\n        this.addFrame(streams);\n        return this;\n\n    };\n\n    scan(func, seed){\n        return this.reduce(F.getScan, func, seed);\n    };\n\n    delay(num) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n        return this.when(F.getWhenKeys, keys);\n    };\n\n    group(by) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, by);\n        return this;\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.reduce(factory, ...args) :\n            this.addFrame().hold().reduce(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    timer(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.timer(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).timer(factory, ...args);\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.when(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).when(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().run(func);\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.addTarget(mergedStream);\n        }\n\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().msg(fAny);\n        return this;\n\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().source(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().filter(func);\n        return this;\n\n    };\n\n    hasKeys(keys) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hasKeys(keys);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().skipDupes();\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const frames = this._frames;\n\n        for (const f of frames) {\n            f.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n// send messages from streams in one frame to new empty streams in another frame\n// injects new streams to frame 2\n\nfunction _wireFrames(frame1, frame2, isForking) {\n\n    const streams1 = frame1._streams;\n    const streams2 = frame2._streams;\n\n    const len = streams1.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const s1 = streams1[i];\n        const s2 = new Stream(frame2);\n\n        if(!isForking)\n            s2.name = s1.name;\n\n        streams2.push(s2);\n        s1.addTarget(s2);\n\n    }\n\n}\n\n\nexport default Bus;\n","\n\nconst Nyan = {};\n\n// then = applies to all words in a phrase\n// watch: ^ = action, need, event, watch | read, must\n// then:  run, read, attr, and, style, write, blast, filter\n\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^',  react: true, subscribe: true, need: true, solo: true},\n    {name: 'WIRE',   sym: '~',  react: true, follow: true}, // INTERCEPT\n    {name: 'WATCH',  sym: null, react: true, follow: true},\n    {name: 'EVENT',  sym: '@',  react: true, event: true},\n    {name: 'ALIAS',  sym: '(',  then: true, solo: true},\n    {name: 'METHOD', sym: '`',  then: true, solo: true},\n    {name: 'READ',   sym: null, then: true, read: true},\n    {name: 'ATTR',   sym: '#',  then: true, solo: true, output: true},\n    {name: 'AND',    sym: '&',  then: true },\n    {name: 'STYLE',  sym: '$',  then: true,  solo: true, output: true },\n    {name: 'WRITE',  sym: '=',  then: true,  solo: true },\n    {name: 'SPRAY',  sym: '<',  then: true },\n    {name: 'RUN',    sym: '*',  then: true, output: true },\n    {name: 'FILTER', sym: '>',  then: true }\n\n];\n\n// cat, dog | & meow, kitten {*log} | =puppy\n\n\n// todo make ! a trailing thingie, must goes away\n// trailing defs -- ! = needs message in data to continue, ? = data must exist or throw error\n// {name: 'BEGIN',  sym: '{'}, -- fork\n// {name: 'END',    sym: '}'}, -- back\n// {name: 'PIPE',   sym: '|'}, -- phrase delimiter\n// read = SPACE\n// - is data maybe (data point might not be present)\n// ? is object maybe (object might not be there)\n// () is rename\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst thenByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n\n    if(sym) {\n        operationsBySymbol[sym] = op;\n        namesBySymbol[sym] = name;\n    }\n\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n\n    if(op.then){\n        thenByName[name] = true;\n    }\n\n    if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, need, topic, alias, monitor, extracts){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.need = need || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n        this.extracts = extracts && extracts.length ? extracts : null; // possible list of message property pulls\n        // this.useCapture =\n\n    }\n\n}\n\nlet tickStack = [];\n\nfunction toTickStackString(str){\n\n\n    tickStack = [];\n    const chunks = str.split(/([`])/);\n    const strStack = [];\n\n    let ticking = false;\n    while(chunks.length){\n        const c = chunks.shift();\n        if(c === '`'){\n            ticking = !ticking;\n            strStack.push(c);\n        } else {\n            if(ticking) {\n                tickStack.push(c);\n            } else {\n                strStack.push(c);\n            }\n        }\n    }\n\n    const result = strStack.join('');\n    //console.log('stack res', result, tickStack);\n    return result;\n}\n\nfunction parse(str, isProcess) {\n\n\n    str = toTickStackString(str);\n\n    const sentences = [];\n\n    // split on curlies and remove empty chunks (todo optimize for parsing speed, batch loop operations?)\n    let chunks = str.split(/([{}]|-})/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === '}' || chunk === '{' || chunk === '-}') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            sentences.push(sentence);\n\n    }\n\n    return validate(sentences, isProcess);\n\n\n}\n\nfunction validate(sentences, isProcess){\n\n    const cmdList = [];\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase && !isProcess) {\n                    validateReactPhrase(phrase);\n                    firstPhrase = false;\n                    cmdList.push({name: 'REACT', phrase: phrase});\n                }\n                else {\n                    validateProcessPhrase(phrase);\n                    cmdList.push({name: 'PROCESS', phrase: phrase});\n                }\n            }\n\n        } else if (s === '{') {\n            cmdList.push({name: 'FORK'});\n        } else if (s === '}') {\n            cmdList.push({name: 'BACK'});\n        } else if (s === '-}') {\n            cmdList.push({name: 'JOIN'});\n        }\n    }\n\n    return cmdList;\n}\n\n\nfunction validateReactPhrase(phrase){\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const operation = nw.operation = nw.operation || 'WATCH';\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with an observation!');\n\n}\n\n\n\nfunction validateProcessPhrase(phrase){\n\n    const firstPhrase = phrase[0];\n    const firstOperation = firstPhrase.operation || 'READ';\n\n    if(!thenByName[firstOperation])\n        throw new Error('Illegal operation in phrase!'); // unknown or reactive\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        nw.operation = nw.operation || firstOperation;\n        if(nw.operation !== firstOperation){\n\n           // console.log('mult', nw.operation, firstOperation);\n            throw new Error('Multiple operation types in phrase (only one allowed)!');\n\n        }\n\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        //console.log('word=', rawWord);\n        const rawChunks = rawWord.split(/([(?!:.`)])/);\n        const chunks = [];\n        let inMethod = false;\n\n        // white space is only allowed between e.g. `throttle 200`, `string meow in the hat`\n\n        while(rawChunks.length){\n            const next = rawChunks.shift();\n            if(next === '`'){\n                inMethod = !inMethod;\n                chunks.push(next);\n            } else {\n                if(!inMethod){\n                    const trimmed = next.trim();\n                    if(trimmed)\n                        chunks.push(trimmed);\n                } else {\n                    chunks.push(next);\n                }\n            }\n        }\n\n        //console.log('to:', chunks);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start).trim();\n        const extracts = [];\n\n        // todo hack (rename)\n\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n        let need = false;\n\n        if(operation === 'ALIAS'){\n            alias = chunks.shift();\n            chunks.shift(); // todo verify ')'\n        } else if (operation === 'METHOD'){\n                chunks.shift();\n                // const next = chunks.shift();\n                const next = tickStack.shift();\n                const i = next.indexOf(' ');\n                if(i === -1) {\n                    extracts.push(next);\n                } else {\n                    extracts.push(next.slice(0, i));\n                    if(next.length > i){\n                        extracts.push(next.slice(i + 1));\n                    }\n                }\n\n            while(chunks.length){ chunks.shift(); }\n        }\n\n        while(chunks.length){\n\n            const c = chunks.shift();\n\n            switch(c){\n\n                case '.':\n\n                    const prop = chunks.length && chunks[0]; // todo assert not operation\n                    const silentFail = chunks.length > 1 && (chunks[1] === '?');\n\n                    if(prop) {\n                        extracts.push({name: prop, silentFail: silentFail});\n                        chunks.shift(); // remove word from queue\n                        if(silentFail)\n                            chunks.shift(); // remove ? from queue\n                    }\n\n                    break;\n\n                case '?':\n\n                    maybe = true;\n                    break;\n\n                case '!':\n\n                    need = true;\n                    break;\n\n                case ':':\n\n                    if(chunks.length){\n                        const next = chunks[0];\n                        if(next === '('){\n                            monitor = true;\n                        } else {\n                            topic = next;\n                            chunks.shift(); // remove topic from queue\n                        }\n                    } else {\n                        monitor = true;\n                    }\n\n                    break;\n\n                case '(':\n\n                    if(chunks.length){\n                        alias = chunks.shift(); // todo assert not operation\n                    }\n\n                    break;\n\n\n\n            }\n\n        }\n\n        alias = alias || topic || name;\n        const nw = new NyanWord(name, operation, maybe, need, topic, alias, monitor, extracts);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","import Stream from './stream.js';\nimport Nyan from './nyan.js';\n\n\nfunction getPacketFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    const peek = data && data.peek(word.topic);\n    return peek;\n\n}\n\n\nfunction getSurveyFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    return data && data.survey();\n\n}\n\nfunction throwError(msg){\n    console.log('throwing ', msg);\n    const e = new Error(msg);\n    console.log(this, e);\n    throw e;\n}\n\nfunction getDoSkipNamedDupes(names){\n\n    let lastMsg = {};\n    const len = names.length;\n\n    return function doSkipNamedDupes(msg) {\n\n        let diff = false;\n        for(let i = 0; i < len; i++){\n            const name = names[i];\n            if(!lastMsg.hasOwnProperty(name) || lastMsg[name] !== msg[name])\n                diff = true;\n            lastMsg[name] = msg[name];\n        }\n\n        return diff;\n\n    };\n}\n\n\nfunction getDoWrite(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n\n    return function doWrite(msg) {\n        data.write(msg, word.topic);\n    };\n\n}\n\n\nfunction getDoSpray(scope, phrase){\n\n    const wordByAlias = {};\n    const dataByAlias = {};\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++){ // todo, validate no dupe alias in word validator for spray\n\n        const word = phrase[i];\n        const data = scope.find(word.name, !word.maybe);\n        if(data) { // might not exist if optional\n            wordByAlias[word.alias] = word;\n            dataByAlias[word.alias] = data;\n        }\n\n    }\n\n    return function doWrite(msg) {\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                const msgPart = msg[alias];\n                data.silentWrite(msgPart, word.topic);\n            }\n\n        }\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                data.refresh(word.topic);\n            }\n\n        }\n\n\n    };\n\n\n}\n\n\nfunction getDoRead(scope, phrase){\n\n    const len = phrase.length;\n    const firstWord = phrase[0];\n\n    if(len > 1 || firstWord.monitor) { // if only reading word is a wildcard subscription then hash as well\n        return getDoReadMultiple(scope, phrase);\n    } else {\n        return getDoReadSingle(scope, firstWord);\n    }\n\n}\n\n\nfunction getDoAnd(scope, phrase) {\n\n    return getDoReadMultiple(scope, phrase, true);\n\n}\n\n\nfunction getDoReadSingle(scope, word) {\n\n    return function doReadSingle() {\n\n        const packet = getPacketFromDataWord(scope, word);\n        return packet && packet.msg;\n\n    };\n\n}\n\n\nfunction getDoReadMultiple(scope, phrase, isAndOperation){\n\n\n        const len = phrase.length;\n\n\n        return function doReadMultiple(msg, source) {\n\n            const result = {};\n\n            if(isAndOperation){\n\n                if(source){\n                    result[source] = msg;\n                } else {\n                    for (const p in msg) {\n                        result[p] = msg[p];\n                    }\n                }\n            }\n\n            for (let i = 0; i < len; i++) {\n                const word = phrase[i];\n\n                if(word.monitor){\n\n                    const survey = getSurveyFromDataWord(scope, word);\n                    for(const [key, value] of survey){\n                        result[key] = value;\n                    }\n\n                } else {\n\n                    const packet = getPacketFromDataWord(scope, word);\n                    const prop = word.monitor ? (word.alias || word.topic) : (word.alias || word.name);\n                    if (packet)\n                        result[prop] = packet.msg;\n\n                }\n\n            }\n\n            return result;\n\n        };\n\n}\n\n\n// get data stream -- store data in bus, emit into stream on pull()\n\n\nfunction getDataStream(scope, word, canPull) {\n\n    const data = scope.find(word.name, !word.maybe);\n    if(word.monitor){\n        return Stream.fromMonitor(data, word.alias, canPull);\n    } else {\n        return Stream.fromSubscribe(data, word.topic, word.alias, canPull);\n    }\n\n}\n\nfunction isObject(v) {\n    if (v === null)\n        return false;\n    return (typeof v === 'function') || (typeof v === 'object');\n}\n\n\nfunction getEventStream(scope, word, node){\n\n    return Stream.fromEvent(node, word.topic, word.useCapture, word.alias);\n\n}\n\nfunction doExtracts(value, extracts) {\n\n    let result = value;\n    const len = extracts.length;\n\n    for (let i = 0; i < len; i++) {\n        const extract = extracts[i];\n        if(!isObject(result)) {\n            if(extract.silentFail)\n                return undefined;\n\n            throwError('Cannot access property \\'' + extract.name + '\\' of ' + result);\n\n        }\n        result = result[extract.name];\n    }\n\n\n    return result;\n\n}\n\nfunction getNeedsArray(phrase){\n    return phrase.filter(word => word.operation.need).map(word => word.alias);\n}\n\nfunction getDoMsgHashExtract(words) {\n\n    const len = words.length;\n    const extractsByAlias = {};\n\n    for (let i = 0; i < len; i++) {\n\n        const word = words[i];\n        extractsByAlias[word.alias] = word.extracts;\n\n    }\n\n    return function(msg) {\n\n        const result = {};\n        for(const alias in extractsByAlias){\n            const hasProp = msg.hasOwnProperty(alias);\n            if(hasProp){\n                result[alias] = doExtracts(msg[alias], extractsByAlias[alias]);\n            }\n        }\n\n        return result;\n\n    };\n\n}\n\nfunction getDoMsgExtract(word) {\n\n    const extracts = word.extracts;\n\n    return function(msg){\n        return doExtracts(msg, extracts);\n    }\n\n}\n\n\nfunction applyReaction(scope, bus, phrase, target) { // target is some event emitter\n\n    const need = [];\n    const skipDupes = [];\n    const streams = [];\n    const extracts = [];\n\n    if(phrase.length === 1 && phrase[0].operation === 'ACTION'){\n        bus.addFrame(getDataStream(scope, phrase[0], false));\n        return;\n    }\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const word = phrase[i];\n        const operation = word.operation;\n\n        if(operation === 'WATCH') {\n            streams.push(getDataStream(scope, word, true));\n            skipDupes.push(word.alias)\n        }\n        else if(operation === 'WIRE'){\n            streams.push(getDataStream(scope, word, true));\n        }\n        else if(operation === 'EVENT') {\n            streams.push(getEventStream(scope, word));\n        }\n\n        if(word.extracts)\n            extracts.push(word);\n\n        if(word.need)\n            need.push(word.alias);\n\n    }\n\n    bus.addFrame(streams);\n\n    if(streams.length > 1) {\n\n        bus.merge().group().batch();\n\n        if(extracts.length)\n            bus.msg(getDoMsgHashExtract(extracts));\n\n        if(need.length)\n            bus.hasKeys(need);\n\n        if(skipDupes.length){\n            bus.filter(getDoSkipNamedDupes(skipDupes));\n        }\n\n    } else {\n\n        if(extracts.length)\n            bus.msg(getDoMsgExtract(extracts[0]));\n\n        if(skipDupes.length)\n            bus.skipDupes();\n\n    }\n\n}\n\nfunction isTruthy(msg){ return !!msg; };\nfunction isFalsey(msg){ return !msg; };\n\n\nfunction applyMethod(bus, word) {\n\n    const method = word.extracts[0];\n\n    switch(method){\n\n        case 'true':\n            bus.msg(true);\n            break;\n\n        case 'false':\n            bus.msg(false);\n            break;\n\n        case 'null':\n            bus.msg(null);\n            break;\n\n        case 'undefined':\n            bus.msg(undefined);\n            break;\n\n        case 'array':\n            bus.msg([]);\n            break;\n\n        case 'object':\n            bus.msg({});\n            break;\n\n        case 'truthy':\n            bus.filter(isTruthy);\n            break;\n\n        case 'falsey':\n            bus.filter(isFalsey);\n            break;\n\n        case 'string':\n            bus.msg(function(){ return word.extracts[1];});\n            break;\n\n            // throttle x, debounce x, delay x, last x, first x, all\n\n    }\n\n}\n\nfunction applyProcess(scope, bus, phrase, context, node) {\n\n    const operation = phrase[0].operation; // same for all words in a process phrase\n\n    if(operation === 'READ') {\n        bus.msg(getDoRead(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'AND') {\n        bus.msg(getDoAnd(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if (needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'METHOD') {\n        applyMethod(bus, phrase[0]);\n    } else if (operation === 'FILTER') {\n        applyFilterProcess(bus, phrase, context);\n    } else if (operation === 'RUN') {\n        applyMsgProcess(bus, phrase, context);\n    } else if (operation === 'ALIAS') {\n        applySourceProcess(bus, phrase[0]);\n    } else if (operation === 'WRITE') {\n        bus.run(getDoWrite(scope, phrase[0]));\n    } else if (operation === 'SPRAY') {\n        bus.run(getDoSpray(scope, phrase)); // todo validate that writes do not contain words in reacts\n\n    }\n\n}\n\n\n\nfunction applyMsgProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.msg(f);\n\n    }\n\n}\n\n\nfunction applyRunProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.run(f);\n\n    }\n\n}\n\nfunction applySourceProcess(bus, word){\n\n    bus.source(word.alias);\n\n}\n\n\nfunction applyFilterProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.filter(f);\n\n    }\n\n}\n\n\nfunction nyanToBus(scope, bus, str, context, target){\n\n    const nyan = Nyan.parse(str);\n    const len = nyan.length;\n\n    for(let i = 0; i < len; i++){\n\n        const cmd = nyan[i];\n        const name = cmd.name;\n        const phrase = cmd.phrase;\n\n      //  console.log('----', name, phrase);\n\n        if(name === 'JOIN') {\n            bus = bus.join();\n            bus.merge();\n            bus.group();\n            bus.sync();\n        } else if(name === 'FORK'){\n            bus = bus.fork();\n        } else if (name === 'BACK'){\n            bus = bus.back();\n        } else {\n\n            if(name === 'PROCESS')\n                applyProcess(scope, bus, phrase, context, target);\n            else // name === 'REACT'\n                applyReaction(scope, bus, phrase, target);\n\n        }\n    }\n\n    return bus;\n\n}\n\nexport default nyanToBus;","\nimport F from './flib.js';\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\nimport Stream from './stream.js';\nimport nyanToBus from './nyanBus.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n\n    // todo react via nyan (so it can be precompiled and reused\n    react(str, context, node){ // string is Nyan\n\n        if(!str)\n            throw new Error('Need a Nyan phrase!');\n\n        let b = new Bus(this);\n\n        return nyanToBus(this, b, str, context, node);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Stream from './stream.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const stream = Stream.fromEvent(target, eventName, useCapture);\n    return new Bus(null, [stream]);\n\n};\n\n// todo stable output queue -- output pools go in a queue that runs after the batch q is cleared, thus run once only\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\n\nCatbus.createChild = Catbus.scope = function(name){\n\n    return new Scope(name);\n\n};\n\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","msg","source","TO_TOPIC","topic","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","hasOwnProperty","noLatch","hadMsg","lastMsg","diff","bus","holding","To_MSG","Packet","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","name","currentPacket","ACTION","subscribers","concat","s","handle","watcher","indexOf","splice","Data","scope","NONE","_scope","_type","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","undefined","get","set","expectedType","subscribe","packet","peek","_demandSubscriberList","add","remove","entries","m","key","value","lastPacket","subscriberList","write","MIRROR","read","PoolAspects","until","reduce","when","clear","timer","Frame","streams","_bus","_index","_frames","_holding","_streams","_process","_action","_isFactory","_poolAspects","debugFrame","action","isFactory","actionMethod","processMethod","createPool","doPool","pull","stateful","applySyncProcess","fAny","F","getSkipDupes","getHasKeys","factory","buildPoolAspect","aspect","build","cleanupMethod","Pool","isPrimed","prop","hasContent","emit","Stream","children","thisStream","c","fromMonitor","canPull","streamName","toStream","unsubscribe","survey","monitor","fromTopicData","topicData","currentTopic","toTopicChange","fromSubscribe","fromEvent","target","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Bus","_children","_parent","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","fork","parent","back","frame","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","hold","frame1","frame2","e","getScan","num","ASSERT_NEED_ONE_ARGUMENT","delay","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","getKeepAll","getKeepFirst","getKeepLast","ASSERT_IS_FUNCTION","run","mergedStream","addTarget","transform","fStr","filter","hasKeys","skipDupes","frames","map","d","newParent","oldParent","_wireFrames","isForking","streams1","streams2","s1","s2","Nyan","operationDefs","sym","react","need","solo","follow","event","then","output","operationsBySymbol","operationsByName","symbolsByName","namesBySymbol","reactionsByName","withReactionsByName","thenByName","op","NyanWord","operation","maybe","alias","extracts","tickStack","toTickStackString","str","chunks","split","strStack","ticking","result","join","parse","isProcess","sentences","trim","chunk","sentence","parseSentence","validate","cmdList","firstPhrase","j","phrase","validateReactPhrase","hasReaction","nw","validateProcessPhrase","firstOperation","parsePhrase","words","rawWords","rawWord","rawChunks","inMethod","trimmed","nameAndOperation","firstChar","start","slice","silentFail","getPacketFromDataWord","word","find","getSurveyFromDataWord","throwError","log","getDoSkipNamedDupes","names","doSkipNamedDupes","getDoWrite","doWrite","getDoSpray","wordByAlias","dataByAlias","msgPart","silentWrite","refresh","getDoRead","firstWord","getDoReadMultiple","getDoReadSingle","getDoAnd","doReadSingle","isAndOperation","doReadMultiple","getDataStream","isObject","getEventStream","node","doExtracts","extract","getNeedsArray","getDoMsgHashExtract","extractsByAlias","hasProp","getDoMsgExtract","applyReaction","merge","group","batch","isTruthy","isFalsey","applyMethod","method","applyProcess","context","needs","whenKeys","applyMsgProcess","applySourceProcess","applyFilterProcess","nyanToBus","nyan","cmd","sync","idCounter","_destroyEach","arr","item","Scope","_id","_dataList","_valves","_mirrors","b","child","mirror","Object","create","grab","_createData","verify","STATE","state","_createMirror","required","dataSet","findDataSet","appliedValves","dataList","valves","mirrors","size","has","delete","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","w","writeHash","from","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","process","nextTick","createChild","cycles","q"],"mappings":"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"}
{"version":3,"file":"catbus.umd.js","sources":["../src/flib.js","../src/packet.js","../src/dataTypes.js","../src/subscriberList.js","../src/data.js","../src/poolAspects.js","../src/frame.js","../src/pool.js","../src/stream.js","../src/bus.js","../src/nyan.js","../src/nyanBus.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(){\n        const pool = this;\n        return function() {\n            Catbus.enqueue(pool);\n        }\n    },\n\n    getSyncTimer: function(){\n        const pool = this;\n        return function() {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        const pool = this;\n        return function() {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    handle(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.handle(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\nconst NO_TOPIC = '___NO_TOPIC___';\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        topic = topic || undefined;\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.handle(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).remove(watcher);\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n    topics(){\n\n        return this._subscriberListsByTopic.keys();\n\n    };\n\n    survey(){ // get entire key/value store by topic:lastPacket\n\n        const entries = this._subscriberListsByTopic.entries();\n        const m = new Map();\n        for (const [key, value] of entries) {\n            m.set(key, value.lastPacket);\n        }\n\n        return m;\n    };\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const subscriberList = this._subscriberListsByTopic.get(topic);\n        return subscriberList ? subscriberList.lastPacket : null;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        topic = topic || undefined;\n        const list = this._demandSubscriberList(topic);\n        list.handle(msg, topic, silently);\n        this._wildcardSubscriberList.handle(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const lastPacket = this.peek(topic);\n\n        if(lastPacket)\n            this.write(lastPacket._msg, topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nclass PoolAspects {\n\n    constructor() {\n\n        this.until      = null;\n        this.reduce     = null;\n        this.when       = null;\n        this.clear      = null;\n        this.timer      = null;\n\n    };\n\n}\n\nexport default PoolAspects;\n\n//\n// this._keep = null; // pool storage\n// this._until = null; // stream end lifecycle -- todo switch until to when in current setup\n// this._timer = null; // release from pool timer\n// this._clear = false; // condition to clear storage on release\n// this._when = false; // invokes timer for release\n","import F from './flib.js';\nimport PoolAspects from './poolAspects.js';\n\n\nclass Frame {\n\n    constructor(bus, streams) {\n\n        streams = streams || [];\n        this._bus = bus;\n        this._index = bus._frames.length;\n        this._holding = false; //begins group, keep, schedule frames\n        this._streams = streams;\n\n        this._process = null; // name of sync process method in streams\n        this._action = null; // function defining sync stream action\n        this._isFactory = false; // whether sync action is a stateful factory function\n\n        this._poolAspects = null;\n\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].debugFrame = this;\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    get streams() {\n        return [].concat(this._streams);\n    }\n\n    applySyncProcess(name, action, isFactory){ // generate means action function must be called to generate stateful action\n\n        this._process = name;\n        this._action = action;\n        this._isFactory = isFactory;\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        if(isFactory) {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action();\n                s.processMethod = s[name];\n            }\n        } else {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action;\n                s.processMethod = s[name];\n            }\n        }\n\n        return this;\n\n    };\n\n    hold(){\n\n        this._holding = true;\n        this._poolAspects = new PoolAspects();\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.createPool();\n            s.processMethod = s.doPool;\n        }\n\n        return this;\n\n    };\n\n    pull(){\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.pull();\n        }\n\n    };\n\n    run(func, stateful){\n        return this.applySyncProcess('doRun', func, stateful);\n    };\n\n    msg(fAny, stateful){\n        return this.applySyncProcess('doMsg', F.FUNCTOR(fAny), stateful);\n    };\n\n\n    transform(fAny, stateful){\n        return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    };\n\n    source(fStr, stateful){\n        return this.applySyncProcess('doSource', F.FUNCTOR(fStr), stateful);\n    };\n\n    delay(fNum, stateful){\n        return this.applySyncProcess('doDelay', F.FUNCTOR(fNum), stateful);\n    };\n\n    filter(func, stateful){\n        return this.applySyncProcess('doFilter', func, stateful);\n    };\n\n    skipDupes() {\n        return this.applySyncProcess('doFilter', F.getSkipDupes, true);\n    };\n\n    clear(factory, ...args){\n        return this.buildPoolAspect('clear', factory, ...args);\n    };\n\n    // factory should define content and reset methods have signature f(msg, source) return f.content()\n\n    reduce(factory, ...args){\n        return this.buildPoolAspect('keep', factory, ...args);\n    };\n\n    timer(factory, ...args){\n        return this.buildPoolAspect('timer', factory, ...args);\n    };\n\n    when(factory, ...args){\n        return this.buildPoolAspect('when', factory, ...args);\n    };\n\n    until(factory, ...args){\n        return this.buildPoolAspect('until', factory, ...args);\n    };\n\n    buildPoolAspect(aspect, factory, ...args){\n\n        if(aspect === 'timer')\n            this._holding = false;\n\n        this._poolAspects[aspect] = [factory, ...args];\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build(aspect, factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n    destroy(){\n\n        const streams = this._streams;\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].cleanupMethod();\n        }\n        this._streams = null;\n\n    };\n    \n}\n\nexport default Frame;\n\n\n","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(stream){\n\n        this.stream = stream;\n\n        this.keep = null;\n        this.when = F.ALWAYS_TRUE;\n        this.until = F.ALWAYS_TRUE;\n        this.timer = null; // throttle, debounce, defer, batch, sync\n        this.clear = F.ALWAYS_FALSE;\n        this.isPrimed = false;\n        this.source = stream.name;\n\n    };\n\n    handle(msg, source) {\n\n        this.keep(msg, source);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.stream.emit(msg, pool.stream.name);\n\n    };\n\n}\n\n\n\nexport default Pool;","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.debugFrame = null;\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    handle(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, source); // handle method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, topic, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.handle(msg, source, topic);\n        }\n\n    };\n\n    doFilter(msg, source, topic) {\n\n        if(!this.actionMethod(msg, source, topic))\n            return;\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doMsg(msg, source, topic) {\n\n        msg = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    doTransform(msg, source, topic) {\n\n\n        msg = this.actionMethod.msg ? this.actionMethod.msg(msg, source, topic) : msg;\n        source = this.actionMethod.source ? this.actionMethod.source(msg, source, topic) : source;\n        topic = this.actionMethod.topic ? this.actionMethod.topic(msg, source, topic) : topic;\n        this.emit(msg, source, topic);\n\n    };\n\n    doDelay(msg, source, topic) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod(msg, source, topic) || 0, msg, source, topic, this);\n\n    };\n\n    doSource(msg, source, topic) {\n\n        source = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doRun(msg, source, topic) {\n\n        this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source, topic) {\n\n        this.pool.handle(msg, source, topic);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\nStream.fromMonitor = function(data, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName || source, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.survey();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.monitor(toStream);\n\n    return stream;\n\n};\n\n\nStream.fromSubscribe = function(data, topic, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName || source, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.subscribe(toStream, topic);\n\n    return stream;\n\n};\n\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.handle(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Stream from './stream.js';\n\n\nclass Bus {\n\n    constructor(scope, streams) {\n\n        this._frames = [];\n        this._dead = false;\n        this._scope = scope; // data scope\n        this._children = []; // from forks\n        this._parent = null;\n\n        if(scope)\n            scope._busList.push(this);\n\n        const f = new Frame(this, streams || []);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame(streams) {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, streams);\n        this._frames.push(nextFrame);\n\n        _wireFrames(lastFrame, nextFrame);\n\n        return nextFrame;\n    };\n\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, wiring prior streams, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        fork.parent = this;\n        _wireFrames(this._currentFrame, fork._currentFrame);\n\n        return fork;\n    };\n\n    back() {\n\n        if(!this._parent)\n            throw new Error('Cannot exit fork, parent does not exist!');\n\n        return this.parent;\n\n    };\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        _wireFrames(bus._currentFrame, frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    pull() {\n\n        const frame1 = this._frames[0];\n\n        if(frame1._streams.length > 0){\n            frame1.pull();\n            return this;\n        }\n\n        if(this._frames.length !== 1){\n            const frame2 = this._frames[1];\n            frame2.pull();\n        }\n\n        return this;\n\n    };\n\n    event(name, target, eventName, useCapture) {\n\n        eventName = eventName || name;\n        F.ASSERT_NOT_HOLDING(this);\n        const stream = Stream.fromEvent(target, eventName, useCapture);\n        stream.name = name;\n        this.addFrame([stream]);\n        return this;\n\n    };\n\n    eventList(list) {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const len = list.length;\n        const streams = [];\n\n        for(let i = 0; i < len; i++){\n            const e = list[i];\n            const eventName = e.eventName || e.name;\n            const name = e.name || e.eventName;\n            const s = Stream.fromEvent(e.target, eventName, e.useCapture);\n            s.name = name;\n            streams.push(s);\n        }\n\n        this.addFrame(streams);\n        return this;\n\n    };\n\n    scan(func, seed){\n        return this.reduce(F.getScan, func, seed);\n    };\n\n    delay(num) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n        return this.when(F.getWhenKeys, keys);\n    };\n\n    group(by) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, by);\n        return this;\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.reduce(factory, ...args) :\n            this.addFrame().hold().reduce(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    timer(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.timer(factory, ...args) :\n            this.addFrame().hold().timer(factory, ...args);\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.when(factory, ...args) :\n            this.addFrame().hold().when(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().run(func);\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.addTarget(mergedStream);\n        }\n\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().msg(fAny);\n        return this;\n\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().source(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().filter(func);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().skipDupes();\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const frames = this._frames;\n\n        for (const f of frames) {\n            f.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n// send messages from streams in one frame to new empty streams in another frame\n// injects new streams to frame 2\n\nfunction _wireFrames(frame1, frame2) {\n\n    const streams1 = frame1._streams;\n    const streams2 = frame2._streams;\n\n    const len = streams1.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const s1 = streams1[i];\n        const s2 = new Stream(frame2);\n        s2.name = s1.name;\n        streams2.push(s2);\n        s1.addTarget(s2);\n\n    }\n\n}\n\n\nexport default Bus;\n","\n\nconst Nyan = {};\n\n// then = applies to all words in a phrase\n// watch: ^ = action, need, event, watch | read, must\n// then:  run, read, attr, and, style, write, blast, filter\n\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^',  react: true, subscribe: true, need: true, solo: true},\n    {name: 'WIRE',   sym: '~',  react: true, follow: true}, // INTERCEPT\n    {name: 'WATCH',  sym: null, react: true, follow: true},\n    {name: 'EVENT',  sym: '@',  react: true, event: true},\n    {name: 'ALIAS',  sym: '(',  then: true, solo: true},\n    {name: 'READ',   sym: null, then: true, read: true},\n    {name: 'ATTR',   sym: '#',  then: true, solo: true, output: true},\n    {name: 'AND',    sym: '&',  then: true },\n    {name: 'STYLE',  sym: '$',  then: true,  solo: true, output: true },\n    {name: 'WRITE',  sym: '=',  then: true,  solo: true },\n    {name: 'SPRAY',  sym: '<',  then: true },\n    {name: 'RUN',    sym: '*',  then: true, output: true },\n    {name: 'FILTER', sym: '>',  then: true }\n\n];\n\n// cat, dog | & meow, kitten {*log} | =puppy\n\n\n// todo make ! a trailing thingie, must goes away\n// trailing defs -- ! = needs message in data to continue, ? = data must exist or throw error\n// {name: 'BEGIN',  sym: '{'}, -- fork\n// {name: 'END',    sym: '}'}, -- back\n// {name: 'PIPE',   sym: '|'}, -- phrase delimiter\n// read = SPACE\n// - is data maybe (data point might not be present)\n// ? is object maybe (object might not be there)\n// () is rename\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst thenByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n\n    if(sym) {\n        operationsBySymbol[sym] = op;\n        namesBySymbol[sym] = name;\n    }\n\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n\n    if(op.then){\n        thenByName[name] = true;\n    }\n\n    if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, need, topic, alias, monitor, extracts){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.need = need || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n        this.extracts = extracts && extracts.length ? extracts : null; // possible list of message property pulls\n        // this.useCapture =\n\n    }\n\n}\n\n\nfunction parse(str, isProcess) {\n\n    const sentences = [];\n\n    // split on parentheses and remove empty chunks (todo optimize for speed)\n    let chunks = str.split(/([{}])/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === '}' || chunk === '{') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            sentences.push(sentence);\n\n    }\n\n    if(str.indexOf('poo') !== -1)\n        console.log(str, sentences);\n    return validate(sentences, isProcess);\n\n\n}\n\nfunction validate(sentences, isProcess){\n\n    const cmdList = [];\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase && !isProcess) {\n                    validateReactPhrase(phrase);\n                    firstPhrase = false;\n                    cmdList.push({name: 'REACT', phrase: phrase});\n                }\n                else {\n                    validateProcessPhrase(phrase);\n                    cmdList.push({name: 'PROCESS', phrase: phrase});\n                }\n            }\n        } else if (s === '{') {\n            cmdList.push({name: 'FORK'});\n        } else if (s === '}') {\n            cmdList.push({name: 'BACK'});\n        }\n    }\n\n    return cmdList;\n}\n\n\nfunction validateReactPhrase(phrase){\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const operation = nw.operation = nw.operation || 'WATCH';\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with an observation!');\n\n}\n\n\n\nfunction validateProcessPhrase(phrase){\n\n    const firstPhrase = phrase[0];\n    const firstOperation = firstPhrase.operation || 'READ';\n\n    if(!thenByName[firstOperation])\n        throw new Error('Illegal operation in phrase!'); // unknown or reactive\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        nw.operation = nw.operation || firstOperation;\n        if(nw.operation !== firstOperation){\n\n            console.log('mult', nw.operation, firstOperation);\n            throw new Error('Multiple operation types in phrase (only one allowed)!');\n\n        }\n\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        console.log('word=', rawWord);\n        const chunks = rawWord.split(/([(?!:.)])/).map(d => d.trim()).filter(d => d);\n        console.log('to:', chunks);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start);\n        const extracts = [];\n\n        // todo hack (rename)\n\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n        let need = false;\n\n        if(operation === 'ALIAS'){\n            alias = chunks.shift();\n        }\n\n        while(chunks.length){\n\n            const c = chunks.shift();\n\n            switch(c){\n\n                case '.':\n\n                    const prop = chunks.length && chunks[0]; // todo assert not operation\n                    const silentFail = chunks.length > 1 && (chunks[1] === '?');\n\n                    if(prop) {\n                        extracts.push({name: prop, silentFail: silentFail});\n                        chunks.shift(); // remove word from queue\n                        if(silentFail)\n                            chunks.shift(); // remove ? from queue\n                    }\n\n                    break;\n\n                case '?':\n\n                    maybe = true;\n                    break;\n\n                case '!':\n\n                    need = true;\n                    break;\n\n                case ':':\n\n                    if(chunks.length){\n                        const next = chunks[0];\n                        if(next === '('){\n                            monitor = true;\n                        } else {\n                            topic = next;\n                            chunks.shift(); // remove topic from queue\n                        }\n                    } else {\n                        monitor = true;\n                    }\n\n                    break;\n\n                case '(':\n\n                    if(chunks.length){\n                        alias = chunks.shift(); // todo assert not operation\n                    }\n\n                    break;\n\n            }\n\n        }\n\n        alias = alias || topic || name;\n        const nw = new NyanWord(name, operation, maybe, need, topic, alias, monitor, extracts);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","import Stream from './stream.js';\nimport Nyan from './nyan.js';\n\n\nfunction getPacketFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    const peek = data && data.peek(word.topic);\n    return peek;\n\n}\n\n\nfunction getSurveyFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    return data && data.survey();\n\n}\n\nfunction throwError(msg){\n    console.log('throwing ', msg);\n    const e = new Error(msg);\n    console.log(this, e);\n    throw e;\n}\n\nfunction getDoSkipNamedDupes(names){\n\n    let lastMsg = {};\n    const len = names.length;\n\n    return function doSkipNamedDupes(msg) {\n\n        let diff = false;\n        for(let i = 0; i < len; i++){\n            const name = names[i];\n            if(!lastMsg.hasOwnProperty(name) || lastMsg[name] !== msg[name])\n                diff = true;\n            lastMsg[name] = msg[name];\n        }\n\n        return diff;\n\n    };\n}\n\n\nfunction getDoWrite(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n\n    return function doWrite(msg, source, topic) {\n        data.write(msg, topic);\n    };\n\n}\n\n\nfunction getDoSpray(scope, phrase){\n\n    const wordByAlias = {};\n    const dataByAlias = {};\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++){ // todo, validate no dupe alias in word validator for spray\n\n        const word = phrase[i];\n        const data = scope.find(word.name, !word.maybe);\n        if(data) { // might not exist if optional\n            wordByAlias[word.alias] = word;\n            dataByAlias[word.alias] = data;\n        }\n\n    }\n\n    return function doWrite(msg) {\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                const msgPart = msg[alias];\n                data.silentWrite(msgPart, word.topic);\n            }\n\n        }\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                data.refresh(word.topic);\n            }\n\n        }\n\n\n    };\n\n\n}\n\n\nfunction getDoRead(scope, phrase){\n\n    const len = phrase.length;\n    const firstWord = phrase[0];\n\n    if(len > 1 || firstWord.monitor) { // if only reading word is a wildcard subscription then hash as well\n        return getDoReadMultiple(scope, phrase);\n    } else {\n        return getDoReadSingle(scope, firstWord);\n    }\n\n}\n\n\nfunction getDoAnd(scope, phrase) {\n\n    return getDoReadMultiple(scope, phrase, true);\n\n}\n\n\nfunction getDoReadSingle(scope, word) {\n\n    return function doReadSingle() {\n\n        const packet = getPacketFromDataWord(scope, word);\n        return packet && packet.msg;\n\n    };\n\n}\n\n\nfunction getDoReadMultiple(scope, phrase, isAndOperation){\n\n\n        const len = phrase.length;\n\n\n        return function doReadMultiple(msg, source) {\n\n            const result = {};\n\n            if(isAndOperation){\n\n                if(!isObject(msg)){\n                    result[source] = msg;\n                } else {\n                    for (const p in msg) {\n                        result[p] = msg[p];\n                    }\n                }\n            }\n\n            for (let i = 0; i < len; i++) {\n                const word = phrase[i];\n\n                if(word.monitor){\n\n                    const survey = getSurveyFromDataWord(scope, word);\n                    for(const [key, value] of survey){\n                        result[key] = value;\n                    }\n\n                } else {\n\n                    const packet = getPacketFromDataWord(scope, word);\n                    const prop = word.monitor ? (word.alias || word.topic) : (word.alias || word.name);\n                    if (packet)\n                        result[prop] = packet.msg;\n\n                }\n\n            }\n\n            return result;\n\n        };\n\n}\n\n\n// get data stream -- store data in bus, emit into stream on pull()\n\n\nfunction getDataStream(scope, word, canPull) {\n\n    const data = scope.find(word.name, !word.maybe);\n    if(word.monitor){\n        return Stream.fromMonitor(data, word.alias, canPull);\n    } else {\n        return Stream.fromSubscribe(data, word.topic, word.alias, canPull);\n    }\n\n}\n\nfunction isObject(v) {\n    if (v === null)\n        return false;\n    return (typeof v === 'function') || (typeof v === 'object');\n}\n\n\nfunction getEventStream(scope, word, node){\n\n    return Stream.fromEvent(node, word.topic, word.useCapture, word.alias);\n\n}\n\nfunction doExtracts(value, extracts) {\n\n    let result = value;\n    const len = extracts.length;\n\n    for (let i = 0; i < len; i++) {\n        const extract = extracts[i];\n        if(!isObject(result)) {\n            if(extract.silentFail)\n                return undefined;\n\n            throwError('Cannot access property \\'' + extract.name + '\\' of ' + result);\n\n        }\n        result = result[extract.name];\n    }\n\n\n    return result;\n\n}\n\nfunction getNeedsArray(phrase){\n    return phrase.filter(word => word.operation.need).map(word => word.alias);\n}\n\nfunction getDoMsgHashExtract(words) {\n\n    const len = words.length;\n    const extractsByAlias = {};\n\n    for (let i = 0; i < len; i++) {\n\n        const word = words[i];\n        extractsByAlias[word.alias] = word.extracts;\n\n    }\n\n    return function(msg) {\n\n        const result = {};\n        for(const alias in extractsByAlias){\n            const hasProp = msg.hasOwnProperty(alias);\n            if(hasProp){\n                result[alias] = doExtracts(msg[alias], extractsByAlias[alias]);\n            }\n        }\n\n        return result;\n\n    };\n\n}\n\nfunction getDoMsgExtract(word) {\n\n    const extracts = word.extracts;\n\n    return function(msg){\n        return doExtracts(msg, extracts);\n    }\n\n}\n\n\nfunction applyReaction(scope, bus, phrase, target) { // target is some event emitter\n\n    const need = [];\n    const skipDupes = [];\n    const streams = [];\n    const extracts = [];\n\n    if(phrase.length === 1 && phrase[0].operation === 'ACTION'){\n        bus.addFrame(getDataStream(scope, phrase[0], false));\n        return;\n    }\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const word = phrase[i];\n        const operation = word.operation;\n\n        if(operation === 'WATCH') {\n            streams.push(getDataStream(scope, word, true));\n            skipDupes.push(word.alias)\n        }\n        else if(operation === 'WIRE'){\n            streams.push(getDataStream(scope, word, true));\n        }\n        else if(operation === 'EVENT') {\n            streams.push(getEventStream(scope, word));\n        }\n\n        if(word.extracts)\n            extracts.push(word);\n\n        if(word.need)\n            need.push(word.alias);\n\n    }\n\n    bus.addFrame(streams);\n\n    if(streams.length > 1) {\n\n        bus.merge().group().batch();\n\n        if(extracts.length)\n            bus.msg(getDoMsgHashExtract(extracts));\n\n        if(need.length)\n            bus.whenKeys(need);\n\n        if(skipDupes.length){\n            bus.filter(getDoSkipNamedDupes(skipDupes));\n        }\n\n    } else {\n\n        if(extracts.length)\n            bus.msg(getDoMsgExtract(extracts[0]));\n\n        if(skipDupes.length)\n            bus.skipDupes();\n\n    }\n\n}\n\nfunction applyProcess(scope, bus, phrase, context, node) {\n\n    const operation = phrase[0].operation; // same for all words in a process phrase\n\n    if(operation === 'READ') {\n        bus.msg(getDoRead(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'AND') {\n        bus.msg(getDoAnd(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'FILTER') {\n        applyFilterProcess(bus, phrase, context);\n    } else if (operation === 'RUN') {\n        applyRunProcess(bus, phrase, context);\n    } else if (operation === 'ALIAS') {\n        applySourceProcess(bus, phrase[0]);\n    } else if (operation === 'WRITE') {\n        bus.run(getDoWrite(scope, phrase[0]));\n    } else if (operation === 'SPRAY') {\n        bus.run(getDoSpray(scope, phrase)); // todo validate that writes do not contain words in reacts\n\n    }\n\n}\n\n\n\n\n\nfunction applyRunProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.run(f);\n\n    }\n\n}\n\nfunction applySourceProcess(bus, word){\n\n    bus.source(word.alias);\n\n}\n\n\nfunction applyFilterProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.filter(f);\n\n    }\n\n}\n\n\nfunction nyanToBus(scope, bus, str, context, target){\n\n    const nyan = Nyan.parse(str);\n    const len = nyan.length;\n\n    for(let i = 0; i < len; i++){\n\n        const cmd = nyan[i];\n        const name = cmd.name;\n        const phrase = cmd.phrase;\n\n        if(name === 'FORK'){\n            bus = bus.fork();\n        } else if (name === 'BACK'){\n            bus = bus.back();\n        } else {\n\n            if(name === 'PROCESS')\n                applyProcess(scope, bus, phrase, context, target);\n            else // name === 'REACT'\n                applyReaction(scope, bus, phrase, target);\n\n        }\n    }\n\n    return bus;\n\n}\n\nexport default nyanToBus;","\nimport F from './flib.js';\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\nimport Stream from './stream.js';\nimport nyanToBus from './nyanBus.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n\n    react(str, context, node){ // string is Nyan\n\n        if(!str)\n            throw new Error('Need a Nyan phrase!');\n\n        let b = new Bus(this);\n\n        return nyanToBus(this, b, str, context, node);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Stream from './stream.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const stream = Stream.fromEvent(target, eventName, useCapture);\n    return new Bus(null, [stream]);\n\n};\n\n// todo stable output queue -- output pools go in a queue that runs after the batch q is cleared, thus run once only\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\n\nCatbus.scope = function(name){\n\n    console.log('NYAN');\n    const k = Nyan.parse('^bunny?:error(badbunny), cow:(huh), moo2?(meow) | %kitten' +\n        '                       {*toMuffin | =order {=raw}} =meow {you} =woo');\n\n    for(const cmd of k){\n        console.log('CMD: ', cmd.name);\n        const phrase = cmd.phrase;\n        if(!phrase)\n            continue;\n        for(const word of phrase){\n            console.log(word.name, word.operation, word.maybe);\n        }\n    }\n\n    console.log(k);\n\n    console.log('root is ', name);\n    return new Scope(name);\n\n};\n\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","msg","source","TO_TOPIC","topic","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","hasOwnProperty","hadMsg","lastMsg","diff","bus","holding","To_MSG","Packet","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","name","currentPacket","ACTION","subscribers","concat","s","handle","watcher","indexOf","splice","Data","scope","NONE","_scope","_type","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","undefined","get","set","expectedType","subscribe","packet","peek","_demandSubscriberList","add","remove","entries","m","key","value","lastPacket","subscriberList","write","MIRROR","read","PoolAspects","until","reduce","when","clear","timer","Frame","streams","_bus","_index","_frames","_holding","_streams","_process","_action","_isFactory","_poolAspects","debugFrame","action","isFactory","actionMethod","processMethod","createPool","doPool","pull","stateful","applySyncProcess","fAny","F","fStr","getSkipDupes","factory","buildPoolAspect","aspect","build","cleanupMethod","Pool","isPrimed","prop","hasContent","emit","Stream","children","thisStream","c","fromMonitor","canPull","streamName","toStream","unsubscribe","survey","monitor","fromSubscribe","fromEvent","target","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Bus","_children","_parent","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","fork","parent","frame","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","hold","frame1","frame2","e","getScan","num","ASSERT_NEED_ONE_ARGUMENT","delay","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","getKeepAll","getKeepFirst","getKeepLast","ASSERT_IS_FUNCTION","run","mergedStream","addTarget","transform","filter","skipDupes","frames","map","d","newParent","oldParent","_wireFrames","streams1","streams2","s1","s2","Nyan","operationDefs","sym","react","need","solo","follow","event","then","output","operationsBySymbol","operationsByName","symbolsByName","namesBySymbol","reactionsByName","withReactionsByName","thenByName","op","NyanWord","operation","maybe","alias","extracts","parse","str","isProcess","sentences","chunks","split","trim","chunk","sentence","parseSentence","console","log","validate","cmdList","firstPhrase","j","phrase","validateReactPhrase","hasReaction","nw","validateProcessPhrase","firstOperation","result","parsePhrase","words","rawWords","rawWord","nameAndOperation","firstChar","start","slice","silentFail","getPacketFromDataWord","word","find","getSurveyFromDataWord","throwError","getDoSkipNamedDupes","names","doSkipNamedDupes","getDoWrite","doWrite","getDoSpray","wordByAlias","dataByAlias","msgPart","silentWrite","refresh","getDoRead","firstWord","getDoReadMultiple","getDoReadSingle","getDoAnd","doReadSingle","isAndOperation","doReadMultiple","isObject","getDataStream","getEventStream","node","doExtracts","extract","getNeedsArray","getDoMsgHashExtract","extractsByAlias","hasProp","getDoMsgExtract","applyReaction","merge","group","batch","whenKeys","applyProcess","context","needs","applyRunProcess","method","applySourceProcess","applyFilterProcess","nyanToBus","nyan","cmd","back","idCounter","_destroyEach","arr","item","Scope","_id","_dataList","_valves","_mirrors","b","child","mirror","Object","create","grab","_createData","verify","STATE","state","_createMirror","required","dataSet","findDataSet","appliedValves","dataList","valves","mirrors","size","has","delete","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","w","writeHash","from","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","process","nextTick","cycles","q"],"mappings":"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"}
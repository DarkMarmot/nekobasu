{"version":3,"file":"catbus.umd.js","sources":["../src/flib.js","../src/packet.js","../src/dataTypes.js","../src/subscriberList.js","../src/data.js","../src/wave.js","../src/pool.js","../src/poolDef.js","../src/wire.js","../src/frame.js","../src/waveDef.js","../src/bus.js","../src/nyan.js","../src/stream.js","../src/nyanBus.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(pool){\n\n            Catbus.enqueue(pool);\n\n    },\n\n    getSyncTimer: function(){\n        return function(pool) {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        return function(pool) {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            if(g) {\n                hash[g] = msg;\n            } else { // no source, copy message props into hash to merge nameless streams of key data\n                for(const k in msg){\n                    hash[k] = msg[k];\n                }\n            }\n\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getHash: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getHasKeys: function(keys, noLatch) {\n\n        let latched = false;\n        const len = keys.length;\n\n        return function (msg) {\n\n            if(latched || !len)\n                return true;\n\n            for(let i = 0; i < len; i++) {\n\n                const k = keys[i];\n                if(!msg.hasOwnProperty(k))\n                    return false;\n            }\n\n            if(!noLatch)\n                latched = true;\n\n            return true;\n\n        }\n\n    },\n\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    handle(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.handle(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\nconst NO_TOPIC = '___NO_TOPIC___';\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        topic = topic || undefined;\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.handle(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).remove(watcher);\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n    topics(){\n\n        return this._subscriberListsByTopic.keys();\n\n    };\n\n    survey(){ // get entire key/value store by topic:lastPacket\n\n        const entries = this._subscriberListsByTopic.entries();\n        const m = new Map();\n        for (const [key, value] of entries) {\n            m.set(key, value.lastPacket);\n        }\n\n        return m;\n    };\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const subscriberList = this._subscriberListsByTopic.get(topic);\n        return subscriberList ? subscriberList.lastPacket : null;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        topic = topic || undefined;\n        const list = this._demandSubscriberList(topic);\n        list.handle(msg, topic, silently);\n        this._wildcardSubscriberList.handle(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const lastPacket = this.peek(topic);\n\n        if(lastPacket)\n            this.write(lastPacket._msg, topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nfunction pass(frame, wire, msg, source, topic) {\n\n    frame.emit(wire, msg, source, topic);\n\n}\n\n\nclass Wave {\n\n    constructor(def){\n\n        this.process = (def && def.process) ? this[def.process] : pass;\n        this.action = def ? (def.stateful ? def.action(...def.args) : def.action) : null;\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n        this.process(frame, wire, msg, source, topic)\n    };\n\n    run(frame, wire, msg, source, topic) {\n\n        this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    msg(frame, wire, msg, source, topic) {\n\n        msg = this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n    source(frame, wire, msg, source, topic) {\n\n        source = this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n    filter(frame, wire, msg, source, topic) {\n\n        if(!this.action(msg, source, topic))\n            return;\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    delay(frame, wire, msg, source, topic) {\n\n        function callback(){\n            frame.emit(wire, msg, source, topic);\n        }\n\n        setTimeout(callback, this.action(msg, source, topic) || 0, msg, source, topic);\n\n    };\n\n}\n\n\nexport default Wave;","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(frame, wire, def){\n\n        this.frame = frame;\n        this.wire = wire;\n\n        function fromDef(name){\n\n            if(!def[name])\n                return null;\n\n            const [factory, stateful, ...args] = def[name];\n\n            return stateful ? factory.call(this, ...args) : factory;\n\n        }\n\n        this.keep = fromDef('keep') || F.getKeepLast();\n        this.when = fromDef('when') || F.ALWAYS_TRUE;\n        this.until = fromDef('until') || F.ALWAYS_TRUE;\n        this.timer = fromDef('timer');  // throttle, debounce, defer, batch, sync\n        this.clear = fromDef('clear') || F.ALWAYS_FALSE;\n\n        this.isPrimed = false;\n\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n\n        this.keep(msg, source, topic);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.frame.emit(pool.wire, msg);\n\n    };\n\n}\n\n\nexport default Pool;","\nclass PoolDef {\n\n    constructor(){\n\n        this.name = 'pool';\n        this.keep  = null;\n        this.when  = null;\n        this.until = null;\n        this.timer = null;\n        this.clear = null;\n\n    };\n\n}\n\n\nexport default PoolDef;","import F from './flib.js';\n\nclass Wire {\n\n    constructor(){\n\n        this.target = null; // a frame in a bus\n        this.dead = false;\n        this.name = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n\n    };\n\n    handle(msg, source, topic) {\n\n        if(!this.dead && this.target)\n            this.target.handle(this, msg, this.name || source, topic);\n\n        return this;\n\n    };\n\n    destroy(){\n\n        if(!this.dead && this.target){\n            this.dead = true;\n            this.cleanupMethod();\n        }\n\n    };\n\n}\n\n\n\nWire.fromMonitor = function(data, name){\n\n    const wire = new Wire();\n    const wireName = wire.name = name || data.name;\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, wireName, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire);\n    };\n\n    data.monitor(toWire);\n\n    return wire;\n\n};\n\n\n\nWire.fromSubscribe = function(data, topic, name, canPull){\n\n    const wire = new Wire();\n    const wireName = wire.name = name || topic || data.name;\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, wireName, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire, topic);\n    };\n\n    if(canPull){\n        wire.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = wireName || packet._source;\n                const topic = packet._topic;\n                wire.handle(msg, source, topic);\n            }\n        }\n    }\n\n    data.subscribe(toWire, topic);\n\n    return wire;\n\n};\n\n\n\nWire.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const wire = new Wire();\n    wire.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toWire = function(msg){\n        wire.handle(msg, eventName);\n    };\n\n    wire.cleanupMethod = function(){\n        off.call(target, eventName, toWire, useCapture);\n    };\n\n    on.call(target, eventName, toWire, useCapture);\n\n    return wire;\n\n};\n\n\nexport default Wire;","\nimport Wave from './wave.js';\nimport Pool from './pool.js';\nimport PoolDef from './poolDef.js';\nimport Wire from './wire.js';\n\nclass Frame {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._targets = []; // frames to join or fork into\n        this._index = bus._frames.length;\n        this._wireMap = new WeakMap(); // wires as keys, handlers/pools as values\n        this._holding = false; // begins pools allowing multiple method calls -- must close with a time operation\n        this._processDef = null; // wave or poll definition\n        this._mergingWire = null;\n\n    };\n\n    define(def) {\n\n        this._processDef = def;\n        return this;\n\n    };\n\n    merge() {\n\n        this._mergingWire = new Wire();\n        return this;\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        if(this._mergingWire){\n            this.emit(this._mergingWire, msg, source, topic);\n            return;\n        }\n\n        const hasWire = this._wireMap.has(wire);\n        if(!hasWire)\n            this._wireMap.set(wire, this._createHandler(wire));\n\n        const handler = this._wireMap.get(wire);\n        handler.handle(this, wire, msg, source || wire.name , topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        const len = this._targets.length;\n        for(let i = 0; i < len; i++){\n            const frame = this._targets[i];\n            frame.handle(wire, msg, source, topic);\n        }\n\n    };\n\n    _createHandler(wire){\n\n        const def = this._processDef;\n        return (def && def.name === 'pool') ? new Pool(this, wire, def) : new Wave(def);\n\n    };\n\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    hold(){\n\n        this._holding = true;\n        this._processDef = new PoolDef();\n        return this;\n\n    };\n\n    target(frame) {\n\n        this._targets.push(frame);\n\n    };\n\n    destroy() {\n\n    };\n\n\n\n    //\n    // transform(fAny, stateful){\n    //     return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    // };\n    //\n\n\n    // clear(factory, ...args){\n    //     return this.buildPoolAspect('clear', factory, ...args);\n    // };\n    //\n    // // factory should define content and reset methods have signature f(msg, source) return f.content()\n    //\n\n    //\n    // until(factory, ...args){\n    //     return this.buildPoolAspect('until', factory, ...args);\n    // };\n    //\n    \n}\n\nexport default Frame;\n\n\n","\nclass WaveDef {\n\n    constructor(process, action, stateful, ...args){\n\n        this.name = 'wave';\n        this.process = process;\n        this.action = action;\n        this.stateful = stateful;\n        this.args = args;\n\n    };\n\n\n}\n\nexport default WaveDef;","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Wire from './wire.js';\nimport WaveDef from './waveDef.js';\n\nclass Bus {\n\n    constructor(scope) {\n\n        this._frames = [];\n        this._wires = [];\n        this._dead = false;\n        this._scope = scope; // data scope\n        this._children = []; // from forks\n        this._parent = null;\n\n        if(scope)\n            scope._busList.push(this);\n\n        const f = new Frame(this);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, wiring prior streams, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        fork.parent = this;\n        this._currentFrame.target(fork._currentFrame);\n\n        return fork;\n    };\n\n    back() {\n\n        if(!this._parent)\n            throw new Error('Cannot exit fork, parent does not exist!');\n\n        return this.parent;\n\n    };\n\n    join() {\n\n        const parent = this.back();\n        parent.add(this);\n        return parent;\n\n    }\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        bus._currentFrame.target(frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    pull() {\n\n        const len = this._wires.length;\n\n        for(let i = 0; i < len; i++) {\n            const wire = this._wires[i];\n            wire.pull();\n        }\n\n        return this;\n\n    };\n\n    event(target, eventName, useCapture) {\n\n        const wire = Wire.fromEvent(target, eventName, useCapture);\n        return this.wire(wire);\n\n    };\n\n    subscribe(data, topic, name, canPull){\n\n        const wire = Wire.fromSubscribe(data, topic, name, canPull);\n        return this.wire(wire);\n\n    };\n\n    wire(wire) {\n\n        wire.target = this._frames[0];\n        this._wires.push(wire);\n        return this;\n\n    }\n\n    monitor(data, name){\n\n        const wire = Wire.fromMonitor(data, name);\n        wire.target = this._frames[0];\n        this._wires.push(wire);\n\n        return this;\n\n    };\n\n\n    scan(func, seed){\n        return this.reduce(F.getScan, func, seed);\n    };\n\n    delay(fNum) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('delay', F.FUNCTOR(fNum)));\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n        return this.when(F.getWhenKeys, true, keys);\n    };\n\n    group(by) {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.hold().reduce(F.getGroup, by);\n        return this;\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        const holding = this.holding;\n\n        if(!holding){\n\n            const frame = this.addFrame();\n            const def = new WaveDef('msg', factory, true, ...args);\n            frame.define(def);\n\n        } else {\n\n            const frame = this._currentFrame;\n            const def = frame._processDef;\n            def.keep = [factory, true, ...args];\n\n        }\n\n        return this;\n\n    };\n\n    timer(factory, stateful, ...args) {\n\n\n        const holding = this.holding;\n        const frame = holding ? this._currentFrame : this.addFrame().hold();\n        const def = frame._processDef;\n        def.timer = [factory, stateful, ...args];\n        this._currentFrame._holding = false; // timer ends hold\n\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, stateful, ...args) {\n\n        const holding = this.holding;\n\n        if(!holding){\n\n            const frame = this.addFrame();\n            const def = new WaveDef('filter', factory, stateful, ...args);\n            frame.define(def);\n\n        } else {\n\n            const frame = this._currentFrame;\n            const def = frame._processDef;\n            def.when = [factory, stateful, ...args];\n\n        }\n\n        return this;\n\n        //\n        // this.holding ?\n        //     this._currentFrame.when(factory, ...args) :\n        //     this.addFrame().hold().reduce(F.getKeepLast).when(factory, ...args).timer(F.getSyncTimer);\n        // return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('run', func));\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().merge();\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('msg', F.FUNCTOR(fAny)));\n        return this;\n\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('source', F.FUNCTOR(fStr)));\n        return this;\n\n    };\n\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('filter', func));\n        return this;\n\n\n    };\n\n    hasKeys(keys) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().define(new WaveDef('filter', F.getHasKeys(keys)));\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('filter', F.getSkipDupes, true));\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const wires = this._wires;\n        const len = wires.length;\n        for (let i = 0; i < len; i++) {\n            const wire = wires[i];\n            wire.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n\n\nexport default Bus;\n","\n\nconst Nyan = {};\n\n// then = applies to all words in a phrase\n// watch: ^ = action, need, event, watch | read, must\n// then:  run, read, attr, and, style, write, blast, filter\n\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^',  react: true, subscribe: true, need: true, solo: true},\n    {name: 'WIRE',   sym: '~',  react: true, follow: true}, // INTERCEPT\n    {name: 'WATCH',  sym: null, react: true, follow: true},\n    {name: 'EVENT',  sym: '@',  react: true, event: true},\n    {name: 'ALIAS',  sym: '(',  then: true, solo: true},\n    {name: 'METHOD', sym: '`',  then: true, solo: true},\n    {name: 'READ',   sym: null, then: true, read: true},\n    {name: 'ATTR',   sym: '#',  then: true, solo: true, output: true},\n    {name: 'AND',    sym: '&',  then: true },\n    {name: 'STYLE',  sym: '$',  then: true,  solo: true, output: true },\n    {name: 'WRITE',  sym: '=',  then: true,  solo: true },\n    {name: 'SPRAY',  sym: '<',  then: true },\n    {name: 'RUN',    sym: '*',  then: true, output: true },\n    {name: 'FILTER', sym: '>',  then: true }\n\n];\n\n// cat, dog | & meow, kitten {*log} | =puppy\n\n\n// todo make ! a trailing thingie, must goes away\n// trailing defs -- ! = needs message in data to continue, ? = data must exist or throw error\n// {name: 'BEGIN',  sym: '{'}, -- fork\n// {name: 'END',    sym: '}'}, -- back\n// {name: 'PIPE',   sym: '|'}, -- phrase delimiter\n// read = SPACE\n// - is data maybe (data point might not be present)\n// ? is object maybe (object might not be there)\n// () is rename\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst thenByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n\n    if(sym) {\n        operationsBySymbol[sym] = op;\n        namesBySymbol[sym] = name;\n    }\n\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n\n    if(op.then){\n        thenByName[name] = true;\n    }\n\n    if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, need, topic, alias, monitor, extracts){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.need = need || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n        this.extracts = extracts && extracts.length ? extracts : null; // possible list of message property pulls\n        // this.useCapture =\n\n    }\n\n}\n\nlet tickStack = [];\n\nfunction toTickStackString(str){\n\n\n    tickStack = [];\n    const chunks = str.split(/([`])/);\n    const strStack = [];\n\n    let ticking = false;\n    while(chunks.length){\n        const c = chunks.shift();\n        if(c === '`'){\n            ticking = !ticking;\n            strStack.push(c);\n        } else {\n            if(ticking) {\n                tickStack.push(c);\n            } else {\n                strStack.push(c);\n            }\n        }\n    }\n\n    const result = strStack.join('');\n    //console.log('stack res', result, tickStack);\n    return result;\n}\n\nfunction parse(str, isProcess) {\n\n\n    str = toTickStackString(str);\n\n    const sentences = [];\n\n    // split on curlies and remove empty chunks (todo optimize for parsing speed, batch loop operations?)\n    let chunks = str.split(/([{}]|-})/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === '}' || chunk === '{' || chunk === '-}') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            sentences.push(sentence);\n\n    }\n\n    return validate(sentences, isProcess);\n\n\n}\n\nfunction validate(sentences, isProcess){\n\n    const cmdList = [];\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase && !isProcess) {\n                    validateReactPhrase(phrase);\n                    firstPhrase = false;\n                    cmdList.push({name: 'REACT', phrase: phrase});\n                }\n                else {\n                    validateProcessPhrase(phrase);\n                    cmdList.push({name: 'PROCESS', phrase: phrase});\n                }\n            }\n\n        } else if (s === '{') {\n            cmdList.push({name: 'FORK'});\n        } else if (s === '}') {\n            cmdList.push({name: 'BACK'});\n        } else if (s === '-}') {\n            cmdList.push({name: 'JOIN'});\n        }\n    }\n\n    return cmdList;\n}\n\n\nfunction validateReactPhrase(phrase){\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const operation = nw.operation = nw.operation || 'WATCH';\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with an observation!');\n\n}\n\n\n\nfunction validateProcessPhrase(phrase){\n\n    const firstPhrase = phrase[0];\n    const firstOperation = firstPhrase.operation || 'READ';\n\n    if(!thenByName[firstOperation])\n        throw new Error('Illegal operation in phrase!'); // unknown or reactive\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        nw.operation = nw.operation || firstOperation;\n        if(nw.operation !== firstOperation){\n\n           // console.log('mult', nw.operation, firstOperation);\n            throw new Error('Multiple operation types in phrase (only one allowed)!');\n\n        }\n\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        //console.log('word=', rawWord);\n        const rawChunks = rawWord.split(/([(?!:.`)])/);\n        const chunks = [];\n        let inMethod = false;\n\n        // white space is only allowed between e.g. `throttle 200`, `string meow in the hat`\n\n        while(rawChunks.length){\n            const next = rawChunks.shift();\n            if(next === '`'){\n                inMethod = !inMethod;\n                chunks.push(next);\n            } else {\n                if(!inMethod){\n                    const trimmed = next.trim();\n                    if(trimmed)\n                        chunks.push(trimmed);\n                } else {\n                    chunks.push(next);\n                }\n            }\n        }\n\n        //console.log('to:', chunks);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start).trim();\n        const extracts = [];\n\n        // todo hack (rename)\n\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n        let need = false;\n\n        if(operation === 'ALIAS'){\n            alias = chunks.shift();\n            chunks.shift(); // todo verify ')'\n        } else if (operation === 'METHOD'){\n                chunks.shift();\n                // const next = chunks.shift();\n                const next = tickStack.shift();\n                const i = next.indexOf(' ');\n                if(i === -1) {\n                    extracts.push(next);\n                } else {\n                    extracts.push(next.slice(0, i));\n                    if(next.length > i){\n                        extracts.push(next.slice(i + 1));\n                    }\n                }\n\n            while(chunks.length){ chunks.shift(); }\n        }\n\n        while(chunks.length){\n\n            const c = chunks.shift();\n\n            switch(c){\n\n                case '.':\n\n                    const prop = chunks.length && chunks[0]; // todo assert not operation\n                    const silentFail = chunks.length > 1 && (chunks[1] === '?');\n\n                    if(prop) {\n                        extracts.push({name: prop, silentFail: silentFail});\n                        chunks.shift(); // remove word from queue\n                        if(silentFail)\n                            chunks.shift(); // remove ? from queue\n                    }\n\n                    break;\n\n                case '?':\n\n                    maybe = true;\n                    break;\n\n                case '!':\n\n                    need = true;\n                    break;\n\n                case ':':\n\n                    if(chunks.length){\n                        const next = chunks[0];\n                        if(next === '('){\n                            monitor = true;\n                        } else {\n                            topic = next;\n                            chunks.shift(); // remove topic from queue\n                        }\n                    } else {\n                        monitor = true;\n                    }\n\n                    break;\n\n                case '(':\n\n                    if(chunks.length){\n                        alias = chunks.shift(); // todo assert not operation\n                    }\n\n                    break;\n\n\n\n            }\n\n        }\n\n        alias = alias || topic || name;\n        const nw = new NyanWord(name, operation, maybe, need, topic, alias, monitor, extracts);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    handle(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, this.name || source); // handle method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, topic, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n        source = thisStream.name || source;\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.handle(msg, source, topic);\n        }\n\n    };\n\n    doFilter(msg, source, topic) {\n\n        if(!this.actionMethod(msg, source, topic))\n            return;\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doMsg(msg, source, topic) {\n\n        msg = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    doTransform(msg, source, topic) {\n\n\n        msg = this.actionMethod.msg ? this.actionMethod.msg(msg, source, topic) : msg;\n        source = this.actionMethod.source ? this.actionMethod.source(msg, source, topic) : source;\n        topic = this.actionMethod.topic ? this.actionMethod.topic(msg, source, topic) : topic;\n        this.emit(msg, source, topic);\n\n    };\n\n    doDelay(msg, source, topic) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod(msg, source, topic) || 0, msg, source, topic, this);\n\n    };\n\n    doSource(msg, source, topic) {\n\n        this.name = this.actionMethod(); // todo shoehorned -- this needs it's own setup\n        //source = this.actionMethod(msg, source, topic);\n        // this.name = function(){ return }\n        this.emit(msg, this.name || source, topic);\n\n    };\n\n\n    doRun(msg, source, topic) {\n\n        this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source, topic) {\n\n        this.pool.handle(msg, this.name || source, topic);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\nStream.fromMonitor = function(data, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.survey();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.monitor(toStream);\n\n    return stream;\n\n};\n\n\n\nStream.fromSubscribe = function(data, topic, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.subscribe(toStream, topic);\n\n    return stream;\n\n};\n\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.handle(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","import Wire from './wire.js';\nimport Nyan from './nyan.js';\n\n\nfunction getPacketFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    const peek = data && data.peek(word.topic);\n    return peek;\n\n}\n\n\nfunction getSurveyFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    return data && data.survey();\n\n}\n\nfunction throwError(msg){\n    console.log('throwing ', msg);\n    const e = new Error(msg);\n    console.log(this, e);\n    throw e;\n}\n\nfunction getDoSkipNamedDupes(names){\n\n    let lastMsg = {};\n    const len = names.length;\n\n    return function doSkipNamedDupes(msg) {\n\n        let diff = false;\n        for(let i = 0; i < len; i++){\n            const name = names[i];\n            if(!lastMsg.hasOwnProperty(name) || lastMsg[name] !== msg[name])\n                diff = true;\n            lastMsg[name] = msg[name];\n        }\n\n        return diff;\n\n    };\n}\n\n\nfunction getDoWrite(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n\n    return function doWrite(msg) {\n        data.write(msg, word.topic);\n    };\n\n}\n\n\nfunction getDoSpray(scope, phrase){\n\n    const wordByAlias = {};\n    const dataByAlias = {};\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++){ // todo, validate no dupe alias in word validator for spray\n\n        const word = phrase[i];\n        const data = scope.find(word.name, !word.maybe);\n        if(data) { // might not exist if optional\n            wordByAlias[word.alias] = word;\n            dataByAlias[word.alias] = data;\n        }\n\n    }\n\n    return function doWrite(msg) {\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                const msgPart = msg[alias];\n                data.silentWrite(msgPart, word.topic);\n            }\n\n        }\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                data.refresh(word.topic);\n            }\n\n        }\n\n\n    };\n\n\n}\n\n\nfunction getDoRead(scope, phrase){\n\n    const len = phrase.length;\n    const firstWord = phrase[0];\n\n    if(len > 1 || firstWord.monitor) { // if only reading word is a wildcard subscription then hash as well\n        return getDoReadMultiple(scope, phrase);\n    } else {\n        return getDoReadSingle(scope, firstWord);\n    }\n\n}\n\n\nfunction getDoAnd(scope, phrase) {\n\n    return getDoReadMultiple(scope, phrase, true);\n\n}\n\n\nfunction getDoReadSingle(scope, word) {\n\n    return function doReadSingle() {\n\n        const packet = getPacketFromDataWord(scope, word);\n        return packet && packet.msg;\n\n    };\n\n}\n\n\nfunction getDoReadMultiple(scope, phrase, isAndOperation){\n\n\n        const len = phrase.length;\n\n\n        return function doReadMultiple(msg, source) {\n\n            const result = {};\n\n            if(isAndOperation){\n\n                if(source){\n                    result[source] = msg;\n                } else {\n                    for (const p in msg) {\n                        result[p] = msg[p];\n                    }\n                }\n            }\n\n            for (let i = 0; i < len; i++) {\n                const word = phrase[i];\n\n                if(word.monitor){\n\n                    const survey = getSurveyFromDataWord(scope, word);\n                    for(const [key, value] of survey){\n                        result[key] = value;\n                    }\n\n                } else {\n\n                    const packet = getPacketFromDataWord(scope, word);\n                    const prop = word.monitor ? (word.alias || word.topic) : (word.alias || word.name);\n                    if (packet)\n                        result[prop] = packet.msg;\n\n                }\n\n            }\n\n            return result;\n\n        };\n\n}\n\n\n// get data stream -- store data in bus, emit into stream on pull()\n\n\nfunction getDataWire(scope, word, canPull) {\n\n    const data = scope.find(word.name, !word.maybe);\n    if(word.monitor){\n        return Wire.fromMonitor(data, word.alias, canPull);\n    } else {\n        return Wire.fromSubscribe(data, word.topic, word.alias, canPull);\n    }\n\n}\n\nfunction isObject(v) {\n    if (v === null)\n        return false;\n    return (typeof v === 'function') || (typeof v === 'object');\n}\n\n\nfunction getEventWire(word, target){\n\n    return Wire.fromEvent(target, word.topic, word.useCapture, word.alias);\n\n}\n\nfunction doExtracts(value, extracts) {\n\n    let result = value;\n    const len = extracts.length;\n\n    for (let i = 0; i < len; i++) {\n        const extract = extracts[i];\n        if(!isObject(result)) {\n            if(extract.silentFail)\n                return undefined;\n\n            throwError('Cannot access property \\'' + extract.name + '\\' of ' + result);\n\n        }\n        result = result[extract.name];\n    }\n\n\n    return result;\n\n}\n\nfunction getNeedsArray(phrase){\n    return phrase.filter(word => word.operation.need).map(word => word.alias);\n}\n\nfunction getDoMsgHashExtract(words) {\n\n    const len = words.length;\n    const extractsByAlias = {};\n\n    for (let i = 0; i < len; i++) {\n\n        const word = words[i];\n        extractsByAlias[word.alias] = word.extracts;\n\n    }\n\n    return function(msg) {\n\n        const result = {};\n        for(const alias in extractsByAlias){\n            const hasProp = msg.hasOwnProperty(alias);\n            if(hasProp){\n                result[alias] = doExtracts(msg[alias], extractsByAlias[alias]);\n            }\n        }\n\n        return result;\n\n    };\n\n}\n\nfunction getDoMsgExtract(word) {\n\n    const extracts = word.extracts;\n\n    return function(msg){\n        return doExtracts(msg, extracts);\n    }\n\n}\n\n\nfunction applyReaction(scope, bus, phrase, target) { // target is some event emitter\n\n    const need = [];\n    const skipDupes = [];\n    const streams = [];\n    const extracts = [];\n\n    if(phrase.length === 1 && phrase[0].operation === 'ACTION'){\n        const word = phrase[0];\n        bus.wire(getDataWire(scope, word, false));\n        return;\n    }\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const word = phrase[i];\n        const operation = word.operation;\n\n        if(operation === 'WATCH') {\n            bus.wire(getDataWire(scope, word, true));\n            skipDupes.push(word.alias)\n        }\n        else if(operation === 'WIRE'){\n            bus.wire(getDataWire(scope, word, true));\n        }\n        else if(operation === 'EVENT') {\n            bus.wire(getEventWire(word, target));\n        }\n\n        if(word.extracts)\n            extracts.push(word);\n\n        if(word.need)\n            need.push(word.alias);\n\n    }\n\n    if(bus._wires.length > 1) {\n\n        bus.merge().group().batch();\n\n        if(extracts.length)\n            bus.msg(getDoMsgHashExtract(extracts));\n\n        if(need.length)\n            bus.hasKeys(need);\n\n        if(skipDupes.length){\n            bus.filter(getDoSkipNamedDupes(skipDupes));\n        }\n\n    } else {\n\n        if(extracts.length)\n            bus.msg(getDoMsgExtract(extracts[0]));\n\n        if(skipDupes.length)\n            bus.skipDupes();\n\n    }\n\n}\n\nfunction isTruthy(msg){ return !!msg; };\nfunction isFalsey(msg){ return !msg; };\n\n\nfunction applyMethod(bus, word) {\n\n    const method = word.extracts[0];\n\n    switch(method){\n\n        case 'true':\n            bus.msg(true);\n            break;\n\n        case 'false':\n            bus.msg(false);\n            break;\n\n        case 'null':\n            bus.msg(null);\n            break;\n\n        case 'undefined':\n            bus.msg(undefined);\n            break;\n\n        case 'array':\n            bus.msg([]);\n            break;\n\n        case 'object':\n            bus.msg({});\n            break;\n\n        case 'truthy':\n            bus.filter(isTruthy);\n            break;\n\n        case 'falsey':\n            bus.filter(isFalsey);\n            break;\n\n        case 'string':\n            bus.msg(function(){ return word.extracts[1];});\n            break;\n\n            // throttle x, debounce x, delay x, last x, first x, all\n\n    }\n\n}\n\nfunction applyProcess(scope, bus, phrase, context, node) {\n\n    const operation = phrase[0].operation; // same for all words in a process phrase\n\n    if(operation === 'READ') {\n        bus.msg(getDoRead(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'AND') {\n        bus.msg(getDoAnd(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if (needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'METHOD') {\n        applyMethod(bus, phrase[0]);\n    } else if (operation === 'FILTER') {\n        applyFilterProcess(bus, phrase, context);\n    } else if (operation === 'RUN') {\n        applyMsgProcess(bus, phrase, context);\n    } else if (operation === 'ALIAS') {\n        applySourceProcess(bus, phrase[0]);\n    } else if (operation === 'WRITE') {\n        bus.run(getDoWrite(scope, phrase[0]));\n    } else if (operation === 'SPRAY') {\n        bus.run(getDoSpray(scope, phrase)); // todo validate that writes do not contain words in reacts\n\n    }\n\n}\n\n\n\nfunction applyMsgProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.msg(f);\n\n    }\n\n}\n\n\nfunction applyRunProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.run(f);\n\n    }\n\n}\n\nfunction applySourceProcess(bus, word){\n\n    bus.source(word.alias);\n\n}\n\n\nfunction applyFilterProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.filter(f);\n\n    }\n\n}\n\n\nfunction nyanToBus(scope, bus, str, context, target){\n\n    const nyan = Nyan.parse(str);\n    const len = nyan.length;\n\n    for(let i = 0; i < len; i++){\n\n        const cmd = nyan[i];\n        const name = cmd.name;\n        const phrase = cmd.phrase;\n\n      //  console.log('----', name, phrase);\n\n        if(name === 'JOIN') {\n            bus = bus.join();\n            bus.merge();\n            bus.group();\n            bus.sync();\n        } else if(name === 'FORK'){\n            bus = bus.fork();\n        } else if (name === 'BACK'){\n            bus = bus.back();\n        } else {\n\n            if(name === 'PROCESS')\n                applyProcess(scope, bus, phrase, context, target);\n            else // name === 'REACT'\n                applyReaction(scope, bus, phrase, target);\n\n        }\n    }\n\n    return bus;\n\n}\n\nexport default nyanToBus;","\nimport F from './flib.js';\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\nimport Stream from './stream.js';\nimport nyanToBus from './nyanBus.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n\n    // todo react via nyan (so it can be precompiled and reused\n    react(str, context, node){ // string is Nyan\n\n        if(!str)\n            throw new Error('Need a Nyan phrase!');\n\n        let b = new Bus(this);\n\n        return nyanToBus(this, b, str, context, node);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Wire from './wire.js';\nimport Bus from './bus.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const bus = new Bus();\n    bus.event(target, eventName, useCapture);\n    return bus;\n\n};\n\n// todo stable output queue -- output pools go in a queue that runs after the batch q is cleared, thus run once only\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\n\nCatbus.createChild = Catbus.scope = function(name){\n\n    return new Scope(name);\n\n};\n\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","msg","source","TO_TOPIC","topic","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","hasOwnProperty","noLatch","hadMsg","lastMsg","diff","bus","holding","To_MSG","Packet","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","name","currentPacket","ACTION","subscribers","concat","s","handle","watcher","indexOf","splice","Data","scope","NONE","_scope","_type","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","undefined","get","set","expectedType","subscribe","packet","peek","_demandSubscriberList","add","remove","entries","m","key","value","lastPacket","subscriberList","write","MIRROR","read","pass","frame","wire","emit","Wave","def","process","action","stateful","callback","Pool","fromDef","factory","F","getKeepLast","when","until","timer","clear","isPrimed","prop","hasContent","PoolDef","Wire","target","cleanupMethod","pull","fromMonitor","wireName","toWire","unsubscribe","monitor","fromSubscribe","canPull","fromEvent","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Frame","_bus","_targets","_index","_frames","_wireMap","WeakMap","_holding","_processDef","_mergingWire","hasWire","has","_createHandler","handler","WaveDef","Bus","_wires","_children","_parent","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","fork","parent","back","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","hold","reduce","getScan","ASSERT_NEED_ONE_ARGUMENT","define","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","getKeepAll","getKeepFirst","ASSERT_IS_FUNCTION","merge","fAny","transform","fStr","getHasKeys","getSkipDupes","wires","map","d","newParent","oldParent","Nyan","operationDefs","sym","react","need","solo","follow","event","then","output","operationsBySymbol","operationsByName","symbolsByName","namesBySymbol","reactionsByName","withReactionsByName","thenByName","op","NyanWord","operation","maybe","alias","extracts","tickStack","toTickStackString","str","chunks","split","strStack","ticking","c","result","join","parse","isProcess","sentences","trim","filter","chunk","sentence","parseSentence","validate","cmdList","firstPhrase","j","phrase","validateReactPhrase","hasReaction","nw","validateProcessPhrase","firstOperation","parsePhrase","words","rawWords","rawWord","rawChunks","inMethod","trimmed","nameAndOperation","firstChar","start","slice","silentFail","Stream","children","processMethod","actionMethod","thisStream","streamName","toStream","survey","getPacketFromDataWord","word","find","getSurveyFromDataWord","throwError","log","e","getDoSkipNamedDupes","names","doSkipNamedDupes","getDoWrite","doWrite","getDoSpray","wordByAlias","dataByAlias","msgPart","silentWrite","refresh","getDoRead","firstWord","getDoReadMultiple","getDoReadSingle","getDoAnd","doReadSingle","isAndOperation","doReadMultiple","getDataWire","isObject","getEventWire","doExtracts","extract","getNeedsArray","getDoMsgHashExtract","extractsByAlias","hasProp","getDoMsgExtract","applyReaction","skipDupes","streams","group","batch","hasKeys","isTruthy","isFalsey","applyMethod","method","applyProcess","context","node","needs","whenKeys","run","applyMsgProcess","applySourceProcess","applyFilterProcess","nyanToBus","nyan","cmd","sync","idCounter","_destroyEach","arr","item","Scope","_id","_dataList","_valves","_mirrors","b","child","mirror","Object","create","grab","_createData","verify","STATE","state","_createMirror","required","dataSet","findDataSet","appliedValves","dataList","valves","mirrors","size","delete","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","w","writeHash","from","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","nextTick","createChild","cycles","q"],"mappings":"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"}
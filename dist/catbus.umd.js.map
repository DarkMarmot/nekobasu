{"version":3,"file":"catbus.umd.js","sources":["../src/packet.js","../src/dataTypes.js","../src/flib.js","../src/subscriberList.js","../src/data.js","../src/wave.js","../src/pool.js","../src/waves/tap.js","../src/waves/msg.js","../src/waves/source.js","../src/waves/filter.js","../src/waves/delay.js","../src/waves/scan.js","../src/waves/skipDupes.js","../src/waves/lastN.js","../src/waves/firstN.js","../src/waves/all.js","../src/waves/group.js","../src/handler.js","../src/frame.js","../src/wire.js","../src/frameMerger.js","../src/frameStateless.js","../src/poolDef.js","../src/frameHold.js","../src/frameForker.js","../src/waveDef.js","../src/nyan.js","../src/nyanRunner.js","../src/bus.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(pool){\n\n            Catbus.enqueue(pool);\n\n    },\n\n    getSyncTimer: function(){\n        return function(pool) {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        return function(pool) {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    // getScan: function(func, seed){\n    //\n    //     let acc = seed;\n    //\n    //     const f = function(msg, source){\n    //\n    //         return acc = func(acc, msg, source);\n    //     };\n    //\n    //     f.reset = NOOP;\n    //\n    //     f.next = f.content = function(){\n    //         return acc;\n    //     };\n    //\n    //\n    //     return f;\n    // },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            if(g) {\n                hash[g] = msg;\n            } else { // no source, copy message props into hash to merge nameless streams of key data\n                for(const k in msg){\n                    hash[k] = msg[k];\n                }\n            }\n\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getHash: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getHasKeys: function(keys, noLatch) {\n\n        let latched = false;\n        const len = keys.length;\n\n        return function (msg) {\n\n            if(latched || !len)\n                return true;\n\n            for(let i = 0; i < len; i++) {\n\n                const k = keys[i];\n                if(!msg.hasOwnProperty(k))\n                    return false;\n            }\n\n            if(!noLatch)\n                latched = true;\n\n            return true;\n\n        }\n\n    },\n\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\nimport F from './flib.js';\n\nfunction callMany(list, msg, source, topic){\n\n    const len = list.length;\n    for (let i = 0; i < len; i++) {\n        let s = list[i];\n        s.call(s, msg, source, topic);\n    }\n\n}\n\nfunction callNoOne(list, msg, source, topic){}\n\nfunction callOne(list, msg, source, topic){\n        const s = list[0];\n        s.call(s, msg, source, topic);\n}\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._callback = callNoOne;\n        this._used = false; // true after first msg\n        this._lastMsg = null;\n        this._lastTopic = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n        if(data.type === DATA_TYPES.ACTION) {\n            this.handle = this.handleAction;\n        }\n    };\n\n    get used() { return this._used; };\n    get lastMsg() { return this._lastMsg; };\n    get lastTopic() { return this._lastTopic; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    handle(msg, topic, silently){\n\n        // if(this.dead)\n        //     return;\n\n        this._used = true;\n        topic = topic || this.topic;\n        let source = this.name;\n\n        this._lastMsg = msg;\n        this._lastTopic = topic;\n\n        //let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n\n        if(!silently) {\n            this._callback(this._subscribers, msg, source, topic);\n        }\n\n    };\n\n    handleAction(msg, topic){\n\n        topic = topic || this.topic;\n        let source = this.name;\n\n        //let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        this._callback(this._subscribers, msg, source, topic);\n\n    };\n\n\n\n    destroy(){\n\n        // if(this.dead)\n        //     return;\n\n        this._subscribers = null;\n        this._lastMsg = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        const s = typeof watcher === 'function' ? watcher : function(msg, source, topic){ watcher.handle(msg, source, topic);};\n        this._subscribers.push(s);\n        this.determineCaller();\n        return this;\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n        this.determineCaller();\n\n        return this;\n    };\n\n    determineCaller(){\n        const len = this._subscribers.length;\n        if(len === 0){\n            this._callback = callNoOne;\n        } else if (len == 1){\n            this._callback = callOne;\n        } else {\n            this._callback = callMany;\n        }\n\n    }\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\nconst NO_TOPIC = '___NO_TOPIC___';\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._noTopicList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = {};\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        // if(this.dead)\n        //     this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        topic = topic || null;\n        let list = topic ? this._subscriberListsByTopic[topic] : this._noTopicList;\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic[topic] = list;\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const list = this.subscribe(watcher, topic);\n\n        if(list.used)\n            typeof watcher === 'function' ? watcher.call(watcher, list.lastMsg, list.source, list.lastTopic) : watcher.handle(list.lastMsg, list.source, list.lastTopic);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        return this._demandSubscriberList(topic).add(watcher);\n\n    };\n\n    monitor(watcher){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        topic = topic || null;\n        this._demandSubscriberList(topic).remove(watcher);\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n    // topics(){\n    //\n    //     return this._subscriberListsByTopic.keys();\n    //\n    // };\n\n    survey(){\n        // get entire key/value store by topic:lastPacket\n        throw new Error('not imp');\n\n        // const entries = this._subscriberListsByTopic.entries();\n        // const m = new Map();\n        // for (const [key, value] of entries) {\n        //     m.set(key, value.lastPacket);\n        // }\n        //\n        // return m;\n    };\n\n\n    present(topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const subscriberList = this._demandSubscriberList(topic);\n        return subscriberList.used;\n\n    };\n\n\n    read(topic) {\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const list = this._demandSubscriberList(topic);\n        return (list.used) ? list.lastMsg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        // todo change methods to imply if statements for perf?\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        const list = this._demandSubscriberList(topic);\n        list.handle(msg, topic, silently);\n        this._wildcardSubscriberList.handle(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const list = this._demandSubscriberList(topic);\n\n        if(list.used)\n            this.write(list.lastMsg, list.lastTopic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nfunction pass(frame, wire, msg, source, topic) {\n\n    frame.emit(wire, msg, source, topic);\n\n}\n\n\nclass Wave {\n\n    constructor(def){\n\n        this.process = (def && def.process) ? this[def.process] : pass;\n        this.action = def ? (def.stateful ? def.action(...def.args) : def.action) : null;\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n        this.process(frame, wire, msg, source, topic)\n    };\n\n    run(frame, wire, msg, source, topic) {\n\n        this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    msg(frame, wire, msg, source, topic) {\n\n        msg = this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n    source(frame, wire, msg, source, topic) {\n\n        source = this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n    filter(frame, wire, msg, source, topic) {\n\n        if(!this.action(msg, source, topic))\n            return;\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    split(frame, wire, msg, source, topic) {\n\n        const len = msg.length || 0;\n        for(let i = 0; i < len; i++){\n            const chunk = msg[i];\n            frame.emit(wire, chunk, source, topic);\n        }\n\n    };\n\n    delay(frame, wire, msg, source, topic) {\n\n        function callback(){\n            frame.emit(wire, msg, source, topic);\n        }\n\n        setTimeout(callback, this.action(msg, source, topic) || 0, msg, source, topic);\n\n    };\n\n}\n\n\nexport default Wave;","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(frame, wire, def){\n\n        this.frame = frame;\n        this.wire = wire;\n\n        function fromDef(name){\n\n            if(!def[name])\n                return null;\n\n            const [factory, stateful, ...args] = def[name];\n\n            return stateful ? factory.call(this, ...args) : factory;\n\n        }\n\n        this.keep = fromDef('keep') || F.getKeepLast();\n        this.when = fromDef('when') || F.ALWAYS_TRUE;\n        this.until = fromDef('until') || F.ALWAYS_TRUE;\n        this.timer = fromDef('timer');  // throttle, debounce, defer, batch, sync\n        this.clear = fromDef('clear') || F.ALWAYS_FALSE;\n\n        this.isPrimed = false;\n\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n\n        this.keep(msg, source, topic);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.frame.emit(pool.wire, msg);\n\n    };\n\n}\n\n\nexport default Pool;","\n\nclass Tap {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n}\n\n\nexport default Tap;","\n\nclass Msg {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const nextMsg = this.action(msg, source, topic);\n        frame.emit(wire, nextMsg, source, topic);\n\n    }\n\n}\n\n\nexport default Msg;","\n\nclass Source {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const nextSource = this.action(msg, source, topic);\n        frame.emit(wire, msg, nextSource, topic);\n\n    }\n\n}\n\n\nexport default Source;","\n\nclass Filter {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        if(this.action(msg, source, topic))\n            frame.emit(wire, msg, source, topic);\n\n    }\n\n}\n\n\nexport default Filter;","\nfunction callback(frame, wire, msg, source, topic){\n\n    frame.emit(wire, msg, source, topic);\n\n}\n\n\n\nclass Delay {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n\n    }\n\n\n    handle(frame, wire, msg, source, topic){\n\n        setTimeout(callback, this.action(msg, source, topic) || 0, frame, wire, msg, source, topic);\n\n    }\n\n\n}\n\n\nexport default Delay;\n","\n\nclass Scan {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = 0;\n        this.stateful = true;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        this.value = this.action(this.value, msg, source, topic);\n        frame.emit(wire, this.value, source, topic);\n\n    }\n\n}\n\nexport default Scan;\n\n\n//\n// class Scan {\n//\n//     constructor(func){\n//\n//         this.hadFirstMsg = false;\n//         this.func = func;\n//         this.value = null;\n//\n//     }\n//\n//     handle(msg, source, topic){\n//\n//         if(!this.hadFirstMsg){\n//             this.hadFirstMsg = true;\n//             this.value = msg;\n//             return;\n//         }\n//\n//         this.value = this.func(this.value, msg, source, topic);\n//\n//     }\n//\n//     next(){\n//         return this.value;\n//     }\n//\n//     content(){\n//         return this.value;\n//     }\n//\n//     reset(){\n//\n//     }\n// }\n//\n//\n// export default Scan;","\n\nclass SkipDupes {\n\n    constructor(){\n\n        this.value = null;\n        this.hadValue = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        if(!this.hadValue || this.value !== msg) {\n            frame.emit(wire, msg, source, topic);\n            this.hadValue = true;\n            this.value = msg;\n        }\n\n    }\n\n}\n\n\nexport default SkipDupes;","\n\nclass LastN {\n\n    constructor(n){\n\n        this.value = [];\n        this.max = n;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const list = this.value;\n        list.push(msg);\n        if(list.length > this.max)\n            list.shift();\n\n        frame.emit(wire, list, source, topic);\n\n    }\n\n    reset(){\n        this.value = [];\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default LastN;","\n\nclass FirstN {\n\n    constructor(n){\n\n        this.value = [];\n        this.max = n;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const list = this.value;\n        if(list.length < this.max)\n            list.push(msg);\n\n        frame.emit(wire, list, source, topic);\n\n    }\n\n    reset(){\n        this.value = [];\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default FirstN;","\n\nclass All {\n\n    constructor(){\n\n        this.value = [];\n        this.hasValue = false;\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const list = this.value;\n        list.push(msg);\n        frame.emit(wire, list, source, topic);\n\n    }\n\n    reset(){\n        this.value = [];\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default All;","\nfunction TO_SOURCE(msg, source, topic) {\n    return source;\n}\n\nclass Group {\n\n    constructor(def){\n\n        this.action = def.action || TO_SOURCE;\n        this.value = {};\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const g = this.action(msg, source);\n        const hash = this.value;\n\n        if(g) {\n            hash[g] = msg;\n        } else { // no source, copy message props into hash to merge nameless streams of key data\n            for(const k in msg){\n                hash[k] = msg[k];\n            }\n        }\n\n        frame.emit(wire, hash, source, topic);\n\n    }\n\n    reset(){\n        this.value = {};\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default Group;","\nimport Tap from './waves/tap.js';\nimport Msg from './waves/msg.js';\nimport Source from './waves/source.js';\nimport Filter from './waves/filter.js';\nimport Delay from './waves/delay.js';\nimport Scan from './waves/scan.js';\nimport SkipDupes from './waves/skipDupes.js'\nimport LastN from './waves/lastN.js';\nimport FirstN from './waves/firstN.js';\nimport All from './waves/all.js';\nimport Group from './waves/group.js';\n\nconst PASS = {\n\n    handle: function(frame, wire, msg, source, topic) {\n        frame.emit(wire, msg, source, topic);\n    }\n\n};\n\nconst SPLIT = {\n\n    handle: function(frame, wire, msg, source, topic) {\n\n        const len = msg.length || 0;\n        for(let i = 0; i < len; i++){\n            const chunk = msg[i];\n            frame.emit(wire, chunk, source, topic);\n        }\n\n    }\n\n};\n\n\nclass Handler {\n\n    constructor(def){\n\n        this.process = (def && def.process) ? this[def.process](def) : PASS;\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n        this.process.handle(frame, wire, msg, source, topic)\n    };\n\n    eddy(def) {\n\n        return new Eddy(def);\n\n    };\n\n    tap(def) {\n        return new Tap(def);\n    };\n\n    msg(def) {\n        return new Msg(def);\n    }\n\n    source(def) {\n        return new Source(def);\n    }\n\n    filter(def) {\n        return new Filter(def);\n    };\n\n    skipDupes(def) {\n        return new SkipDupes(def);\n    };\n\n    delay(def) {\n        return new Delay(def);\n    };\n\n    scan(def) {\n        return new Scan(def);\n    };\n\n    group(def) {\n        return new Group(def);\n    };\n\n    lastN(def) {\n        return new LastN(def.args[0]);\n    };\n\n    firstN(def) {\n        return new FirstN(def.args[0]);\n    };\n\n    all() {\n        return new All();\n    };\n\n\n    split() {\n        return SPLIT;\n    };\n\n\n\n}\n\n\nexport default Handler;","\nimport Wave from './wave.js';\nimport Pool from './pool.js';\nimport Handler from './handler.js';\n\n\nclass Frame {\n\n    constructor(bus, def) {\n\n        this._bus = bus;\n        this._nextFrame = null; // frames to join or fork into\n        this._index = bus._frames.length;\n        this._wireMap = {}; //new WeakMap(); // wires as keys, handlers/pools as values\n        this._holding = false; // begins pools allowing multiple method calls -- must close with a time operation\n        this._processDef = def; // wave or pool definition\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        const wireId = wire._id;\n        const hasWire = this._wireMap.hasOwnProperty(wireId);//this._wireMap.has(wire); //this._wireMap.hasOwnProperty(wireId); //\n        if(!hasWire)\n            this._wireMap[wireId] = this._createHandler(wire);\n            // this._wireMap.set(wire, this._createHandler(wire));\n\n        const handler = this._wireMap[wireId]; // this._wireMap.get(wire);\n        handler.handle(this, wire, msg, source || wire.name , topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    _createHandler(wire){\n\n        const def = this._processDef;\n        return (def && def.name === 'pool') ? new Pool(this, wire, def) : new Handler(def);\n\n    };\n\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default Frame;\n\n\n","import F from './flib.js';\n\nlet _id = 0;\n\nclass Wire {\n\n    constructor(name){\n\n        this._id = ++_id + '';\n        this.target = null; // a frame in a bus\n        this.dead = false;\n        this.name = name;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n\n    };\n\n    handle(msg, source, topic) {\n\n        if(!this.dead && this.target)\n            this.target.handle(this, msg, this.name, topic);\n\n        //return this;\n\n    };\n\n    destroy(){\n\n        if(!this.dead && this.target){\n            this.dead = true;\n            this.cleanupMethod();\n        }\n\n    };\n\n}\n\n\nWire.fromInterval = function(delay, name){\n\n    const wire = new Wire(name);\n\n    const toWire = function(msg){\n        wire.handle(msg);\n    };\n\n    const id = setInterval(toWire, delay);\n\n    wire.cleanupMethod = function(){\n        clearInterval(id);\n    };\n\n    return wire;\n\n};\n\n\nWire.fromMonitor = function(data, name){\n\n    const wire = new Wire(name);\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, source, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire);\n    };\n\n    data.monitor(toWire);\n\n    return wire;\n\n};\n\n\n\nWire.fromSubscribe = function(data, topic, name, canPull){\n\n    const wire = new Wire(name || topic || data.name);\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, source, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire, topic);\n    };\n\n    if(canPull){\n        wire.pull = function(){\n            const present = data.present(topic);\n            if(present) {\n                const msg = data.read(topic);\n                const source = wire.name;\n                wire.handle(msg, source, topic);\n            }\n        }\n    }\n\n    data.subscribe(toWire, topic);\n\n    return wire;\n\n};\n\n\n\nWire.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const wire = new Wire(eventName);\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toWire = function(msg){\n        wire.handle(msg, eventName);\n    };\n\n    wire.cleanupMethod = function(){\n        off.call(target, eventName, toWire, useCapture);\n    };\n\n    on.call(target, eventName, toWire, useCapture);\n\n    return wire;\n\n};\n\n\nexport default Wire;","\n\nimport Wire from './wire.js';\n\nclass FrameMerger {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._nextFrame = null;\n        this._index = bus._frames.length;\n        this._mergingWire = new Wire();\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        this.emit(this._mergingWire, msg, source, topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return false;\n    };\n\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameMerger;\n\n\n","\nimport Wave from './wave.js';\nimport Handler from './handler.js';\n\nclass FrameStateless {\n\n    constructor(bus, def) {\n\n        this._bus = bus;\n        this._nextFrame = null;\n        this._index = bus._frames.length;\n        this._process = new Handler(def);\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        this._process.handle(this, wire, msg, source || wire.name , topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return false;\n    };\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameStateless;\n\n\n","\nclass PoolDef {\n\n    constructor(){\n\n        this.name = 'pool';\n        this.keep  = null;\n        this.when  = null;\n        this.until = null;\n        this.timer = null;\n        this.clear = null;\n\n    };\n\n}\n\n\nexport default PoolDef;","\nimport Pool from './pool.js';\nimport PoolDef from './poolDef.js';\n\nclass FrameHold {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._nextFrame = null;\n        this._index = bus._frames.length;\n        this._wireMap = new WeakMap(); // wires as keys, handlers/pools as values\n        this._processDef = new PoolDef(); // pool definition\n        this._holding = true;\n\n    };\n\n    handle(wire, msg, source, topic){\n\n        //const wireId = wire._id;\n        const hasWire = this._wireMap.has(wire); //this._wireMap.hasOwnProperty(wireId); //\n        if(!hasWire)\n            // this._wireMap[wireId] = this._createHandler(wire);\n            this._wireMap.set(wire, this._createHandler(wire));\n\n        const handler = this._wireMap.get(wire);\n        handler.handle(this, wire, msg, source || wire.name , topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    _createHandler(wire){\n\n        const def = this._processDef;\n        return new Pool(this, wire, def);\n\n    };\n\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameHold;\n\n\n","\n\nclass FrameForker {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._targets = []; // frames to join or fork into\n        this._index = bus._frames.length;\n\n    };\n\n    // handle is a multi-emit\n\n    handle(wire, msg, source, topic){\n\n        const len = this._targets.length;\n        for(let i = 0; i < len; i++){\n            const frame = this._targets[i];\n            frame.handle(wire, msg, source, topic);\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return false;\n    };\n\n    target(frame) {\n\n        this._targets.push(frame);\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameForker;\n\n\n","\nclass WaveDef {\n\n    constructor(process, action, stateful, ...args){\n\n        this.name = 'wave';\n        this.process = process;\n        this.action = action;\n        this.stateful = stateful;\n        this.args = args;\n\n    };\n\n}\n\nexport default WaveDef;","\n\nconst Nyan = {};\n\n// then = applies to all words in a phrase\n// watch: ^ = action, need, event, watch | read, must\n// then:  run, read, attr, and, style, write, blast, filter\n\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^',  react: true, subscribe: true, need: true, solo: true},\n    {name: 'WIRE',   sym: '~',  react: true, follow: true}, // INTERCEPT\n    {name: 'WATCH',  sym: null, react: true, follow: true},\n    {name: 'EVENT',  sym: '@',  react: true, event: true},\n    {name: 'ALIAS',  sym: '(',  then: true, solo: true},\n    {name: 'METHOD', sym: '`',  then: true, solo: true},\n    {name: 'READ',   sym: null, then: true, read: true},\n    {name: 'ATTR',   sym: '#',  then: true, solo: true, output: true},\n    {name: 'AND',    sym: '&',  then: true },\n    {name: 'STYLE',  sym: '$',  then: true,  solo: true, output: true },\n    {name: 'WRITE',  sym: '=',  then: true,  solo: true },\n    {name: 'SPRAY',  sym: '<',  then: true },\n    {name: 'RUN',    sym: '*',  then: true, output: true },\n    {name: 'FILTER', sym: '>',  then: true }\n\n];\n\n// cat, dog | & meow, kitten {*log} | =puppy\n\n\n// todo make ! a trailing thingie, must goes away\n// trailing defs -- ! = needs message in data to continue, ? = data must exist or throw error\n// {name: 'BEGIN',  sym: '{'}, -- fork\n// {name: 'END',    sym: '}'}, -- back\n// {name: 'PIPE',   sym: '|'}, -- phrase delimiter\n// read = SPACE\n// - is data maybe (data point might not be present)\n// ? is object maybe (object might not be there)\n// () is rename\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst thenByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n\n    if(sym) {\n        operationsBySymbol[sym] = op;\n        namesBySymbol[sym] = name;\n    }\n\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n\n    if(op.then){\n        thenByName[name] = true;\n    }\n\n    if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, need, topic, alias, monitor, extracts){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.need = need || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n        this.extracts = extracts && extracts.length ? extracts : null; // possible list of message property pulls\n        // this.useCapture =\n\n    }\n\n}\n\nlet tickStack = [];\n\nfunction toTickStackString(str){\n\n\n    tickStack = [];\n    const chunks = str.split(/([`])/);\n    const strStack = [];\n\n    let ticking = false;\n    while(chunks.length){\n        const c = chunks.shift();\n        if(c === '`'){\n            ticking = !ticking;\n            strStack.push(c);\n        } else {\n            if(ticking) {\n                tickStack.push(c);\n            } else {\n                strStack.push(c);\n            }\n        }\n    }\n\n    const result = strStack.join('');\n    //console.log('stack res', result, tickStack);\n    return result;\n}\n\nfunction parse(str, isProcess) {\n\n\n    str = toTickStackString(str);\n\n    const sentences = [];\n\n    // split on curlies and remove empty chunks (todo optimize for parsing speed, batch loop operations?)\n    let chunks = str.split(/([{}]|-})/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === '}' || chunk === '{' || chunk === '-}') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            sentences.push(sentence);\n\n    }\n\n    return validate(sentences, isProcess);\n\n\n}\n\nfunction validate(sentences, isProcess){\n\n    const cmdList = [];\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase && !isProcess) {\n                    validateReactPhrase(phrase);\n                    firstPhrase = false;\n                    cmdList.push({name: 'REACT', phrase: phrase});\n                }\n                else {\n                    validateProcessPhrase(phrase);\n                    cmdList.push({name: 'PROCESS', phrase: phrase});\n                }\n            }\n\n        } else if (s === '{') {\n            cmdList.push({name: 'FORK'});\n        } else if (s === '}') {\n            cmdList.push({name: 'BACK'});\n        } else if (s === '-}') {\n            cmdList.push({name: 'JOIN'});\n        }\n    }\n\n    return cmdList;\n}\n\n\nfunction validateReactPhrase(phrase){\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const operation = nw.operation = nw.operation || 'WATCH';\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with an observation!');\n\n}\n\n\n\nfunction validateProcessPhrase(phrase){\n\n    const firstPhrase = phrase[0];\n    const firstOperation = firstPhrase.operation || 'READ';\n\n    if(!thenByName[firstOperation])\n        throw new Error('Illegal operation in phrase!'); // unknown or reactive\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        nw.operation = nw.operation || firstOperation;\n        if(nw.operation !== firstOperation){\n\n           // console.log('mult', nw.operation, firstOperation);\n            throw new Error('Multiple operation types in phrase (only one allowed)!');\n\n        }\n\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        //console.log('word=', rawWord);\n        const rawChunks = rawWord.split(/([(?!:.`)])/);\n        const chunks = [];\n        let inMethod = false;\n\n        // white space is only allowed between e.g. `throttle 200`, `string meow in the hat`\n\n        while(rawChunks.length){\n            const next = rawChunks.shift();\n            if(next === '`'){\n                inMethod = !inMethod;\n                chunks.push(next);\n            } else {\n                if(!inMethod){\n                    const trimmed = next.trim();\n                    if(trimmed)\n                        chunks.push(trimmed);\n                } else {\n                    chunks.push(next);\n                }\n            }\n        }\n\n        //console.log('to:', chunks);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start).trim();\n        const extracts = [];\n\n        // todo hack (rename)\n\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n        let need = false;\n\n        if(operation === 'ALIAS'){\n            alias = chunks.shift();\n            chunks.shift(); // todo verify ')'\n        } else if (operation === 'METHOD'){\n                chunks.shift();\n                // const next = chunks.shift();\n                const next = tickStack.shift();\n                const i = next.indexOf(' ');\n                if(i === -1) {\n                    extracts.push(next);\n                } else {\n                    extracts.push(next.slice(0, i));\n                    if(next.length > i){\n                        extracts.push(next.slice(i + 1));\n                    }\n                }\n\n            while(chunks.length){ chunks.shift(); }\n        }\n\n        while(chunks.length){\n\n            const c = chunks.shift();\n\n            switch(c){\n\n                case '.':\n\n                    const prop = chunks.length && chunks[0]; // todo assert not operation\n                    const silentFail = chunks.length > 1 && (chunks[1] === '?');\n\n                    if(prop) {\n                        extracts.push({name: prop, silentFail: silentFail});\n                        chunks.shift(); // remove word from queue\n                        if(silentFail)\n                            chunks.shift(); // remove ? from queue\n                    }\n\n                    break;\n\n                case '?':\n\n                    maybe = true;\n                    break;\n\n                case '!':\n\n                    need = true;\n                    break;\n\n                case ':':\n\n                    if(chunks.length){\n                        const next = chunks[0];\n                        if(next === '('){\n                            monitor = true;\n                        } else {\n                            topic = next;\n                            chunks.shift(); // remove topic from queue\n                        }\n                    } else {\n                        monitor = true;\n                    }\n\n                    break;\n\n                case '(':\n\n                    if(chunks.length){\n                        alias = chunks.shift(); // todo assert not operation\n                    }\n\n                    break;\n\n\n\n            }\n\n        }\n\n        alias = alias || topic || name;\n        const nw = new NyanWord(name, operation, maybe, need, topic, alias, monitor, extracts);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","import Wire from './wire.js';\nimport Nyan from './nyan.js';\nimport Bus from './bus.js';\n\n\nfunction getSurveyFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    return data && data.survey();\n\n}\n\nfunction throwError(msg){\n    console.log('throwing ', msg);\n    const e = new Error(msg);\n    console.log(this, e);\n    throw e;\n}\n\nfunction getDoSkipNamedDupes(names){\n\n    let lastMsg = {};\n    const len = names.length;\n\n    return function doSkipNamedDupes(msg) {\n\n        let diff = false;\n        for(let i = 0; i < len; i++){\n            const name = names[i];\n            if(!lastMsg.hasOwnProperty(name) || lastMsg[name] !== msg[name])\n                diff = true;\n            lastMsg[name] = msg[name];\n        }\n\n        return diff;\n\n    };\n}\n\n\nfunction getDoWrite(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n\n    return function doWrite(msg) {\n        data.write(msg, word.topic);\n    };\n\n}\n\n\nfunction getDoSpray(scope, phrase){\n\n    const wordByAlias = {};\n    const dataByAlias = {};\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++){ // todo, validate no dupe alias in word validator for spray\n\n        const word = phrase[i];\n        const data = scope.find(word.name, !word.maybe);\n        if(data) { // might not exist if optional\n            wordByAlias[word.alias] = word;\n            dataByAlias[word.alias] = data;\n        }\n\n    }\n\n    return function doWrite(msg) {\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                const msgPart = msg[alias];\n                data.silentWrite(msgPart, word.topic);\n            }\n\n        }\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                data.refresh(word.topic);\n            }\n\n        }\n\n\n    };\n\n\n}\n\n\nfunction getDoRead(scope, phrase){\n\n    const len = phrase.length;\n    const firstWord = phrase[0];\n\n    if(len > 1 || firstWord.monitor) { // if only reading word is a wildcard subscription then hash as well\n        return getDoReadMultiple(scope, phrase);\n    } else {\n        return getDoReadSingle(scope, firstWord);\n    }\n\n}\n\n\nfunction getDoAnd(scope, phrase) {\n\n    return getDoReadMultiple(scope, phrase, true);\n\n}\n\n\nfunction getDoReadSingle(scope, word) {\n\n    const data = scope.find(word.name, !word.maybe);\n    const topic = word.topic;\n\n    return function doReadSingle() {\n\n        return data.read(topic);\n\n    };\n\n}\n\n\nfunction getDoReadMultiple(scope, phrase, isAndOperation){\n\n\n        const len = phrase.length;\n\n\n        return function doReadMultiple(msg, source) {\n\n            const result = {};\n\n            if(isAndOperation){\n\n                if(source){\n                    result[source] = msg;\n                } else {\n                    for (const p in msg) {\n                        result[p] = msg[p];\n                    }\n                }\n            }\n\n            for (let i = 0; i < len; i++) {\n                const word = phrase[i];\n\n                if(word.monitor){\n\n                    const survey = getSurveyFromDataWord(scope, word);\n                    for(const [key, value] of survey){\n                        result[key] = value;\n                    }\n\n                } else {\n\n                    const data = scope.find(word.name, !word.maybe);\n                    const prop = word.monitor ? (word.alias || word.topic) : (word.alias || word.name);\n                    if (data.present(word.topic))\n                        result[prop] = data.read(word.topic);\n\n                }\n\n            }\n\n            return result;\n\n        };\n\n}\n\n\n// get data stream -- store data in bus, emit into stream on pull()\n\n\nfunction getDataWire(scope, word, canPull) {\n\n    const data = scope.find(word.name, !word.maybe);\n    if(word.monitor){\n        return Wire.fromMonitor(data, word.alias, canPull);\n    } else {\n        return Wire.fromSubscribe(data, word.topic, word.alias, canPull);\n    }\n\n}\n\nfunction isObject(v) {\n    if (v === null)\n        return false;\n    return (typeof v === 'function') || (typeof v === 'object');\n}\n\n\nfunction getEventWire(word, target){\n\n    return Wire.fromEvent(target, word.topic, word.useCapture, word.alias);\n\n}\n\nfunction doExtracts(value, extracts) {\n\n    let result = value;\n    const len = extracts.length;\n\n    for (let i = 0; i < len; i++) {\n        const extract = extracts[i];\n        if(!isObject(result)) {\n            if(extract.silentFail)\n                return undefined;\n\n            throwError('Cannot access property \\'' + extract.name + '\\' of ' + result);\n\n        }\n        result = result[extract.name];\n    }\n\n\n    return result;\n\n}\n\nfunction getNeedsArray(phrase){\n    return phrase.filter(word => word.operation.need).map(word => word.alias);\n}\n\nfunction getDoMsgHashExtract(words) {\n\n    const len = words.length;\n    const extractsByAlias = {};\n\n    for (let i = 0; i < len; i++) {\n\n        const word = words[i];\n        extractsByAlias[word.alias] = word.extracts;\n\n    }\n\n    return function(msg) {\n\n        const result = {};\n        for(const alias in extractsByAlias){\n            const hasProp = msg.hasOwnProperty(alias);\n            if(hasProp){\n                result[alias] = doExtracts(msg[alias], extractsByAlias[alias]);\n            }\n        }\n\n        return result;\n\n    };\n\n}\n\nfunction getDoMsgExtract(word) {\n\n    const extracts = word.extracts;\n\n    return function(msg){\n        return doExtracts(msg, extracts);\n    }\n\n}\n\n\nfunction applyReaction(scope, bus, phrase, target) { // target is some event emitter\n\n    const need = [];\n    const skipDupes = [];\n    const extracts = [];\n\n    if(phrase.length === 1 && phrase[0].operation === 'ACTION'){\n        const word = phrase[0];\n        bus.wire(getDataWire(scope, word, false));\n        return;\n    }\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const word = phrase[i];\n        const operation = word.operation;\n\n        if(operation === 'WATCH') {\n            bus.wire(getDataWire(scope, word, true));\n            skipDupes.push(word.alias)\n        }\n        else if(operation === 'WIRE'){\n            bus.wire(getDataWire(scope, word, true));\n        }\n        else if(operation === 'EVENT') {\n            bus.wire(getEventWire(word, target));\n        }\n\n        if(word.extracts)\n            extracts.push(word);\n\n        if(word.need)\n            need.push(word.alias);\n\n    }\n\n    // transformations are applied via named hashes for performance\n\n    if(bus._wires.length > 1) {\n\n        bus.merge().group().batch();\n\n        if(extracts.length)\n            bus.msg(getDoMsgHashExtract(extracts));\n\n        if(need.length)\n            bus.hasKeys(need);\n\n        if(skipDupes.length){\n            bus.filter(getDoSkipNamedDupes(skipDupes));\n        }\n\n    } else {\n\n        if(extracts.length)\n            bus.msg(getDoMsgExtract(extracts[0]));\n\n        if(skipDupes.length)\n            bus.skipDupes();\n\n    }\n\n}\n\nfunction isTruthy(msg){\n    return !!msg;\n}\n\nfunction isFalsey(msg){\n    return !msg;\n}\n\n\nfunction applyMethod(bus, word) {\n\n    const method = word.extracts[0];\n\n    switch(method){\n\n        case 'true':\n            bus.msg(true);\n            break;\n\n        case 'false':\n            bus.msg(false);\n            break;\n\n        case 'null':\n            bus.msg(null);\n            break;\n\n        case 'undefined':\n            bus.msg(undefined);\n            break;\n\n        case 'array':\n            bus.msg([]);\n            break;\n\n        case 'object':\n            bus.msg({});\n            break;\n\n        case 'truthy':\n            bus.filter(isTruthy);\n            break;\n\n        case 'falsey':\n            bus.filter(isFalsey);\n            break;\n\n        case 'string':\n            bus.msg(function(){ return word.extracts[1];});\n            break;\n\n            // throttle x, debounce x, delay x, last x, first x, all\n\n    }\n\n}\n\nfunction applyProcess(scope, bus, phrase, context, node) {\n\n    const operation = phrase[0].operation; // same for all words in a process phrase\n\n    if(operation === 'READ') {\n        bus.msg(getDoRead(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'AND') {\n        bus.msg(getDoAnd(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if (needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'METHOD') {\n        applyMethod(bus, phrase[0]);\n    } else if (operation === 'FILTER') {\n        applyFilterProcess(bus, phrase, context);\n    } else if (operation === 'RUN') {\n        applyMsgProcess(bus, phrase, context);\n    } else if (operation === 'ALIAS') {\n        applySourceProcess(bus, phrase[0]);\n    } else if (operation === 'WRITE') {\n        bus.run(getDoWrite(scope, phrase[0]));\n    } else if (operation === 'SPRAY') {\n        bus.run(getDoSpray(scope, phrase)); // todo validate that writes do not contain words in reacts\n\n    }\n\n}\n\n\n\nfunction applyMsgProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.msg(f);\n\n    }\n\n}\n\n\nfunction applyRunProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.run(f);\n\n    }\n\n}\n\nfunction applySourceProcess(bus, word){\n\n    bus.source(word.alias);\n\n}\n\n\nfunction applyFilterProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.filter(f);\n\n    }\n\n}\n\nfunction createBus(nyan, scope, context, target){\n\n    let bus = new Bus(scope);\n    return applyNyan(nyan, bus, context, target);\n\n}\n\nfunction applyNyan(nyan, bus, context, target){\n\n    const len = nyan.length;\n    const scope = bus.scope;\n    for(let i = 0; i < len; i++){\n\n        const cmd = nyan[i];\n        const name = cmd.name;\n        const phrase = cmd.phrase;\n\n        if(name === 'JOIN') {\n\n            bus = bus.join();\n            bus.merge();\n            bus.group();\n\n        } else if(name === 'FORK'){\n            bus = bus.fork();\n        } else if (name === 'BACK'){\n            bus = bus.back();\n        } else {\n\n            if(name === 'PROCESS')\n                applyProcess(scope, bus, phrase, context, target);\n            else // name === 'REACT'\n                applyReaction(scope, bus, phrase, target);\n\n        }\n    }\n\n    return bus;\n\n}\n\nconst NyanRunner = {\n    applyNyan: applyNyan,\n    createBus: createBus\n};\n\n\nexport default NyanRunner;","\nimport Frame from './frame.js';\nimport FrameMerger from './frameMerger.js';\nimport FrameStateless from './frameStateless.js';\nimport FrameHold from './frameHold.js';\nimport FrameForker from './frameForker.js';\nimport F from './flib.js';\nimport Wire from './wire.js';\nimport WaveDef from './waveDef.js';\nimport Nyan from './nyan.js';\nimport NyanRunner from './nyanRunner.js';\n\nclass Bus {\n\n    constructor(scope) {\n\n        this._frames = [];\n        this._wires = [];\n        this._dead = false;\n        this._scope = scope;\n        this._children = []; // from forks\n        this._parent = null;\n\n        if(scope)\n            scope._busList.push(this);\n\n        const f = new FrameStateless(this);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame(def) {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = (def && def.stateful) ? new Frame(this, def) : new FrameStateless(this, def);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n    addFrameHold() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new FrameHold(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n\n    addFrameMerger() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new FrameMerger(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n    addFrameForker() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new FrameForker(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n\n    process(nyan, context, target){\n\n        if(typeof nyan === 'string')\n            nyan = Nyan.parse(nyan, true);\n\n        NyanRunner.applyNyan(nyan, this, context, target);\n        return this;\n\n    }\n\n    // create stream\n    spawn(){\n\n    }\n\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        fork.parent = this;\n        this.addFrameForker();\n        this._currentFrame.target(fork._currentFrame);\n\n        return fork;\n    };\n\n    back() {\n\n        if(!this._parent)\n            throw new Error('Cannot exit fork, parent does not exist!');\n\n        return this.parent;\n\n    };\n\n    join() {\n\n        const parent = this.back();\n        parent.add(this);\n        return parent;\n\n    }\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        bus._currentFrame.target(frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrameHold();\n        return this;\n\n    };\n\n    pull() {\n\n        const len = this._wires.length;\n\n        for(let i = 0; i < len; i++) {\n            const wire = this._wires[i];\n            wire.pull();\n        }\n\n        return this;\n\n    };\n\n    event(target, eventName, useCapture) {\n\n        const wire = Wire.fromEvent(target, eventName, useCapture);\n        return this.wire(wire);\n\n    };\n\n    subscribe(data, topic, name, canPull){\n\n        const wire = Wire.fromSubscribe(data, topic, name, canPull);\n        return this.wire(wire);\n\n    };\n\n    interval(delay, name){\n\n        const wire = Wire.fromInterval(delay, name);\n        return this.wire(wire);\n\n    }\n\n    wire(wire, targetFrame) {\n\n        wire.target = targetFrame || this._frames[0];\n        this._wires.push(wire);\n        return this;\n\n    }\n\n    monitor(data, name){\n\n        const wire = Wire.fromMonitor(data, name);\n        wire.target = this._frames[0];\n        this._wires.push(wire);\n\n        return this;\n\n    };\n\n\n    scan(func, seed){\n\n        if(!this.holding) {\n            this.addFrame(new WaveDef('scan', func, true, 0));\n            return this;\n        }\n\n        return this.reduce(F.getScan, func, seed);\n\n    };\n\n    delay(fNum) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('delay', F.FUNCTOR(fNum)));\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n\n        return this.when(F.getWhenKeys, true, keys);\n\n    };\n\n    group(by) {\n\n        if(!this.holding) {\n             this.addFrame(new WaveDef('group', null, true));\n             return this;\n        }\n        this.reduce(F.getGroup, by);\n        return this;\n\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        if(!this.holding) {\n            this.addFrame(new WaveDef('all', null, true));\n            return this;\n        }\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        if(!this.holding) {\n            this.addFrame(new WaveDef('firstN', null, true, n));\n            return this;\n        }\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        if(!this.holding) {\n            this.addFrame(new WaveDef('lastN', null, true, n));\n            return this;\n        }\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        const holding = this.holding;\n\n        if(!holding){\n\n            this.addFrame(new WaveDef('msg', factory, true, ...args));\n\n        } else {\n\n            const frame = this._currentFrame;\n            const def = frame._processDef;\n            def.keep = [factory, true, ...args];\n\n        }\n\n        return this;\n\n    };\n\n    timer(factory, stateful, ...args) {\n\n        const holding = this.holding;\n        const frame = holding ? this._currentFrame : this.addFrameHold();\n        const def = frame._processDef;\n        def.timer = [factory, stateful, ...args];\n        this._currentFrame._holding = false; // timer ends hold\n\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrameHold().reduce(F.getKeepLast).until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, stateful, ...args) {\n\n        const holding = this.holding;\n\n        if(!holding){\n\n            this.addFrame(new WaveDef('filter', factory, stateful, ...args));\n\n        } else {\n\n            const frame = this._currentFrame;\n            const def = frame._processDef;\n            def.when = [factory, stateful, ...args];\n\n        }\n\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('tap', func));\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrameMerger();\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('msg', F.FUNCTOR(fAny)));\n        return this;\n\n    };\n\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('source', F.FUNCTOR(fStr)));\n        return this;\n\n    };\n\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('filter', func));\n        return this;\n\n\n    };\n\n    split() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('split'));\n        return this;\n\n    };\n\n    hasKeys(keys) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame(new WaveDef('filter', F.getHasKeys(keys)));\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('skipDupes', null, true));\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const wires = this._wires;\n        const len = wires.length;\n        for (let i = 0; i < len; i++) {\n            const wire = wires[i];\n            wire.destroy();\n        }\n\n        this._wires = null;\n        return this;\n\n    };\n\n}\n\n\n\nexport default Bus;\n","\n\nimport Data from './data.js';\nimport { DATA_TYPES } from './dataTypes.js';\nimport Bus from './bus.js';\nimport NyanRunner from './nyanRunner.js';\nimport Nyan from './nyan.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    bus(strOrNyan, context, node){\n\n        if(!strOrNyan)\n            return new Bus(this);\n\n        const nyan = (typeof strOrNyan === 'string') ? Nyan.parse(strOrNyan) : strOrNyan;\n        console.log(nyan);\n        return NyanRunner.createBus(nyan, this, context, node);\n\n    };\n\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n\n                if (d.present())\n                    result[d.name] = d.read();\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Wire from './wire.js';\nimport Bus from './bus.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\nCatbus.bus = function(){\n    return new Bus();\n};\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const bus = new Bus();\n    bus.event(target, eventName, useCapture);\n    return bus;\n\n};\n\n// todo stable output queue -- output pools go in a queue that runs after the batch q is cleared, thus run once only\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\n\nCatbus.createChild = Catbus.scope = function(name){\n\n    return new Scope(name);\n\n};\n\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["Packet","msg","topic","source","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","hasOwnProperty","ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","TO_TOPIC","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","noLatch","hadMsg","lastMsg","diff","bus","holding","To_MSG","callMany","list","s","callNoOne","callOne","SubscriberList","data","_subscribers","_callback","_used","_lastMsg","_lastTopic","_data","_name","_dead","ACTION","handle","handleAction","silently","name","watcher","determineCaller","indexOf","splice","Data","scope","NONE","_scope","_type","_noTopicList","_wildcardSubscriberList","_subscriberListsByTopic","values","destroy","expectedType","subscribe","used","lastTopic","_demandSubscriberList","add","remove","subscriberList","undefined","write","MIRROR","read","pass","frame","wire","emit","Wave","def","process","action","stateful","chunk","callback","Pool","fromDef","factory","F","getKeepLast","when","until","timer","clear","isPrimed","prop","hasContent","Tap","value","Msg","nextMsg","Source","nextSource","Filter","Delay","Scan","SkipDupes","hadValue","LastN","max","FirstN","All","hasValue","Group","PASS","SPLIT","Handler","Eddy","Frame","_bus","_nextFrame","_index","_frames","_wireMap","_holding","_processDef","wireId","_id","hasWire","_createHandler","handler","Wire","target","cleanupMethod","pull","fromInterval","delay","toWire","id","setInterval","fromMonitor","unsubscribe","monitor","fromSubscribe","canPull","present","fromEvent","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","FrameMerger","_mergingWire","FrameStateless","_process","PoolDef","FrameHold","WeakMap","has","set","get","FrameForker","_targets","WaveDef","Nyan","operationDefs","sym","react","need","solo","follow","event","then","output","operationsBySymbol","operationsByName","symbolsByName","namesBySymbol","reactionsByName","withReactionsByName","thenByName","op","NyanWord","operation","maybe","alias","extracts","tickStack","toTickStackString","str","chunks","split","strStack","ticking","c","result","join","parse","isProcess","sentences","map","d","trim","filter","sentence","parseSentence","validate","cmdList","firstPhrase","j","phrase","validateReactPhrase","hasReaction","nw","validateProcessPhrase","firstOperation","parsePhrase","words","rawWords","rawWord","rawChunks","inMethod","trimmed","nameAndOperation","firstChar","start","slice","silentFail","getSurveyFromDataWord","word","find","survey","throwError","log","e","getDoSkipNamedDupes","names","doSkipNamedDupes","getDoWrite","doWrite","getDoSpray","wordByAlias","dataByAlias","msgPart","silentWrite","refresh","getDoRead","firstWord","getDoReadMultiple","getDoReadSingle","getDoAnd","doReadSingle","isAndOperation","doReadMultiple","key","getDataWire","isObject","getEventWire","doExtracts","extract","getNeedsArray","getDoMsgHashExtract","extractsByAlias","hasProp","getDoMsgExtract","applyReaction","skipDupes","_wires","merge","group","batch","hasKeys","isTruthy","isFalsey","applyMethod","method","applyProcess","context","node","needs","whenKeys","run","applyMsgProcess","applySourceProcess","applyFilterProcess","createBus","nyan","Bus","applyNyan","cmd","fork","back","NyanRunner","_children","_parent","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","parent","addFrameForker","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","addFrameHold","targetFrame","reduce","getScan","ASSERT_NEED_ONE_ARGUMENT","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","hold","getKeepAll","getKeepFirst","ASSERT_IS_FUNCTION","addFrameMerger","fAny","fStr","getHasKeys","wires","newParent","oldParent","idCounter","_destroyEach","arr","item","Scope","_dataList","Map","_valves","_mirrors","strOrNyan","children","child","mirror","Object","create","grab","_createData","verify","STATE","state","_createMirror","required","dataSet","findDataSet","appliedValves","dataList","valves","mirrors","size","delete","entries","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","w","writeHash","from","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","nextTick","createChild","cycles","q"],"mappings":"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"}
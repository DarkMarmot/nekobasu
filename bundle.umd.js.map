{"version":3,"file":"bundle.umd.js","sources":["src/packet.js","src/dataTypes.js","src/subscriberList.js","src/data.js","src/scope.js","src/flib.js","src/stream.js","src/frame.js","src/bus.js","src/catbus.js","src/main.js"],"sourcesContent":["\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    tell(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.tell(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._noTopicSubscriberList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.tell(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        const subscriberList = (!topic) ? this._noTopicSubscriberList : this._demandSubscriberList(topic);\n        subscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(typeof topic !== 'string'){\n            this._noTopicSubscriberList.remove(watcher);\n        } else {\n            let subscriberList = this._demandSubscriberList(topic);\n            subscriberList.remove(watcher);\n        }\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        let subscriberList = topic ? this._subscriberListsByTopic.get(topic) : this._noTopicSubscriberList;\n        if(!subscriberList)\n            return null;\n        return subscriberList.lastPacket;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        if(topic) {\n            let list = this._demandSubscriberList(topic);\n            list.tell(msg);\n        }\n        else {\n            this._noTopicSubscriberList.tell(msg, null, silently);\n        }\n\n        this._wildcardSubscriberList.tell(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(this.read(topic), topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\n\nlet idCounter = 0;\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        for(const child of this._children){\n            child.destroy();\n        }\n\n        for(const data of this._dataList.values()){\n            data.destroy();\n        }\n\n        this._children = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray, dimension){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic || null);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic || null);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Catbus from './catbus.js';\n\n\nconst Func = {\n\n    FUNCTOR: function(val) {\n        return (typeof val === 'function') ? val : function() { return val; };\n    },\n\n    NOOP: function(){},\n\n    ALWAYS_TRUE: function(){ return true; },\n\n    ALWAYS_FALSE: function(){ return false;},\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    SKIP_DUPES_FILTER: function(msg, source, last){\n        return msg !== (last && last.msg);\n    },\n\n    TO_SOURCE_FUNC: function(msg, source) {\n        return source;\n    },\n\n    BATCH_TIMER: function(){\n        Catbus.enqueue(this);\n    },\n\n    DEFER_TIMER: function(){\n        setTimeout(this.fireContent, 0);\n    },\n\n    KEEP_LAST: function(buffer, msg, n){\n\n        if(n === 0){\n            if(buffer.length === 0)\n                buffer.push(msg);\n            else\n                buffer[0] = msg;\n            return buffer;\n        }\n\n        buffer.push(msg);\n\n        if(buffer.length > n)\n            buffer.shift();\n\n        return buffer;\n\n    },\n\n    KEEP_FIRST: function(buffer, msg, n){\n\n        if(buffer.length < n || buffer.length === 0)\n            buffer.push(msg);\n\n        return buffer;\n\n    },\n\n    KEEP_ALL: function(buffer, msg){\n\n        buffer.push(msg);\n        return buffer;\n\n    },\n\n    UNTIL_FULL: function(messages, n){\n\n        return messages.length >= n;\n\n    },\n\n    UNTIL_KEYS: function(messagesByKey, keys){\n\n        const len = keys.length;\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            if(!messagesByKey.hasOwnProperty(k))\n                return false;\n        }\n        return true;\n\n    },\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nexport default Func;","\nimport F from './flib.js';\nimport Packet from './packet.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.debugFrame = null;\n        this.dead = false;\n        this.children = [];\n        this.lastPacket = null;\n        this.name = null;\n        this.messages = []; // [] with hold\n        this.messagesByKey = {}; // {} with group\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.processName = 'doPass'; // default to pass things along last thing unchanged\n        this.processMethod = this.doPass;\n        this.keepMethod = F.KEEP_LAST; // default if holding or grouping\n        this.keepCount = 0; // non-zero creates an array\n        this.timerMethod = null; // throttle, debounce, defer, batch\n        this.groupMethod = null;\n        this.actionMethod = null; // run, transform, filter, name, delay\n        this.neededKeys = []; // todo generate this in readymethod closure\n        this.readyMethod = F.ALWAYS_TRUE;\n        this.clearMethod = F.ALWAYS_FALSE;\n        this.latched = false; // from this.clearMethod()\n        this.primed = false;\n\n    };\n\n    process(name) {\n        this.processMethod = this[name];\n    };\n\n    tell(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        const last = this.lastPacket;\n        source = this.name || source; // named streams always pass their own name forward\n\n        // tell method = doDelay, doGroup, doHold, , doFilter\n        this.processMethod.call(this, msg, source, last);\n\n        return this;\n\n    };\n\n    fireContent() {\n\n        const msg = this.groupMethod ? this.resolveKeepByGroup() : this.resolveKeep(this.messages);\n\n        if(this.clearMethod()){\n            this.latched = false;\n            this.messagesByKey = {};\n            this.messages = [];\n        }\n\n        this.primed = false;\n\n        this.flowForward(msg);\n\n    };\n\n    resolveKeep(messages){\n\n        return this.keepCount === 0 ? messages[0] : messages;\n\n    };\n\n    resolveKeepByGroup(){\n\n        const messagesByKey = this.messagesByKey;\n        for(const k in messagesByKey){\n            messagesByKey[k] = this.resolveKeep(messagesByKey[k]);\n        }\n        return messagesByKey;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    flowsTo(stream){\n        this.children.push(stream);\n    };\n\n    flowForward(msg, source, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n        thisStream.lastPacket = new Packet(msg, null, source);\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.tell(msg, source);\n        }\n\n    };\n\n    doPass(msg, source) {\n\n        this.flowForward(msg, source);\n\n    };\n\n    doFilter(msg, source) {\n\n        if(!this.actionMethod(msg, source, this.lastPacket))\n            return;\n        this.flowForward(msg, source);\n\n    };\n\n    doKeep(msg, source) {\n\n        this.keepMethod(this.messages, msg, this.keepCount);\n        msg = this.resolveKeep(this.messages);\n        this.flowForward(msg, source);\n\n    };\n\n    doTransform(msg, source, last) {\n\n        msg = this.actionMethod(msg, source, last);\n        this.flowForward(msg, source);\n\n    };\n\n    doDelay(msg, source) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.flowForward, this.actionMethod() || 0, msg, source, this);\n\n    };\n\n    doName(msg, source, last) {\n\n        source = this.actionMethod(msg, source, last);\n        this.flowForward(msg, source);\n\n    };\n\n\n    doRun(msg, source, last) {\n\n        this.actionMethod(msg, source, last);\n        this.flowForward(msg, source);\n\n    };\n\n\n    doGroup(msg, source, last) {\n\n        const groupName = this.groupMethod(msg, source, last);\n        const messages = this.messagesByKey[groupName] || [];\n        this.messagesByKey[groupName]  = this.keepMethod(messages, msg, this.keepCount);\n\n        if(!this.primed && (this.latched = this.latched || this.readyMethod(this.messagesByKey))) {\n            if(this.timerMethod) {\n                this.primed = true;\n                this.timerMethod(); // should call back this.fireContent\n            } else {\n                this.fireContent();\n            }\n        }\n\n    };\n\n\n\n    doHold(msg, source, last) {\n\n        this.keepMethod(this.messages, msg, this.keepCount);\n\n        if(!this.primed && (this.latched = this.latched || this.readyMethod(this.messages))) {\n            if(this.timerMethod) {\n                this.primed = true;\n                this.timerMethod(); // should call back this.fireContent\n            } else {\n                this.fireContent();\n            }\n        }\n\n    };\n\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\n\nStream.fromData = function(data, topic, name){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n\n    const toStream = function(msg){\n        stream.tell(msg, streamName);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    data.follow(toStream, topic);\n\n    return stream;\n\n};\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.tell(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","import F from './flib.js';\n\n\nclass Frame {\n\n    constructor(bus, streams) {\n\n        this._bus = bus;\n        this._index = bus._frames.length;\n        this._holding = false; //begins group, keep, schedule frames\n        this._streams = streams || [];\n        this._eachStream('debugFrame', this);\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    get streams() {\n        return [].concat(this._streams);\n    }\n\n    _eachStream(prop, val){\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const stream = streams[i];\n            stream[prop] = val;\n\n        }\n\n        return this;\n\n    };\n\n    _eachStreamCall(method, val){\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const stream = streams[i];\n            stream[method].call(stream, val);\n\n        }\n\n        return this;\n\n    };\n    \n    run(func){\n\n        this._eachStream('actionMethod', func);\n        this._eachStreamCall('process', 'doRun');\n\n        return this;\n\n    };\n\n    hold(){\n\n        this._holding = true;\n        this._eachStreamCall('process', 'doHold');\n\n        return this;\n\n    };\n\n    transform(fAny){\n\n        fAny = F.FUNCTOR(fAny);\n\n        this._eachStreamCall('process', 'doTransform');\n        this._eachStream('actionMethod', fAny);\n\n        return this;\n\n    };\n\n    name(fStr){\n\n        fStr = F.FUNCTOR(fStr);\n\n        this._eachStreamCall('process', 'doName');\n        this._eachStream('actionMethod', fStr);\n\n        return this;\n\n    };\n\n\n    delay(fNum){\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n\n        fNum = F.FUNCTOR(fNum);\n\n        this._eachStream('actionMethod', fNum);\n        this._eachStreamCall('process', 'doDelay');\n\n        return this;\n\n    };\n\n\n    filter(func){\n\n\n        this._eachStream('actionMethod', func);\n        this._eachStreamCall('process', 'doFilter');\n\n        return this;\n    };\n\n    skipDupes(){\n\n        return this.filter(F.SKIP_DUPES_FILTER);\n\n    };\n\n    group(func){\n\n        this._holding = true;\n\n        func = arguments.length === 1 ? F.FUNCTOR(func) : F.TO_SOURCE_FUNC;\n\n        this._eachStreamCall('process', 'doGroup');\n        this._eachStream('groupMethod', func);\n\n        return this;\n\n    };\n\n\n    last(n){\n\n        n = Number(n) || 0;\n\n        this._eachStream('keepMethod', F.KEEP_LAST);\n        this._eachStream('keepCount', n);\n\n        if(!this._holding)\n            this._eachStreamCall('process', 'doKeep');\n\n        return this;\n\n    };\n\n    first(n){\n\n        n = Number(n) || 0;\n        this._eachStream('keepMethod', F.KEEP_FIRST);\n        this._eachStream('keepCount', n);\n\n        if(!this._holding)\n            this._eachStreamCall('process', 'doKeep');\n\n        return this;\n\n    };\n\n\n    all(){\n\n        this._eachStream('keepMethod', F.KEEP_ALL);\n        this._eachStream('keepCount', -1);\n\n        if(!this._holding)\n            this._eachStreamCall('process', 'doKeep');\n\n        return this;\n\n    };\n\n    batch(){\n\n        this._holding = false; // holds end with timer\n        this._eachStream('timerMethod', F.BATCH_TIMER);\n\n        return this;\n\n    };\n\n    ready(func){\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n\n        this._eachStream('readyMethod', func);\n        return this;\n\n    };\n\n\n    destroy(){\n\n        const streams = this._streams;\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].cleanupMethod();\n        }\n        this._streams = null;\n\n    };\n    \n}\n\nexport default Frame;\n\n\n","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Stream from './stream.js';\n\n\nclass Bus {\n\n    constructor(streams) {\n\n        this._frames = [];\n        this._dead = false;\n        this._scope = null;\n        const f = new Frame(this, streams);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    addFrame() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this);\n        this._frames.push(nextFrame);\n\n        _wireFrames(lastFrame, nextFrame);\n\n        return nextFrame;\n    };\n\n    // create a new frame with one stream fed by all streams of the current frame\n\n    mergeFrame() {\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.flowsTo(mergedStream);\n        }\n\n        return this;\n\n    };\n\n\n    fork() {\n\n        const fork = new Bus();\n        _wireFrames(this._currentFrame, fork._currentFrame);\n\n        return fork;\n    };\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        _wireFrames(bus._currentFrame, frame); // wire from outside bus\n        return this;\n\n    };\n\n\n    defer() {\n\n        this.holding ? this._currentFrame.defer() : this.addFrame().defer();\n        return this;\n\n    };\n\n    batch() {\n\n        this.holding ? this._currentFrame.batch() : this.addFrame().batch();\n        return this;\n\n    };\n\n    group() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().group();\n        return this;\n\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    delay(num) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    untilKeys(keys){\n\n        F.ASSERT_IS_HOLDING(this);\n        this._currentFrame.untilKeys(keys);\n        return this;\n\n    };\n\n    untilFull(){\n\n        F.ASSERT_IS_HOLDING(this);\n        this._currentFrame.untilFull();\n        return this;\n\n    }\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        this._currentFrame.willReset();\n        return this;\n\n    }\n\n    all() {\n        this.holding ? this._currentFrame.all() : this.addFrame().all();\n        return this;\n    };\n\n    first(n) {\n\n        this.holding ? this._currentFrame.first(n) : this.addFrame().first(n);\n        return this;\n\n    };\n\n    last(n) {\n\n        this.holding ? this._currentFrame.last(n) : this.addFrame().last(n);\n        return this;\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().run(func);\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.mergeFrame();\n        return this;\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    name(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().name(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().filter(func);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().filter(F.SKIP_DUPES_FILTER);\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const frames = this._frames;\n\n        for (const f of frames) {\n            f.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n// send messages from streams in one frame to new empty streams in another frame\n// injects new streams to frame 2\n\nfunction _wireFrames(frame1, frame2) {\n\n    const streams1 = frame1._streams;\n    const streams2 = frame2._streams;\n\n    const len = streams1.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const s1 = streams1[i];\n        const s2 = new Stream(frame2);\n        streams2.push(s2);\n        s1.flowsTo(s2);\n\n    }\n\n}\n\n\nexport default Bus;\n","\nimport Scope from './scope.js';\nimport Stream from './stream.js';\nimport Bus from './bus.js';\n\nconst Catbus = {};\nlet _batchQueue = [];\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const stream = Stream.fromEvent(target, eventName, useCapture);\n    return new Bus([stream]);\n\n};\n\nCatbus.enqueue = function(stream){\n    _batchQueue.push(stream);\n};\n\nCatbus.scope = function(name){\n    console.log('root is ', name);\n    return new Scope(name);\n};\n\nCatbus.flush = function(){\n\n        let cycles = 0;\n        let q = _batchQueue;\n        _batchQueue = [];\n\n        while(q.length) {\n\n            while (q.length) {\n                const stream = q.shift();\n                stream.fireContent();\n            }\n\n            q = _batchQueue;\n            _batchQueue = [];\n\n            cycles++;\n            if(cycles > 10)\n                throw new Error('Flush batch cycling loop > 10.', q);\n\n        }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["Packet","msg","topic","source","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","hasOwnProperty","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","dead","name","currentPacket","ACTION","subscribers","concat","len","length","i","s","call","tell","watcher","push","indexOf","splice","Data","scope","NONE","Error","_scope","_type","_noTopicSubscriberList","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","get","set","expectedType","subscribe","packet","peek","subscriberList","_demandSubscriberList","add","remove","lastPacket","undefined","write","MIRROR","read","idCounter","Scope","_id","_parent","_children","_dataList","_valves","_mirrors","child","clear","parent","newParent","mirror","Object","create","d","grab","_createData","verify","STATE","state","_createMirror","names","required","result","find","dataSet","findDataSet","appliedValves","key","value","dataList","valves","mirrors","size","keys","has","delete","entries","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","dimension","w","silentWrite","refresh","writeHash","k","map","oldParent","from","Func","val","args","func","last","enqueue","fireContent","buffer","n","shift","messages","messagesByKey","bus","holding","Stream","debugFrame","children","cleanupMethod","F","NOOP","processName","processMethod","doPass","keepMethod","KEEP_LAST","keepCount","timerMethod","groupMethod","actionMethod","neededKeys","readyMethod","ALWAYS_TRUE","clearMethod","ALWAYS_FALSE","latched","primed","resolveKeepByGroup","resolveKeep","flowForward","stream","thisStream","c","groupName","fromData","streamName","toStream","unsubscribe","follow","fromEvent","target","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Frame","streams","_bus","_index","_frames","_holding","_streams","_eachStream","prop","method","_eachStreamCall","fAny","FUNCTOR","fStr","fNum","ASSERT_NEED_ONE_ARGUMENT","arguments","filter","SKIP_DUPES_FILTER","TO_SOURCE_FUNC","Number","KEEP_FIRST","KEEP_ALL","BATCH_TIMER","ASSERT_IS_FUNCTION","Bus","f","_currentFrame","lastFrame","nextFrame","mergedStream","flowsTo","fork","frame","addFrame","defer","batch","ASSERT_NOT_HOLDING","group","hold","num","delay","ASSERT_IS_HOLDING","untilKeys","untilFull","willReset","all","first","run","mergeFrame","transform","frames","_wireFrames","frame1","frame2","streams1","streams2","s1","s2","Catbus","_batchQueue","log","flush","cycles","q"],"mappings":"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"}
{"version":3,"file":"bundle.umd.js","sources":["src/packet.js","src/types.js","src/subscriberList.js","src/data.js","src/scope.js","src/main.js"],"sourcesContent":["\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\nconst ACTION   = 'action';\nconst MIRROR   = 'mirror';\nconst STATE    = 'state';\nconst COMPUTED = 'computed';\nconst NONE     = 'none';\nconst ANY      = 'any';\n\nconst VALID_TYPES = [ACTION, MIRROR, STATE, COMPUTED, NONE];\nconst VALID_CHECK    = new Map();\n\nfor(const type of VALID_TYPES){\n    VALID_CHECK.set(type, true);\n}\n\nfunction isValid(type){\n    return VALID_CHECK.has(type);\n}\n\nexport {isValid, ANY, NONE, MIRROR, STATE, ACTION, COMPUTED, VALID_TYPES};\n\n","\nimport Packet from './packet.js';\nimport { ACTION } from './types';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    tell(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.tell(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, NONE, MIRROR} from './types.js';\n\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type || NONE;\n        this._dead       = false;\n\n        this._noTopicSubscriberList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.tell(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        const subscriberList = (!topic) ? this._noTopicSubscriberList : this._demandSubscriberList(topic);\n        subscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(typeof topic !== 'string'){\n            this._noTopicSubscriberList.remove(watcher);\n        } else {\n            let subscriberList = this._demandSubscriberList(topic);\n            subscriberList.remove(watcher);\n        }\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        let subscriberList = topic ? this._subscriberListsByTopic.get(topic) : this._noTopicSubscriberList;\n        if(!subscriberList)\n            return null;\n        return subscriberList.lastPacket;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        if(topic) {\n            let list = this._demandSubscriberList(topic);\n            list.tell(msg);\n        }\n        else {\n            this._noTopicSubscriberList.tell(msg, null, silently);\n        }\n\n        this._wildcardSubscriberList.tell(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(this.read(topic), topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport Data from './data.js';\nimport { NONE, ACTION, MIRROR, STATE, COMPUTED, ANY, isValid } from './types.js';\n\nlet idCounter = 0;\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        for(const child of this._children){\n            child.destroy();\n        }\n\n        for(const data of this._dataList.values()){\n            data.destroy();\n        }\n\n        this._children = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(ACTION);\n\n        return this._createData(name, ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(STATE);\n\n        const state = this._createData(name, STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray, dimension){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic || null);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic || null);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\n\nexport default Scope;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["Packet","msg","topic","source","_msg","_topic","_source","_timestamp","Date","now","ACTION","MIRROR","STATE","COMPUTED","NONE","VALID_TYPES","VALID_CHECK","Map","type","set","isValid","has","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","dead","name","currentPacket","subscribers","concat","len","length","i","s","call","tell","watcher","push","indexOf","splice","Data","scope","Error","_scope","_type","_noTopicSubscriberList","_wildcardSubscriberList","_subscriberListsByTopic","_throwDead","values","list","destroy","get","expectedType","subscribe","packet","peek","subscriberList","_demandSubscriberList","add","remove","lastPacket","undefined","write","read","idCounter","Scope","_id","_parent","_children","_dataList","_valves","_mirrors","child","clear","parent","newParent","mirror","Object","create","d","grab","_createData","verify","state","_createMirror","names","required","result","find","dataSet","findDataSet","appliedValves","key","value","dataList","valves","mirrors","size","keys","delete","entries","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","dimension","w","silentWrite","refresh","writeHash","k","v","map","oldParent","from"],"mappings":"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"}
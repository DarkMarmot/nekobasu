{"version":3,"file":"bundle.umd.js","sources":["src/packet.js","src/dataTypes.js","src/subscriberList.js","src/data.js","src/scope.js","src/flib.js","src/pool.js","src/stream.js","src/frame.js","src/bus.js","src/catbus.js","src/main.js"],"sourcesContent":["\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    tell(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.tell(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._noTopicSubscriberList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.tell(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        const subscriberList = (!topic) ? this._noTopicSubscriberList : this._demandSubscriberList(topic);\n        subscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(typeof topic !== 'string'){\n            this._noTopicSubscriberList.remove(watcher);\n        } else {\n            let subscriberList = this._demandSubscriberList(topic);\n            subscriberList.remove(watcher);\n        }\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        let subscriberList = topic ? this._subscriberListsByTopic.get(topic) : this._noTopicSubscriberList;\n        if(!subscriberList)\n            return null;\n        return subscriberList.lastPacket;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        if(topic) {\n            let list = this._demandSubscriberList(topic);\n            list.tell(msg);\n        }\n        else {\n            this._noTopicSubscriberList.tell(msg, null, silently);\n        }\n\n        this._wildcardSubscriberList.tell(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(this.read(topic), topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\n\nlet idCounter = 0;\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        for(const child of this._children){\n            child.destroy();\n        }\n\n        for(const data of this._dataList.values()){\n            data.destroy();\n        }\n\n        this._children = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray, dimension){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic || null);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic || null);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Catbus from './catbus.js';\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_MSG(msg, source) {\n    return msg;\n}\n\nconst Func = {\n\n    FUNCTOR: function(val) {\n        return (typeof val === 'function') ? val : function() { return val; };\n    },\n\n    NOOP: function(){},\n\n    ALWAYS_TRUE: function(){ return true; },\n\n    ALWAYS_FALSE: function(){ return false;},\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n\n\n    TO_SOURCE_FUNC: function(msg, source) {\n        return source;\n    },\n\n    getBatchTimer: function(){\n        const pool = this;\n        return function() {\n            Catbus.enqueue(pool);\n        }\n    },\n\n    getSyncTimer: function(){\n        const pool = this;\n        return function() {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        const pool = this;\n        return function() {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n        };\n\n        f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                last = undefined;\n            };\n\n            f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n            };\n\n            f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getUntilCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getUntilKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.To_MSG = TO_MSG;\n\nexport default Func;","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(stream){\n\n        this.stream = stream;\n\n        this.keep = null;\n        this.until = F.ALWAYS_TRUE;\n        this.timer = null; // throttle, debounce, defer, batch, sync\n        this.clear = false;\n        this.isPrimed = false;\n        this.source = stream.name;\n\n    };\n\n    tell(msg, source) {\n\n        this.keep(msg, source);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.until(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    // buildKeeper(factory, ...args){\n    //     this.keep = factory.call(this, ...args);\n    // };\n    //\n    // buildTimer(factory, ...args){\n    //     this.timer = factory.call(this, ...args);\n    // };\n    //\n    // buildUntil(factory, ...args){\n    //     this.until = factory.call(this, ...args);\n    // };\n\n    release(pool) {\n\n        pool = pool || this;\n        const msg = pool.keep.content();\n\n        if(pool.clear){\n            pool.keep.reset();\n            pool.until.reset();\n        }\n\n        pool.isPrimed = false;\n        pool.stream.emit(msg, pool.stream.name);\n\n    };\n\n}\n\n\n\nexport default Pool;","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.debugFrame = null;\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    tell(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, source); // tell method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.tell(msg, source);\n        }\n\n    };\n\n    doFilter(msg, source) {\n\n        if(!this.actionMethod(msg, source))\n            return;\n        this.emit(msg, source);\n\n    };\n\n\n    doTransform(msg, source) {\n\n        msg = this.actionMethod(msg, source);\n        this.emit(msg, source);\n\n    };\n\n    doDelay(msg, source) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod() || 0, msg, source, this);\n\n    };\n\n    doName(msg, source) {\n\n        source = this.actionMethod(msg, source);\n        this.emit(msg, source);\n\n    };\n\n\n    doRun(msg, source) {\n\n        this.actionMethod(msg, source);\n        this.emit(msg, source);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source) {\n\n        this.pool.tell(msg, source);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\n\nStream.fromData = function(data, topic, name){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n    stream.name = streamName;\n\n    const toStream = function(msg){\n        stream.tell(msg, streamName);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    data.follow(toStream, topic);\n\n    return stream;\n\n};\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.tell(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","import F from './flib.js';\n\n\nclass Frame {\n\n    constructor(bus, streams) {\n\n        streams = streams || [];\n        this._bus = bus;\n        this._index = bus._frames.length;\n        this._holding = false; //begins group, keep, schedule frames\n        this._streams = streams;\n\n        this._process = null; // name of sync process method in streams\n        this._action = null; // function defining sync stream action\n        this._isFactory = false; // whether sync action is a stateful factory function\n\n        this._keep = null; // pool storage\n        this._until = null; // stream end lifecycle -- todo switch until to when in current setup\n        this._timer = null; // release from pool timer\n        this._clear = false; // condition to clear storage on release\n        this._when = false; // invokes timer for release\n\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].debugFrame = this;\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    get streams() {\n        return [].concat(this._streams);\n    }\n\n    applySyncProcess(name, action, isFactory){ // generate means action function must be called to generate stateful action\n\n        this._process = name;\n        this._action = action;\n        this._isFactory = isFactory;\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        if(isFactory) {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action();\n                s.processMethod = s[name];\n            }\n        } else {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action;\n                s.processMethod = s[name];\n            }\n        }\n\n        return this;\n\n    };\n\n    hold(){\n\n        this._holding = true;\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.createPool();\n            s.processMethod = s.doPool;\n        }\n\n        return this;\n\n    };\n\n    run(func, stateful){\n        return this.applySyncProcess('doRun', func, stateful);\n    };\n\n    transform(fAny, stateful){\n        return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    };\n\n    name(fStr, stateful){\n        return this.applySyncProcess('doName', F.FUNCTOR(fStr), stateful);\n    };\n\n    delay(fNum, stateful){\n        return this.applySyncProcess('doDelay', F.FUNCTOR(fNum), stateful);\n    };\n\n    filter(func, stateful){\n        return this.applySyncProcess('doFilter', func, stateful);\n    };\n\n    skipDupes() {\n        return this.applySyncProcess('doFilter', F.getSkipDupes, true);\n    };\n\n    willReset(){\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.clear = true;\n\n        }\n\n        return this;\n\n    };\n\n    // factory should define content and reset methods have signature f(msg, source) return f.content()\n    reduce(factory, ...args){\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build('keep', factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n    timer(factory, ...args){\n\n        this._holding = false; // holds end with timer\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build('timer', factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n    until(factory, ...args){\n\n        this._until = [factory, ...args];\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build('until', factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n\n\n    destroy(){\n\n        const streams = this._streams;\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].cleanupMethod();\n        }\n        this._streams = null;\n\n    };\n    \n}\n\nexport default Frame;\n\n\n","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Stream from './stream.js';\n\n\nclass Bus {\n\n    constructor(streams) {\n\n        this._frames = [];\n        this._dead = false;\n        this._scope = null;\n        const f = new Frame(this, streams);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    addFrame() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this);\n        this._frames.push(nextFrame);\n\n        _wireFrames(lastFrame, nextFrame);\n\n        return nextFrame;\n    };\n\n    // create a new frame with one stream fed by all streams of the current frame\n\n    mergeFrame() {\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.addTarget(mergedStream);\n        }\n\n        return this;\n\n    };\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus();\n        _wireFrames(this._currentFrame, fork._currentFrame);\n\n        return fork;\n    };\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        _wireFrames(bus._currentFrame, frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    delay(num) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    // untilKeys(keys){\n    //\n    //     F.ASSERT_IS_HOLDING(this);\n    //     this._currentFrame.untilKeys(keys);\n    //     return this;\n    //\n    // };\n\n    untilFull(){\n\n        F.ASSERT_IS_HOLDING(this);\n        this._currentFrame.untilFull();\n        return this;\n\n    }\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        this._currentFrame.willReset();\n        return this;\n\n    }\n\n    untilKeys(keys) {\n        F.ASSERT_IS_HOLDING(this);\n        return this.until(F.getUntilKeys, keys);\n    };\n\n    group(by) {\n\n        return this.reduce(F.getGroup, by);\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    reduce(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.reduce(factory, ...args) :\n            this.addFrame().hold().reduce(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    timer(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.timer(factory, ...args) :\n            this.addFrame().hold().timer(factory, ...args);\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().run(func);\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.mergeFrame();\n        return this;\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    name(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().name(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().filter(func);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().skipDupes();\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const frames = this._frames;\n\n        for (const f of frames) {\n            f.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n// send messages from streams in one frame to new empty streams in another frame\n// injects new streams to frame 2\n\nfunction _wireFrames(frame1, frame2) {\n\n    const streams1 = frame1._streams;\n    const streams2 = frame2._streams;\n\n    const len = streams1.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const s1 = streams1[i];\n        const s2 = new Stream(frame2);\n        s2.name = s1.name;\n        streams2.push(s2);\n        s1.addTarget(s2);\n\n    }\n\n}\n\n\nexport default Bus;\n","\nimport Scope from './scope.js';\nimport Stream from './stream.js';\nimport Bus from './bus.js';\n\nconst Catbus = {};\nlet _batchQueue = [];\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const stream = Stream.fromEvent(target, eventName, useCapture);\n    return new Bus([stream]);\n\n};\n\n\nCatbus.enqueue = function(pool){\n    _batchQueue.push(pool);\n};\n\nCatbus.scope = function(name){\n    console.log('root is ', name);\n    return new Scope(name);\n};\n\nCatbus.flush = function(){\n\n        let cycles = 0;\n        let q = _batchQueue;\n        _batchQueue = [];\n\n        while(q.length) {\n\n            while (q.length) {\n                const pool = q.shift();\n                pool.release();\n            }\n\n            q = _batchQueue;\n            _batchQueue = [];\n\n            cycles++;\n            if(cycles > 10)\n                throw new Error('Flush batch cycling loop > 10.', q);\n\n        }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["Packet","msg","topic","source","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","hasOwnProperty","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","dead","name","currentPacket","ACTION","subscribers","concat","len","length","i","s","call","tell","watcher","push","indexOf","splice","Data","scope","NONE","Error","_scope","_type","_noTopicSubscriberList","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","get","set","expectedType","subscribe","packet","peek","subscriberList","_demandSubscriberList","add","remove","lastPacket","undefined","write","MIRROR","read","idCounter","Scope","_id","_parent","_children","_dataList","_valves","_mirrors","child","clear","parent","newParent","mirror","Object","create","d","grab","_createData","verify","STATE","state","_createMirror","names","required","result","find","dataSet","findDataSet","appliedValves","key","value","dataList","valves","mirrors","size","keys","has","delete","entries","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","dimension","w","silentWrite","refresh","writeHash","k","map","oldParent","from","TO_SOURCE","TO_MSG","Func","val","args","func","pool","enqueue","release","groupBy","hash","f","g","reset","content","n","last","buffer","shift","firstMsg","hasFirst","latched","messages","keyHash","messagesByKey","hadMsg","lastMsg","diff","bus","holding","To_MSG","Pool","stream","keep","until","F","ALWAYS_TRUE","timer","isPrimed","prop","factory","emit","Stream","debugFrame","children","cleanupMethod","NOOP","processMethod","actionMethod","thisStream","c","fromData","streamName","toStream","unsubscribe","follow","fromEvent","target","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Frame","streams","_bus","_index","_frames","_holding","_streams","_process","_action","_isFactory","_keep","_until","_timer","_clear","_when","action","isFactory","createPool","doPool","stateful","applySyncProcess","fAny","FUNCTOR","fStr","fNum","getSkipDupes","build","Bus","_currentFrame","lastFrame","nextFrame","mergedStream","addTarget","ASSERT_NOT_HOLDING","fork","frame","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","hold","num","ASSERT_NEED_ONE_ARGUMENT","arguments","delay","ASSERT_IS_HOLDING","untilFull","willReset","getUntilKeys","by","reduce","getGroup","getKeepAll","getKeepFirst","getKeepLast","ASSERT_IS_FUNCTION","run","mergeFrame","transform","filter","skipDupes","frames","_wireFrames","frame1","frame2","streams1","streams2","s1","s2","Catbus","_batchQueue","log","flush","cycles","q"],"mappings":"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"}
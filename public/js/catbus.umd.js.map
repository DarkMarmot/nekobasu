{"version":3,"file":"catbus.umd.js","sources":["../src/flib.js","../src/packet.js","../src/dataTypes.js","../src/subscriberList.js","../src/data.js","../src/poolAspects.js","../src/frame.js","../src/pool.js","../src/stream.js","../src/bus.js","../src/scope.js","../src/nyan.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_MSG(msg, source) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(){\n        const pool = this;\n        return function() {\n            Catbus.enqueue(pool);\n        }\n    },\n\n    getSyncTimer: function(){\n        const pool = this;\n        return function() {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        const pool = this;\n        return function() {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    tell(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.tell(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._noTopicSubscriberList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.tell(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        const subscriberList = (!topic) ? this._noTopicSubscriberList : this._demandSubscriberList(topic);\n        subscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(typeof topic !== 'string'){\n            this._noTopicSubscriberList.remove(watcher);\n        } else {\n            let subscriberList = this._demandSubscriberList(topic);\n            subscriberList.remove(watcher);\n        }\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        let subscriberList = topic ? this._subscriberListsByTopic.get(topic) : this._noTopicSubscriberList;\n        if(!subscriberList)\n            return null;\n        return subscriberList.lastPacket;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        if(topic) {\n            let list = this._demandSubscriberList(topic);\n            list.tell(msg);\n        }\n        else {\n            this._noTopicSubscriberList.tell(msg, null, silently);\n        }\n\n        this._wildcardSubscriberList.tell(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(this.read(topic), topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nclass PoolAspects {\n\n    constructor() {\n\n        this.until      = null;\n        this.reduce     = null;\n        this.when       = null;\n        this.clear      = null;\n        this.timer      = null;\n\n    };\n\n}\n\nexport default PoolAspects;\n\n//\n// this._keep = null; // pool storage\n// this._until = null; // stream end lifecycle -- todo switch until to when in current setup\n// this._timer = null; // release from pool timer\n// this._clear = false; // condition to clear storage on release\n// this._when = false; // invokes timer for release\n","import F from './flib.js';\nimport PoolAspects from './poolAspects.js';\n\n\nclass Frame {\n\n    constructor(bus, streams) {\n\n        streams = streams || [];\n        this._bus = bus;\n        this._index = bus._frames.length;\n        this._holding = false; //begins group, keep, schedule frames\n        this._streams = streams;\n\n        this._process = null; // name of sync process method in streams\n        this._action = null; // function defining sync stream action\n        this._isFactory = false; // whether sync action is a stateful factory function\n\n        this._poolAspects = null;\n\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].debugFrame = this;\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    get streams() {\n        return [].concat(this._streams);\n    }\n\n    applySyncProcess(name, action, isFactory){ // generate means action function must be called to generate stateful action\n\n        this._process = name;\n        this._action = action;\n        this._isFactory = isFactory;\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        if(isFactory) {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action();\n                s.processMethod = s[name];\n            }\n        } else {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action;\n                s.processMethod = s[name];\n            }\n        }\n\n        return this;\n\n    };\n\n    hold(){\n\n        this._holding = true;\n        this._poolAspects = new PoolAspects();\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.createPool();\n            s.processMethod = s.doPool;\n        }\n\n        return this;\n\n    };\n\n    run(func, stateful){\n        return this.applySyncProcess('doRun', func, stateful);\n    };\n\n    transform(fAny, stateful){\n        return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    };\n\n    name(fStr, stateful){\n        return this.applySyncProcess('doName', F.FUNCTOR(fStr), stateful);\n    };\n\n    delay(fNum, stateful){\n        return this.applySyncProcess('doDelay', F.FUNCTOR(fNum), stateful);\n    };\n\n    filter(func, stateful){\n        return this.applySyncProcess('doFilter', func, stateful);\n    };\n\n    skipDupes() {\n        return this.applySyncProcess('doFilter', F.getSkipDupes, true);\n    };\n\n    clear(factory, ...args){\n        return this.buildPoolAspect('clear', factory, ...args);\n    };\n\n    // factory should define content and reset methods have signature f(msg, source) return f.content()\n\n    reduce(factory, ...args){\n        return this.buildPoolAspect('keep', factory, ...args);\n    };\n\n    timer(factory, ...args){\n        return this.buildPoolAspect('timer', factory, ...args);\n    };\n\n    when(factory, ...args){\n        return this.buildPoolAspect('when', factory, ...args);\n    };\n\n    until(factory, ...args){\n        return this.buildPoolAspect('until', factory, ...args);\n    };\n\n    buildPoolAspect(aspect, factory, ...args){\n\n        if(aspect === 'timer')\n            this._holding = false;\n\n        this._poolAspects[aspect] = [factory, ...args];\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build(aspect, factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n    destroy(){\n\n        const streams = this._streams;\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].cleanupMethod();\n        }\n        this._streams = null;\n\n    };\n    \n}\n\nexport default Frame;\n\n\n","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(stream){\n\n        this.stream = stream;\n\n        this.keep = null;\n        this.when = F.ALWAYS_TRUE;\n        this.until = F.ALWAYS_TRUE;\n        this.timer = null; // throttle, debounce, defer, batch, sync\n        this.clear = F.ALWAYS_FALSE;\n        this.isPrimed = false;\n        this.source = stream.name;\n\n    };\n\n    tell(msg, source) {\n\n        this.keep(msg, source);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.stream.emit(msg, pool.stream.name);\n\n    };\n\n}\n\n\n\nexport default Pool;","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.debugFrame = null;\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    tell(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, source); // tell method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.tell(msg, source);\n        }\n\n    };\n\n    doFilter(msg, source) {\n\n        if(!this.actionMethod(msg, source))\n            return;\n        this.emit(msg, source);\n\n    };\n\n\n    doTransform(msg, source) {\n\n        msg = this.actionMethod(msg, source);\n        this.emit(msg, source);\n\n    };\n\n    doDelay(msg, source) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod(msg, source) || 0, msg, source, this);\n\n    };\n\n    doName(msg, source) {\n\n        source = this.actionMethod(msg, source);\n        this.emit(msg, source);\n\n    };\n\n\n    doRun(msg, source) {\n\n        this.actionMethod(msg, source);\n        this.emit(msg, source);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source) {\n\n        this.pool.tell(msg, source);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\n\nStream.fromData = function(data, topic, name){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n    stream.name = streamName;\n\n    const toStream = function(msg){\n        stream.tell(msg, streamName);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    data.follow(toStream, topic);\n\n    return stream;\n\n};\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.tell(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Stream from './stream.js';\n\n\nclass Bus {\n\n    constructor(scope, streams) {\n\n        this._frames = [];\n        this._dead = false;\n        this._scope = scope;\n        if(scope)\n            scope._busList.push(this);\n        const f = new Frame(this, streams || []);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this);\n        this._frames.push(nextFrame);\n\n        _wireFrames(lastFrame, nextFrame);\n\n        return nextFrame;\n    };\n\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, wiring prior streams, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        _wireFrames(this._currentFrame, fork._currentFrame);\n\n        return fork;\n    };\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        _wireFrames(bus._currentFrame, frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    scan(func, seed){\n        return this.reduce(F.getScan, func, seed);\n    };\n\n    delay(num) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n        F.ASSERT_IS_HOLDING(this);\n        return this.when(F.getWhenKeys, keys);\n    };\n\n    group(by) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, by);\n        return this;\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.reduce(factory, ...args) :\n            this.addFrame().hold().reduce(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    timer(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.timer(factory, ...args) :\n            this.addFrame().hold().timer(factory, ...args);\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.when(factory, ...args) :\n            this.addFrame().hold().when(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().run(func);\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.addTarget(mergedStream);\n        }\n\n        return this;\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    name(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().name(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().filter(func);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().skipDupes();\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const frames = this._frames;\n\n        for (const f of frames) {\n            f.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n// send messages from streams in one frame to new empty streams in another frame\n// injects new streams to frame 2\n\nfunction _wireFrames(frame1, frame2) {\n\n    const streams1 = frame1._streams;\n    const streams2 = frame2._streams;\n\n    const len = streams1.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const s1 = streams1[i];\n        const s2 = new Stream(frame2);\n        s2.name = s1.name;\n        streams2.push(s2);\n        s1.addTarget(s2);\n\n    }\n\n}\n\n\nexport default Bus;\n","\nimport F from './flib.js';\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\nimport Bus from './bus.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    watch(fStr){\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        fStr = F.FUNCTOR(fStr);\n\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        // console.log('clearing:', this._id, 'has:', this.children.length);\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        // console.log('done:', this._id, 'has:', this.children.length);\n\n        // for(const data of this._dataList.values()){\n        //     data.destroy();\n        // }\n\n        // this._destroyEach(this._children);\n        // this._destroyEach(this._busList);\n        // this._destroyEach(this._dataList.values());\n\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray, dimension){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic || null);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic || null);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\n\nconst Nyan = {};\n\nconst operationDefs = [\n\n    {name: 'ACT',   sym: '^'},\n    {name: 'NEED',  sym: '!'},\n    {name: 'EVENT', sym: '@'},\n    {name: 'RUN',   sym: '*'},\n    {name: 'READ',  sym: '~'},\n    {name: 'ATTR',  sym: '#'},\n    {name: 'ADD',   sym: '+'},\n    {name: 'STYLE', sym: '$'},\n    {name: 'BEGIN', sym: '('},\n    {name: 'END',   sym: ')'},\n    {name: 'WRITE', sym: '='},\n    {name: 'PIPE',  sym: '|'},\n    {name: 'WATCH', sym: '-'}\n\n];\n\nconst operationsBySymbol = {};\nconst symbolsByOperation = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n    operationsBySymbol[sym] = name;\n    symbolsByOperation[name] = sym;\n}\n\n\nclass NyanWord {\n    constructor(name, operation, optional){\n        this.name = name;\n        this.operation = operation;\n        this.optional = optional;\n    }\n\n    toString(){\n        return 'meow';\n    };\n}\n\nfunction throwError(text){\n    throw new Error(text);\n}\n\nfunction parse(str) {\n\n    const result = [];\n    const chunks = str.split(/([()])/); // split on parentheses\n\n    for(let i = 0; i < chunks.length; i++){\n        const chunk = chunks[i].trim();\n\n        if(!chunk)\n            continue;\n\n        const sentence = (chunk === ')' || chunk === '(') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            result.push(sentence);\n\n    }\n\n    return result;\n\n}\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|');\n\n    for(let i = 0; i < chunks.length; i++){\n        const chunk = chunks[i].trim();\n\n        if(!chunk)\n            continue;\n\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',');\n    let usingAct = false;\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i].trim();\n        const charCount = rawWord.length;\n\n        if (!charCount)\n            continue;\n\n        const lastIndex = charCount - 1;\n        const firstChar = rawWord[0];\n        const lastChar = rawWord[lastIndex];\n\n        const operation = operationsBySymbol[firstChar];\n        const optional = lastChar === '?';\n\n        const start = operation ? 1 : 0;\n        const end = optional ? -1 : charCount;\n        const name = rawWord.slice(start, end);\n\n        if (!name.length)\n            throw new Error('Word missing name!');\n\n        if (operation === 'ACT')\n            usingAct = true;\n\n        const nw = new NyanWord(name, operation, optional);\n        words.push(nw);\n\n    }\n\n    const wordCount = words.length;\n    for (let i = 0; i < wordCount; i++) {\n        const nw = words[i];\n        if(!nw.operation){\n            nw.operation = usingAct ? 'READ' : 'WATCH';\n        }\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","\nimport Scope from './scope.js';\nimport Stream from './stream.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\n\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const stream = Stream.fromEvent(target, eventName, useCapture);\n    return new Bus(null, [stream]);\n\n};\n\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\nCatbus.scope = function(name){\n\n    console.log('NYAN');\n    const k = Nyan.parse('!bunny?, cow, moo? | (*toMuffin? | =order) (=raw)');\n\n    for(const sentence of k){\n        if(typeof sentence === 'string'){\n            console.log(sentence);\n            continue;\n        }\n        for(const phrase of sentence){\n            for(const word of phrase){\n                console.log(word.name, word.operation, word.optional);\n            }\n        }\n    }\n\n    console.log(k);\n\n    console.log('root is ', name);\n    return new Scope(name);\n};\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","msg","source","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","hasOwnProperty","hadMsg","lastMsg","diff","bus","holding","To_MSG","Packet","topic","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","name","currentPacket","ACTION","subscribers","concat","s","tell","watcher","indexOf","splice","Data","scope","NONE","_scope","_type","_noTopicSubscriberList","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","get","set","expectedType","subscribe","packet","peek","subscriberList","_demandSubscriberList","add","remove","lastPacket","undefined","write","MIRROR","read","PoolAspects","until","reduce","when","clear","timer","Frame","streams","_bus","_index","_frames","_holding","_streams","_process","_action","_isFactory","_poolAspects","debugFrame","action","isFactory","actionMethod","processMethod","createPool","doPool","stateful","applySyncProcess","fAny","F","fStr","getSkipDupes","factory","buildPoolAspect","aspect","build","cleanupMethod","Pool","isPrimed","prop","hasContent","emit","Stream","children","thisStream","c","fromData","streamName","toStream","unsubscribe","follow","fromEvent","target","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Bus","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","fork","frame","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","hold","getScan","num","ASSERT_NEED_ONE_ARGUMENT","delay","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","getKeepAll","getKeepFirst","getKeepLast","ASSERT_IS_FUNCTION","run","mergedStream","addTarget","transform","filter","skipDupes","frames","_wireFrames","frame1","frame2","streams1","streams2","s1","s2","idCounter","_destroyEach","arr","item","Scope","_id","_parent","_children","_dataList","_valves","_mirrors","parent","child","newParent","mirror","Object","create","d","grab","_createData","verify","STATE","state","_createMirror","names","required","result","find","dataSet","findDataSet","appliedValves","key","value","dataList","valves","mirrors","size","has","delete","entries","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","dimension","w","silentWrite","refresh","writeHash","map","oldParent","from","Nyan","operationDefs","sym","operationsBySymbol","symbolsByOperation","op","NyanWord","operation","optional","parse","str","chunks","split","chunk","trim","sentence","parseSentence","phrase","parsePhrase","words","rawWords","usingAct","rawWord","charCount","lastIndex","firstChar","lastChar","start","end","slice","nw","wordCount","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","process","nextTick","log","word","cycles","q"],"mappings":"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"}
{"version":3,"file":"catbus.umd.js","sources":["../src/dataTypes.js","../src/flib.js","../src/subscriberList.js","../src/data.js","../src/pool.js","../src/waves/tap.js","../src/waves/msg.js","../src/waves/source.js","../src/waves/filter.js","../src/waves/delay.js","../src/waves/scan.js","../src/waves/skipDupes.js","../src/waves/lastN.js","../src/waves/firstN.js","../src/waves/all.js","../src/waves/group.js","../src/waves/pass.js","../src/handler.js","../src/frame.js","../src/wire.js","../src/frameMerger.js","../src/frameStateless.js","../src/poolDef.js","../src/frameHold.js","../src/frameForker.js","../src/waveDef.js","../src/nyan.js","../src/nyanRunner.js","../src/bus.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(pool){\n\n            Catbus.enqueue(pool);\n\n    },\n\n    getSyncTimer: function(){\n        return function(pool) {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        return function(pool) {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    // getScan: function(func, seed){\n    //\n    //     let acc = seed;\n    //\n    //     const f = function(msg, source){\n    //\n    //         return acc = func(acc, msg, source);\n    //     };\n    //\n    //     f.reset = NOOP;\n    //\n    //     f.next = f.content = function(){\n    //         return acc;\n    //     };\n    //\n    //\n    //     return f;\n    // },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            if(g) {\n                hash[g] = msg;\n            } else { // no source, copy message props into hash to merge nameless streams of key data\n                for(const k in msg){\n                    hash[k] = msg[k];\n                }\n            }\n\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getHash: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getHasKeys: function(keys, noLatch) {\n\n        let latched = false;\n        const len = keys.length;\n\n        return function (msg) {\n\n            if(latched || !len)\n                return true;\n\n            for(let i = 0; i < len; i++) {\n\n                const k = keys[i];\n                if(!msg.hasOwnProperty(k))\n                    return false;\n            }\n\n            if(!noLatch)\n                latched = true;\n\n            return true;\n\n        }\n\n    },\n\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\nimport F from './flib.js';\n\nfunction callMany(list, msg, source, topic){\n\n    const len = list.length;\n    for (let i = 0; i < len; i++) {\n        let s = list[i];\n        s.call(s, msg, source, topic);\n    }\n\n}\n\nfunction callNoOne(list, msg, source, topic){}\n\nfunction callOne(list, msg, source, topic){\n        const s = list[0];\n        s.call(s, msg, source, topic);\n}\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._callback = callNoOne;\n        this._used = false; // true after first msg\n        this._lastMsg = null;\n        this._lastTopic = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n        if(data.type === DATA_TYPES.ACTION) {\n            this.handle = this.handleAction;\n        }\n    };\n\n    get used() { return this._used; };\n    get lastMsg() { return this._lastMsg; };\n    get lastTopic() { return this._lastTopic; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    handle(msg, topic, silently){\n\n        // if(this.dead)\n        //     return;\n\n        this._used = true;\n        topic = topic || this.topic;\n        let source = this.name;\n\n        this._lastMsg = msg;\n        this._lastTopic = topic;\n\n        //let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n\n        if(!silently) {\n            this._callback(this._subscribers, msg, source, topic);\n        }\n\n    };\n\n    handleAction(msg, topic){\n\n        topic = topic || this.topic;\n        let source = this.name;\n\n        //let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        this._callback(this._subscribers, msg, source, topic);\n\n    };\n\n\n\n    destroy(){\n\n        // if(this.dead)\n        //     return;\n\n        this._subscribers = null;\n        this._lastMsg = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        const s = typeof watcher === 'function' ? watcher : function(msg, source, topic){ watcher.handle(msg, source, topic);};\n        this._subscribers.push(s);\n        this.determineCaller();\n        return this;\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n        this.determineCaller();\n\n        return this;\n    };\n\n    determineCaller(){\n        const len = this._subscribers.length;\n        if(len === 0){\n            this._callback = callNoOne;\n        } else if (len == 1){\n            this._callback = callOne;\n        } else {\n            this._callback = callMany;\n        }\n\n    }\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\nconst NO_TOPIC = '___NO_TOPIC___';\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._noTopicList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = {};\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        // if(this.dead)\n        //     this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        topic = topic || null;\n        let list = topic ? this._subscriberListsByTopic[topic] : this._noTopicList;\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic[topic] = list;\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const list = this.subscribe(watcher, topic);\n\n        if(list.used)\n            typeof watcher === 'function' ? watcher.call(watcher, list.lastMsg, list.source, list.lastTopic) : watcher.handle(list.lastMsg, list.source, list.lastTopic);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        return this._demandSubscriberList(topic).add(watcher);\n\n    };\n\n    monitor(watcher){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        topic = topic || null;\n        this._demandSubscriberList(topic).remove(watcher);\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n    // topics(){\n    //\n    //     return this._subscriberListsByTopic.keys();\n    //\n    // };\n\n    survey(){\n        // get entire key/value store by topic:lastPacket\n        throw new Error('not imp');\n\n        // const entries = this._subscriberListsByTopic.entries();\n        // const m = new Map();\n        // for (const [key, value] of entries) {\n        //     m.set(key, value.lastPacket);\n        // }\n        //\n        // return m;\n    };\n\n\n    present(topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const subscriberList = this._demandSubscriberList(topic);\n        return subscriberList.used;\n\n    };\n\n\n    read(topic) {\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const list = this._demandSubscriberList(topic);\n        return (list.used) ? list.lastMsg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        // todo change methods to imply if statements for perf?\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        const list = this._demandSubscriberList(topic);\n        list.handle(msg, topic, silently);\n        this._wildcardSubscriberList.handle(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        const list = this._demandSubscriberList(topic);\n\n        if(list.used)\n            this.write(list.lastMsg, list.lastTopic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        // if(this.dead)\n        //     this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(frame, wire, def){\n\n        this.frame = frame;\n        this.wire = wire;\n\n        function fromDef(name){\n\n            if(!def[name])\n                return null;\n\n            const [factory, stateful, ...args] = def[name];\n\n            return stateful ? factory.call(this, ...args) : factory;\n\n        }\n\n        this.keep = fromDef('keep') || F.getKeepLast();\n        this.when = fromDef('when') || F.ALWAYS_TRUE;\n        this.until = fromDef('until') || F.ALWAYS_TRUE;\n        this.timer = fromDef('timer');  // throttle, debounce, defer, batch, sync\n        this.clear = fromDef('clear') || F.ALWAYS_FALSE;\n\n        this.isPrimed = false;\n\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n\n        this.keep(msg, source, topic);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.frame.emit(pool.wire, msg, pool.wire.name);\n\n    };\n\n}\n\n\nexport default Pool;","\n\nclass Tap {\n\n    constructor(def, frame){\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n        this.frame = frame;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n}\n\n\nexport default Tap;","\n\nfunction Msg(def) {\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n\n}\n\nMsg.prototype.handle = function handle(frame, wire, msg, source, topic){\n\n        const nextMsg = this.action(msg, source, topic);\n        frame.emit(wire, nextMsg, source, topic);\n\n};\n\n\n\nexport default Msg;","\n\nclass Source {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n        this.stateful = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const nextSource = this.action(msg, source, topic);\n        frame.emit(wire, msg, nextSource, topic);\n\n    }\n\n}\n\n\nexport default Source;","\n\nfunction Filter(def) {\n\n    this.action = def.action;\n    this.value = null;\n    this.stateful = false;\n\n}\n\nFilter.prototype.handle = function handle(frame, wire, msg, source, topic){\n\n        const f = this.action;\n        f(msg, source, topic) && frame.emit(wire, msg, source, topic);\n\n};\n\n\nexport default Filter;","\nfunction callback(frame, wire, msg, source, topic){\n\n    frame.emit(wire, msg, source, topic);\n\n}\n\n\n\nclass Delay {\n\n    constructor(def){\n\n        this.action = def.action;\n        this.value = null;\n\n    }\n\n\n    handle(frame, wire, msg, source, topic){\n\n        setTimeout(callback, this.action(msg, source, topic) || 0, frame, wire, msg, source, topic);\n\n    }\n\n\n}\n\n\nexport default Delay;\n","\nfunction Scan(def) {\n\n    this.action = def.action;\n    this.value = 0;\n    this.stateful = true;\n\n}\n\nScan.prototype.handle = function (frame, wire, msg, source, topic){\n\n        this.value = this.action(this.value, msg, source, topic);\n        frame.emit(wire, this.value, source, topic);\n\n};\n\nexport default Scan;\n\n// export default Scan;\n//\n//\n// class Scan {\n//\n//     constructor(def){\n//\n//         this.action = def.action;\n//         this.value = 0;\n//         this.stateful = true;\n//\n//     }\n//\n//     handle(frame, wire, msg, source, topic){\n//\n//         const v = this.value = this.action.call(null, this.value, msg);\n//         frame.emit(wire, v, source, topic);\n//\n//     }\n//\n// }\n\n// export default Scan;\n\n\n//\n// class Scan {\n//\n//     constructor(func){\n//\n//         this.hadFirstMsg = false;\n//         this.func = func;\n//         this.value = null;\n//\n//     }\n//\n//     handle(msg, source, topic){\n//\n//         if(!this.hadFirstMsg){\n//             this.hadFirstMsg = true;\n//             this.value = msg;\n//             return;\n//         }\n//\n//         this.value = this.func(this.value, msg, source, topic);\n//\n//     }\n//\n//     next(){\n//         return this.value;\n//     }\n//\n//     content(){\n//         return this.value;\n//     }\n//\n//     reset(){\n//\n//     }\n// }\n//\n//\n// export default Scan;","\n\nclass SkipDupes {\n\n    constructor(){\n\n        this.value = null;\n        this.hadValue = false;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        if(!this.hadValue || this.value !== msg) {\n            frame.emit(wire, msg, source, topic);\n            this.hadValue = true;\n            this.value = msg;\n        }\n\n    }\n\n}\n\n\nexport default SkipDupes;","\n\nclass LastN {\n\n    constructor(n){\n\n        this.value = [];\n        this.max = n;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const list = this.value;\n        list.push(msg);\n        if(list.length > this.max)\n            list.shift();\n\n        frame.emit(wire, list, source, topic);\n\n    }\n\n    reset(){\n        this.value = [];\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default LastN;","\n\nclass FirstN {\n\n    constructor(n){\n\n        this.value = [];\n        this.max = n;\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const list = this.value;\n        if(list.length < this.max)\n            list.push(msg);\n\n        frame.emit(wire, list, source, topic);\n\n    }\n\n    reset(){\n        this.value = [];\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default FirstN;","\n\nclass All {\n\n    constructor(){\n\n        this.value = [];\n        this.hasValue = false;\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const list = this.value;\n        list.push(msg);\n        frame.emit(wire, list, source, topic);\n\n    }\n\n    reset(){\n        this.value = [];\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default All;","\nfunction TO_SOURCE(msg, source, topic) {\n    return source;\n}\n\nclass Group {\n\n    constructor(def){\n\n        this.action = def.action || TO_SOURCE;\n        this.value = {};\n\n    }\n\n    handle(frame, wire, msg, source, topic){\n\n        const g = this.action(msg, source);\n        const hash = this.value;\n\n        if(g) {\n            hash[g] = msg;\n        } else { // no source, copy message props into hash to merge nameless streams of key data\n            for(const k in msg){\n                hash[k] = msg[k];\n            }\n        }\n\n        frame.emit(wire, hash, source, topic);\n\n    }\n\n    reset(){\n        this.value = {};\n    }\n\n    next(){\n        return this.value;\n    }\n\n    content(){\n        return this.value;\n    }\n\n}\n\nexport default Group;","\n\n\nfunction Pass() {}\n\nPass.prototype.handle = function(frame, wire, msg, source, topic){\n\n    frame.emit(wire, msg, source, topic);\n\n};\n\n\n//\n//     // constructor(def){\n//     //\n//     //     this.action = null;\n//     //     this.value = null;\n//     //     this.stateful = false;\n//     //\n//     // }\n//\n//     handle(frame, wire, msg, source, topic){\n//\n//         frame.emit(wire, msg, source, topic);\n//\n//     }\n//\n// }\n\nexport default Pass;\n","\nimport Tap from './waves/tap.js';\nimport Msg from './waves/msg.js';\nimport Source from './waves/source.js';\nimport Filter from './waves/filter.js';\nimport Delay from './waves/delay.js';\nimport Scan from './waves/scan.js';\nimport SkipDupes from './waves/skipDupes.js'\nimport LastN from './waves/lastN.js';\nimport FirstN from './waves/firstN.js';\nimport All from './waves/all.js';\nimport Group from './waves/group.js';\nimport Pass from './waves/pass.js';\n\n// const PASS = {\n//\n//     handle: function(frame, wire, msg, source, topic) {\n//         frame.emit(wire, msg, source, topic);\n//     }\n//\n// };\n\nconst PASS = new Pass();\n\nconst SPLIT = {\n\n    handle: function(frame, wire, msg, source, topic) {\n\n        const len = msg.length || 0;\n        for(let i = 0; i < len; i++){\n            const chunk = msg[i];\n            frame.emit(wire, chunk, source, topic);\n        }\n\n    }\n\n};\n\n\nclass Handler {\n\n    constructor(def){\n\n        this.process = (def && def.process) ? this[def.process](def) : PASS;\n\n    };\n\n    handle(frame, wire, msg, source, topic) {\n        this.process.handle(frame, wire, msg, source, topic)\n    };\n\n    pass(def) {\n        return new Pass(def);\n    }\n\n    tap(def) {\n        return new Tap(def);\n    };\n\n    msg(def) {\n        return new Msg(def);\n    }\n\n    source(def) {\n        return new Source(def);\n    }\n\n    filter(def) {\n        return new Filter(def);\n    };\n\n    skipDupes(def) {\n        return new SkipDupes(def);\n    };\n\n    delay(def) {\n        return new Delay(def);\n    };\n\n    scan(def) {\n        return new Scan(def);\n    };\n\n    group(def) {\n        return new Group(def);\n    };\n\n    lastN(def) {\n        return new LastN(def.args[0]);\n    };\n\n    firstN(def) {\n        return new FirstN(def.args[0]);\n    };\n\n    all() {\n        return new All();\n    };\n\n\n    split() {\n        return SPLIT;\n    };\n\n\n\n}\n\n\nexport default Handler;","\nimport Wave from './wave.js';\nimport Pool from './pool.js';\nimport Handler from './handler.js';\n\n\nclass Frame {\n\n    constructor(bus, def) {\n\n        this._bus = bus;\n        this._nextFrame = null; // frames to join or fork into\n        this._index = bus._frames.length;\n        this._wireMap = {}; //new WeakMap(); // wires as keys, handlers/pools as values\n        this._holding = false; // begins pools allowing multiple method calls -- must close with a time operation\n        this._processDef = def; // wave or pool definition\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        const wireId = wire._id;\n        const hasWire = this._wireMap.hasOwnProperty(wireId);//this._wireMap.has(wire); //this._wireMap.hasOwnProperty(wireId); //\n        if(!hasWire)\n            this._wireMap[wireId] = this._createHandler(wire);\n            // this._wireMap.set(wire, this._createHandler(wire));\n\n        const handler = this._wireMap[wireId]; // this._wireMap.get(wire);\n        handler.handle(this, wire, msg, source , topic);\n        // handler.handle(this, wire, msg, source || wire.name , topic); //todo safe to use just source?\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    _createHandler(wire){\n\n        const def = this._processDef;\n        return (def && def.name === 'pool') ? new Pool(this, wire, def) : new Handler(def);\n\n    };\n\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default Frame;\n\n\n","import F from './flib.js';\n\nlet _id = 0;\n\n// const FRAME_CAP = {\n//     handle: function(wire, msg, source, topic){}\n// };\n\nclass Wire {\n\n    constructor(name){\n\n        this._id = ++_id + '';\n        this.target = null; // a frame in a bus\n        this.dead = false;\n        this.name = name;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n\n    };\n\n    handle(msg, source, topic) {\n\n        // if(this.target)\n            this.target.handle(this, msg, this.name, topic);\n\n    };\n\n    destroy(){\n\n        if(!this.dead && this.target){\n            this.dead = true;\n            this.cleanupMethod();\n        }\n\n    };\n\n}\n\n\nWire.fromInterval = function(delay, name){\n\n    const wire = new Wire(name);\n\n    const toWire = function(msg){\n        wire.handle(msg);\n    };\n\n    const id = setInterval(toWire, delay);\n\n    wire.cleanupMethod = function(){\n        clearInterval(id);\n    };\n\n    return wire;\n\n};\n\n\nWire.fromMonitor = function(data, name){\n\n    const wire = new Wire(name);\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, source, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire);\n    };\n\n    data.monitor(toWire);\n\n    return wire;\n\n};\n\n\n\nWire.fromSubscribe = function(data, topic, name, canPull){\n\n    const wire = new Wire(name || topic || data.name);\n\n    // const toWire = function(msg, source, topic){\n    //     wire.handle(msg, source, topic);\n    // };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(wire, topic);\n    };\n\n    if(canPull){\n        wire.pull = function(){\n            const present = data.present(topic);\n            if(present) {\n                const msg = data.read(topic);\n                const source = wire.name;\n                wire.handle(msg, source, topic);\n            }\n        }\n    }\n\n   // data.subscribe(toWire, topic);\n    data.subscribe(wire, topic);\n\n    return wire;\n\n};\n\n\n\nWire.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const wire = new Wire(eventName);\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toWire = function(msg){\n        wire.handle(msg, eventName);\n    };\n\n    wire.cleanupMethod = function(){\n        off.call(target, eventName, toWire, useCapture);\n    };\n\n    on.call(target, eventName, toWire, useCapture);\n\n    return wire;\n\n};\n\n\nexport default Wire;","\n\nimport Wire from './wire.js';\n\nclass FrameMerger {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._nextFrame = null;\n        this._index = bus._frames.length;\n        this._mergingWire = new Wire();\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        this.emit(this._mergingWire, msg, source, topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return false;\n    };\n\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameMerger;\n\n\n","\nimport Wave from './wave.js';\nimport Handler from './handler.js';\n\n\n\nclass FrameStateless {\n\n    constructor(bus, def) {\n\n        this._bus = bus;\n        this._nextFrame = null;\n        this._index = bus._frames.length;\n        this._process = new Handler(def);\n\n    };\n\n\n    handle(wire, msg, source, topic){\n\n        this._process.handle(this, wire, msg, source , topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return false;\n    };\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameStateless;\n\n\n","\nclass PoolDef {\n\n    constructor(){\n\n        this.name = 'pool';\n        this.keep  = null;\n        this.when  = null;\n        this.until = null;\n        this.timer = null;\n        this.clear = null;\n\n    };\n\n}\n\n\nexport default PoolDef;","\nimport Pool from './pool.js';\nimport PoolDef from './poolDef.js';\n\nclass FrameHold {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._nextFrame = null;\n        this._index = bus._frames.length;\n        this._wireMap = new WeakMap(); // wires as keys, handlers/pools as values\n        this._processDef = new PoolDef(); // pool definition\n        this._holding = true;\n\n    };\n\n    handle(wire, msg, source, topic){\n\n        //const wireId = wire._id;\n        const hasWire = this._wireMap.has(wire); //this._wireMap.hasOwnProperty(wireId); //\n        if(!hasWire)\n            // this._wireMap[wireId] = this._createHandler(wire);\n            this._wireMap.set(wire, this._createHandler(wire));\n\n        const handler = this._wireMap.get(wire);\n        handler.handle(this, wire, msg, source || wire.name , topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        if(this._nextFrame)\n            this._nextFrame.handle(wire, msg, source, topic);\n\n    };\n\n    _createHandler(wire){\n\n        const def = this._processDef;\n        return new Pool(this, wire, def);\n\n    };\n\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    target(frame) {\n\n        this._nextFrame = frame;\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameHold;\n\n\n","\n\nclass FrameForker {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._targets = []; // frames to join or fork into\n        this._index = bus._frames.length;\n\n    };\n\n    // handle is a multi-emit\n\n    handle(wire, msg, source, topic){\n\n        const len = this._targets.length;\n        for(let i = 0; i < len; i++){\n            const frame = this._targets[i];\n            frame.handle(wire, msg, source, topic);\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return false;\n    };\n\n    target(frame) {\n\n        this._targets.push(frame);\n\n    };\n\n    destroy() {\n\n    };\n\n\n}\n\nexport default FrameForker;\n\n\n","\nclass WaveDef {\n\n    constructor(process, action, stateful, ...args){\n\n        this.name = 'wave';\n        this.process = process;\n        this.action = action;\n        this.stateful = stateful;\n        this.args = args;\n\n    };\n\n}\n\nexport default WaveDef;","\n\nconst Nyan = {};\n\n// then = applies to all words in a phrase\n// watch: ^ = action, need, event, watch | read, must\n// then:  run, read, attr, and, style, write, blast, filter\n\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^',  react: true, subscribe: true, need: true, solo: true},\n    {name: 'WIRE',   sym: '~',  react: true, follow: true}, // INTERCEPT\n    {name: 'WATCH',  sym: null, react: true, follow: true},\n    {name: 'EVENT',  sym: '@',  react: true, event: true},\n    {name: 'ALIAS',  sym: '(',  then: true, solo: true},\n    {name: 'METHOD', sym: '`',  then: true, solo: true},\n    {name: 'READ',   sym: null, then: true, read: true},\n    {name: 'ATTR',   sym: '#',  then: true, solo: true, output: true},\n    {name: 'AND',    sym: '&',  then: true },\n    {name: 'STYLE',  sym: '$',  then: true,  solo: true, output: true },\n    {name: 'WRITE',  sym: '=',  then: true,  solo: true },\n    {name: 'SPRAY',  sym: '<',  then: true },\n    {name: 'RUN',    sym: '*',  then: true, output: true },\n    {name: 'FILTER', sym: '>',  then: true }\n\n];\n\n// cat, dog | & meow, kitten {*log} | =puppy\n\n\n// todo make ! a trailing thingie, must goes away\n// trailing defs -- ! = needs message in data to continue, ? = data must exist or throw error\n// {name: 'BEGIN',  sym: '{'}, -- fork\n// {name: 'END',    sym: '}'}, -- back\n// {name: 'PIPE',   sym: '|'}, -- phrase delimiter\n// read = SPACE\n// - is data maybe (data point might not be present)\n// ? is object maybe (object might not be there)\n// () is rename\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst thenByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n\n    if(sym) {\n        operationsBySymbol[sym] = op;\n        namesBySymbol[sym] = name;\n    }\n\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n\n    if(op.then){\n        thenByName[name] = true;\n    }\n\n    if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, need, topic, alias, monitor, extracts){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.need = need || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n        this.extracts = extracts && extracts.length ? extracts : null; // possible list of message property pulls\n        // this.useCapture =\n\n    }\n\n}\n\nlet tickStack = [];\n\nfunction toTickStackString(str){\n\n\n    tickStack = [];\n    const chunks = str.split(/([`])/);\n    const strStack = [];\n\n    let ticking = false;\n    while(chunks.length){\n        const c = chunks.shift();\n        if(c === '`'){\n            ticking = !ticking;\n            strStack.push(c);\n        } else {\n            if(ticking) {\n                tickStack.push(c);\n            } else {\n                strStack.push(c);\n            }\n        }\n    }\n\n    const result = strStack.join('');\n    //console.log('stack res', result, tickStack);\n    return result;\n}\n\nfunction parse(str, isProcess) {\n\n\n    str = toTickStackString(str);\n\n    const sentences = [];\n\n    // split on curlies and remove empty chunks (todo optimize for parsing speed, batch loop operations?)\n    let chunks = str.split(/([{}]|-})/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === '}' || chunk === '{' || chunk === '-}') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            sentences.push(sentence);\n\n    }\n\n    return validate(sentences, isProcess);\n\n\n}\n\nfunction validate(sentences, isProcess){\n\n    const cmdList = [];\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase && !isProcess) {\n                    validateReactPhrase(phrase);\n                    firstPhrase = false;\n                    cmdList.push({name: 'REACT', phrase: phrase});\n                }\n                else {\n                    validateProcessPhrase(phrase);\n                    cmdList.push({name: 'PROCESS', phrase: phrase});\n                }\n            }\n\n        } else if (s === '{') {\n            cmdList.push({name: 'FORK'});\n        } else if (s === '}') {\n            cmdList.push({name: 'BACK'});\n        } else if (s === '-}') {\n            cmdList.push({name: 'JOIN'});\n        }\n    }\n\n    return cmdList;\n}\n\n\nfunction validateReactPhrase(phrase){\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const operation = nw.operation = nw.operation || 'WATCH';\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with an observation!');\n\n}\n\n\n\nfunction validateProcessPhrase(phrase){\n\n    const firstPhrase = phrase[0];\n    const firstOperation = firstPhrase.operation || 'READ';\n\n    if(!thenByName[firstOperation])\n        throw new Error('Illegal operation in phrase!'); // unknown or reactive\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        nw.operation = nw.operation || firstOperation;\n        if(nw.operation !== firstOperation){\n\n           // console.log('mult', nw.operation, firstOperation);\n            throw new Error('Multiple operation types in phrase (only one allowed)!');\n\n        }\n\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        //console.log('word=', rawWord);\n        const rawChunks = rawWord.split(/([(?!:.`)])/);\n        const chunks = [];\n        let inMethod = false;\n\n        // white space is only allowed between e.g. `throttle 200`, `string meow in the hat`\n\n        while(rawChunks.length){\n            const next = rawChunks.shift();\n            if(next === '`'){\n                inMethod = !inMethod;\n                chunks.push(next);\n            } else {\n                if(!inMethod){\n                    const trimmed = next.trim();\n                    if(trimmed)\n                        chunks.push(trimmed);\n                } else {\n                    chunks.push(next);\n                }\n            }\n        }\n\n        //console.log('to:', chunks);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start).trim();\n        const extracts = [];\n\n        // todo hack (rename)\n\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n        let need = false;\n\n        if(operation === 'ALIAS'){\n            alias = chunks.shift();\n            chunks.shift(); // todo verify ')'\n        } else if (operation === 'METHOD'){\n                chunks.shift();\n                // const next = chunks.shift();\n                const next = tickStack.shift();\n                const i = next.indexOf(' ');\n                if(i === -1) {\n                    extracts.push(next);\n                } else {\n                    extracts.push(next.slice(0, i));\n                    if(next.length > i){\n                        extracts.push(next.slice(i + 1));\n                    }\n                }\n\n            while(chunks.length){ chunks.shift(); }\n        }\n\n        while(chunks.length){\n\n            const c = chunks.shift();\n\n            switch(c){\n\n                case '.':\n\n                    const prop = chunks.length && chunks[0]; // todo assert not operation\n                    const silentFail = chunks.length > 1 && (chunks[1] === '?');\n\n                    if(prop) {\n                        extracts.push({name: prop, silentFail: silentFail});\n                        chunks.shift(); // remove word from queue\n                        if(silentFail)\n                            chunks.shift(); // remove ? from queue\n                    }\n\n                    break;\n\n                case '?':\n\n                    maybe = true;\n                    break;\n\n                case '!':\n\n                    need = true;\n                    break;\n\n                case ':':\n\n                    if(chunks.length){\n                        const next = chunks[0];\n                        if(next === '('){\n                            monitor = true;\n                        } else {\n                            topic = next;\n                            chunks.shift(); // remove topic from queue\n                        }\n                    } else {\n                        monitor = true;\n                    }\n\n                    break;\n\n                case '(':\n\n                    if(chunks.length){\n                        alias = chunks.shift(); // todo assert not operation\n                    }\n\n                    break;\n\n\n\n            }\n\n        }\n\n        alias = alias || topic || name;\n        const nw = new NyanWord(name, operation, maybe, need, topic, alias, monitor, extracts);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","import Wire from './wire.js';\nimport Nyan from './nyan.js';\nimport Bus from './bus.js';\n\n\nfunction getSurveyFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    return data && data.survey();\n\n}\n\nfunction throwError(msg){\n    console.log('throwing ', msg);\n    const e = new Error(msg);\n    console.log(this, e);\n    throw e;\n}\n\nfunction getDoSkipNamedDupes(names){\n\n    let lastMsg = {};\n    const len = names.length;\n\n    return function doSkipNamedDupes(msg) {\n\n        let diff = false;\n        for(let i = 0; i < len; i++){\n            const name = names[i];\n            if(!lastMsg.hasOwnProperty(name) || lastMsg[name] !== msg[name])\n                diff = true;\n            lastMsg[name] = msg[name];\n        }\n\n        return diff;\n\n    };\n}\n\n\nfunction getDoWrite(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n\n    return function doWrite(msg) {\n        data.write(msg, word.topic);\n    };\n\n}\n\n\nfunction getDoSpray(scope, phrase){\n\n    const wordByAlias = {};\n    const dataByAlias = {};\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++){ // todo, validate no dupe alias in word validator for spray\n\n        const word = phrase[i];\n        const data = scope.find(word.name, !word.maybe);\n        if(data) { // might not exist if optional\n            wordByAlias[word.alias] = word;\n            dataByAlias[word.alias] = data;\n        }\n\n    }\n\n    return function doWrite(msg) {\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                const msgPart = msg[alias];\n                data.silentWrite(msgPart, word.topic);\n            }\n\n        }\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                data.refresh(word.topic);\n            }\n\n        }\n\n\n    };\n\n\n}\n\n\nfunction getDoRead(scope, phrase){\n\n    const len = phrase.length;\n    const firstWord = phrase[0];\n\n    if(len > 1 || firstWord.monitor) { // if only reading word is a wildcard subscription then hash as well\n        return getDoReadMultiple(scope, phrase);\n    } else {\n        return getDoReadSingle(scope, firstWord);\n    }\n\n}\n\n\nfunction getDoAnd(scope, phrase) {\n\n    return getDoReadMultiple(scope, phrase, true);\n\n}\n\n\nfunction getDoReadSingle(scope, word) {\n\n    const data = scope.find(word.name, !word.maybe);\n    const topic = word.topic;\n\n    return function doReadSingle() {\n\n        return data.read(topic);\n\n    };\n\n}\n\n\nfunction getDoReadMultiple(scope, phrase, isAndOperation){\n\n\n        const len = phrase.length;\n\n\n        return function doReadMultiple(msg, source) {\n\n            const result = {};\n\n            if(isAndOperation){\n\n                if(source){\n                    result[source] = msg;\n                } else {\n                    for (const p in msg) {\n                        result[p] = msg[p];\n                    }\n                }\n            }\n\n            for (let i = 0; i < len; i++) {\n                const word = phrase[i];\n\n                if(word.monitor){\n\n                    const survey = getSurveyFromDataWord(scope, word);\n                    for(const [key, value] of survey){\n                        result[key] = value;\n                    }\n\n                } else {\n\n                    const data = scope.find(word.name, !word.maybe);\n                    const prop = word.monitor ? (word.alias || word.topic) : (word.alias || word.name);\n                    if (data.present(word.topic))\n                        result[prop] = data.read(word.topic);\n\n                }\n\n            }\n\n            return result;\n\n        };\n\n}\n\n\n// get data stream -- store data in bus, emit into stream on pull()\n\n\nfunction getDataWire(scope, word, canPull) {\n\n    const data = scope.find(word.name, !word.maybe);\n    if(word.monitor){\n        return Wire.fromMonitor(data, word.alias, canPull);\n    } else {\n        return Wire.fromSubscribe(data, word.topic, word.alias, canPull);\n    }\n\n}\n\nfunction isObject(v) {\n    if (v === null)\n        return false;\n    return (typeof v === 'function') || (typeof v === 'object');\n}\n\n\nfunction getEventWire(word, target){\n\n    return Wire.fromEvent(target, word.topic, word.useCapture, word.alias);\n\n}\n\nfunction doExtracts(value, extracts) {\n\n    let result = value;\n    const len = extracts.length;\n\n    for (let i = 0; i < len; i++) {\n        const extract = extracts[i];\n        if(!isObject(result)) {\n            if(extract.silentFail)\n                return undefined;\n\n            throwError('Cannot access property \\'' + extract.name + '\\' of ' + result);\n\n        }\n        result = result[extract.name];\n    }\n\n\n    return result;\n\n}\n\nfunction getNeedsArray(phrase){\n    return phrase.filter(word => word.operation.need).map(word => word.alias);\n}\n\nfunction getDoMsgHashExtract(words) {\n\n    const len = words.length;\n    const extractsByAlias = {};\n\n    for (let i = 0; i < len; i++) {\n\n        const word = words[i];\n        extractsByAlias[word.alias] = word.extracts;\n\n    }\n\n    return function(msg) {\n\n        const result = {};\n        for(const alias in extractsByAlias){\n            const hasProp = msg.hasOwnProperty(alias);\n            if(hasProp){\n                result[alias] = doExtracts(msg[alias], extractsByAlias[alias]);\n            }\n        }\n\n        return result;\n\n    };\n\n}\n\nfunction getDoMsgExtract(word) {\n\n    const extracts = word.extracts;\n\n    return function(msg){\n        return doExtracts(msg, extracts);\n    }\n\n}\n\n\nfunction applyReaction(scope, bus, phrase, target) { // target is some event emitter\n\n    const need = [];\n    const skipDupes = [];\n    const extracts = [];\n\n    if(phrase.length === 1 && phrase[0].operation === 'ACTION'){\n        const word = phrase[0];\n        bus.wire(getDataWire(scope, word, false));\n        return;\n    }\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const word = phrase[i];\n        const operation = word.operation;\n\n        if(operation === 'WATCH') {\n            bus.wire(getDataWire(scope, word, true));\n            skipDupes.push(word.alias)\n        }\n        else if(operation === 'WIRE'){\n            bus.wire(getDataWire(scope, word, true));\n        }\n        else if(operation === 'EVENT') {\n            bus.wire(getEventWire(word, target));\n        }\n\n        if(word.extracts)\n            extracts.push(word);\n\n        if(word.need)\n            need.push(word.alias);\n\n    }\n\n    // transformations are applied via named hashes for performance\n\n    if(bus._wires.length > 1) {\n\n        bus.merge().group().batch();\n\n        if(extracts.length)\n            bus.msg(getDoMsgHashExtract(extracts));\n\n        if(need.length)\n            bus.hasKeys(need);\n\n        if(skipDupes.length){\n            bus.filter(getDoSkipNamedDupes(skipDupes));\n        }\n\n    } else {\n\n        if(extracts.length)\n            bus.msg(getDoMsgExtract(extracts[0]));\n\n        if(skipDupes.length)\n            bus.skipDupes();\n\n    }\n\n}\n\nfunction isTruthy(msg){\n    return !!msg;\n}\n\nfunction isFalsey(msg){\n    return !msg;\n}\n\n\nfunction applyMethod(bus, word) {\n\n    const method = word.extracts[0];\n\n    switch(method){\n\n        case 'true':\n            bus.msg(true);\n            break;\n\n        case 'false':\n            bus.msg(false);\n            break;\n\n        case 'null':\n            bus.msg(null);\n            break;\n\n        case 'undefined':\n            bus.msg(undefined);\n            break;\n\n        case 'array':\n            bus.msg([]);\n            break;\n\n        case 'object':\n            bus.msg({});\n            break;\n\n        case 'truthy':\n            bus.filter(isTruthy);\n            break;\n\n        case 'falsey':\n            bus.filter(isFalsey);\n            break;\n\n        case 'string':\n            bus.msg(function(){ return word.extracts[1];});\n            break;\n\n            // throttle x, debounce x, delay x, last x, first x, all\n\n    }\n\n}\n\nfunction applyProcess(scope, bus, phrase, context, node) {\n\n    const operation = phrase[0].operation; // same for all words in a process phrase\n\n    if(operation === 'READ') {\n        bus.msg(getDoRead(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'AND') {\n        bus.msg(getDoAnd(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if (needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'METHOD') {\n        applyMethod(bus, phrase[0]);\n    } else if (operation === 'FILTER') {\n        applyFilterProcess(bus, phrase, context);\n    } else if (operation === 'RUN') {\n        applyMsgProcess(bus, phrase, context);\n    } else if (operation === 'ALIAS') {\n        applySourceProcess(bus, phrase[0]);\n    } else if (operation === 'WRITE') {\n        bus.run(getDoWrite(scope, phrase[0]));\n    } else if (operation === 'SPRAY') {\n        bus.run(getDoSpray(scope, phrase)); // todo validate that writes do not contain words in reacts\n\n    }\n\n}\n\n\n\nfunction applyMsgProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.msg(f);\n\n    }\n\n}\n\n\nfunction applyRunProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.run(f);\n\n    }\n\n}\n\nfunction applySourceProcess(bus, word){\n\n    bus.source(word.alias);\n\n}\n\n\nfunction applyFilterProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.filter(f);\n\n    }\n\n}\n\nfunction createBus(nyan, scope, context, target){\n\n    let bus = new Bus(scope);\n    return applyNyan(nyan, bus, context, target);\n\n}\n\nfunction applyNyan(nyan, bus, context, target){\n\n    const len = nyan.length;\n    const scope = bus.scope;\n    for(let i = 0; i < len; i++){\n\n        const cmd = nyan[i];\n        const name = cmd.name;\n        const phrase = cmd.phrase;\n\n        if(name === 'JOIN') {\n\n            bus = bus.join();\n            bus.merge();\n            bus.group();\n\n        } else if(name === 'FORK'){\n            bus = bus.fork();\n        } else if (name === 'BACK'){\n            bus = bus.back();\n        } else {\n\n            if(name === 'PROCESS')\n                applyProcess(scope, bus, phrase, context, target);\n            else // name === 'REACT'\n                applyReaction(scope, bus, phrase, target);\n\n        }\n    }\n\n    return bus;\n\n}\n\nconst NyanRunner = {\n    applyNyan: applyNyan,\n    createBus: createBus\n};\n\n\nexport default NyanRunner;","\nimport Frame from './frame.js';\nimport FrameMerger from './frameMerger.js';\nimport FrameStateless from './frameStateless.js';\nimport FrameHold from './frameHold.js';\nimport FrameForker from './frameForker.js';\nimport F from './flib.js';\nimport Wire from './wire.js';\nimport WaveDef from './waveDef.js';\nimport Nyan from './nyan.js';\nimport NyanRunner from './nyanRunner.js';\n\nclass Bus {\n\n    constructor(scope) {\n\n        this._frames = [];\n        this._wires = [];\n        this._dead = false;\n        this._scope = scope;\n        this._children = []; // from forks\n        this._parent = null;\n\n        if(scope)\n            scope._busList.push(this);\n\n        const f = new FrameStateless(this);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame(def) {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = (def && def.stateful) ? new Frame(this, def) : new FrameStateless(this, def);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n    addFrameHold() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new FrameHold(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n\n    addFrameMerger() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new FrameMerger(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n    addFrameForker() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new FrameForker(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n\n    process(nyan, context, target){\n\n        if(typeof nyan === 'string')\n            nyan = Nyan.parse(nyan, true);\n\n        NyanRunner.applyNyan(nyan, this, context, target);\n        return this;\n\n    }\n\n    // create stream\n    spawn(){\n\n    }\n\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        fork.parent = this;\n        this.addFrameForker();\n        this._currentFrame.target(fork._currentFrame);\n\n        return fork;\n    };\n\n    back() {\n\n        if(!this._parent)\n            throw new Error('Cannot exit fork, parent does not exist!');\n\n        return this.parent;\n\n    };\n\n    join() {\n\n        const parent = this.back();\n        parent.add(this);\n        return parent;\n\n    }\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        bus._currentFrame.target(frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrameHold();\n        return this;\n\n    };\n\n    pull() {\n\n        const len = this._wires.length;\n\n        for(let i = 0; i < len; i++) {\n            const wire = this._wires[i];\n            wire.pull();\n        }\n\n        return this;\n\n    };\n\n    event(target, eventName, useCapture) {\n\n        const wire = Wire.fromEvent(target, eventName, useCapture);\n        return this.wire(wire);\n\n    };\n\n    subscribe(data, topic, name, canPull){\n\n        const wire = Wire.fromSubscribe(data, topic, name, canPull);\n        return this.wire(wire);\n\n    };\n\n    interval(delay, name){\n\n        const wire = Wire.fromInterval(delay, name);\n        return this.wire(wire);\n\n    }\n\n    wire(wire, targetFrame) {\n\n        wire.target = targetFrame || this._frames[0];\n        this._wires.push(wire);\n        return this;\n\n    }\n\n    monitor(data, name){\n\n        const wire = Wire.fromMonitor(data, name);\n        wire.target = this._frames[0];\n        this._wires.push(wire);\n\n        return this;\n\n    };\n\n\n    scan(func, seed){\n\n        if(!this.holding) {\n            this.addFrame(new WaveDef('scan', func, true, 0));\n            return this;\n        }\n\n        return this.reduce(F.getScan, func, seed);\n\n    };\n\n\n\n    scan2(func, seed){\n\n        if(!this.holding) {\n            this.addFrame(new WaveDef('scan', func, false, 0));\n            return this;\n        }\n\n        return this.reduce(F.getScan, func, seed);\n\n    };\n\n\n    delay(fNum) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('delay', F.FUNCTOR(fNum)));\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n\n        return this.when(F.getWhenKeys, true, keys);\n\n    };\n\n    group(by) {\n\n        if(!this.holding) {\n             this.addFrame(new WaveDef('group', null, true));\n             return this;\n        }\n        this.reduce(F.getGroup, by);\n        return this;\n\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        if(!this.holding) {\n            this.addFrame(new WaveDef('all', null, true));\n            return this;\n        }\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        if(!this.holding) {\n            this.addFrame(new WaveDef('firstN', null, true, n));\n            return this;\n        }\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        if(!this.holding) {\n            this.addFrame(new WaveDef('lastN', null, true, n));\n            return this;\n        }\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        const holding = this.holding;\n\n        if(!holding){\n\n            this.addFrame(new WaveDef('msg', factory, true, ...args));\n\n        } else {\n\n            const frame = this._currentFrame;\n            const def = frame._processDef;\n            def.keep = [factory, true, ...args];\n\n        }\n\n        return this;\n\n    };\n\n    timer(factory, stateful, ...args) {\n\n        const holding = this.holding;\n        const frame = holding ? this._currentFrame : this.addFrameHold();\n        const def = frame._processDef;\n        def.timer = [factory, stateful, ...args];\n        this._currentFrame._holding = false; // timer ends hold\n\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrameHold().reduce(F.getKeepLast).until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, stateful, ...args) {\n\n        const holding = this.holding;\n\n        if(!holding){\n\n            this.addFrame(new WaveDef('filter', factory, stateful, ...args));\n\n        } else {\n\n            const frame = this._currentFrame;\n            const def = frame._processDef;\n            def.when = [factory, stateful, ...args];\n\n        }\n\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('tap', func));\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrameMerger();\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('msg', F.FUNCTOR(fAny)));\n        return this;\n\n    };\n\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('source', F.FUNCTOR(fStr)));\n        return this;\n\n    };\n\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('filter', func));\n        return this;\n\n\n    };\n\n    split() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('split'));\n        return this;\n\n    };\n\n    hasKeys(keys) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame(new WaveDef('filter', F.getHasKeys(keys)));\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame(new WaveDef('skipDupes', null, true));\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const wires = this._wires;\n        const len = wires.length;\n        for (let i = 0; i < len; i++) {\n            const wire = wires[i];\n            wire.destroy();\n        }\n\n        this._wires = null;\n        return this;\n\n    };\n\n}\n\n\n\nexport default Bus;\n","\n\nimport Data from './data.js';\nimport { DATA_TYPES } from './dataTypes.js';\nimport Bus from './bus.js';\nimport NyanRunner from './nyanRunner.js';\nimport Nyan from './nyan.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    bus(strOrNyan, context, node){\n\n        if(!strOrNyan)\n            return new Bus(this);\n\n        const nyan = (typeof strOrNyan === 'string') ? Nyan.parse(strOrNyan) : strOrNyan;\n        console.log(nyan);\n        return NyanRunner.createBus(nyan, this, context, node);\n\n    };\n\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n\n                if (d.present())\n                    result[d.name] = d.read();\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Wire from './wire.js';\nimport Bus from './bus.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\nCatbus.bus = function(){\n    return new Bus();\n};\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const bus = new Bus();\n    bus.event(target, eventName, useCapture);\n    return bus;\n\n};\n\n// todo stable output queue -- output pools go in a queue that runs after the batch q is cleared, thus run once only\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\n\nCatbus.createChild = Catbus.scope = function(name){\n\n    return new Scope(name);\n\n};\n\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["Catbus","F","TO_SOURCE"],"mappings":";;;;;;AAEA,MAAM,UAAU,GAAG;;IAEf,MAAM,IAAI,QAAQ;IAClB,MAAM,IAAI,QAAQ;IAClB,KAAK,KAAK,OAAO;IACjB,QAAQ,EAAE,UAAU;IACpB,IAAI,MAAM,MAAM;IAChB,GAAG,OAAO,KAAK;;CAElB,CAAC;;AAEF,MAAM,aAAa,GAAG,EAAE,CAAC;;AAEzB,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC;IACtB,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACxB,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CACxB;;AAED,SAAS,OAAO,CAAC,IAAI,CAAC;IAClB,OAAO,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;CAC7C,AAGD,AAA8B;;ACtB9B,SAAS,WAAW,EAAE;IAClB,OAAO,IAAI,CAAC;CACf;;AAED,SAAS,YAAY,EAAE;IACnB,OAAO,KAAK,CAAC;CAChB;;;AAGD,SAAS,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE;IAC5B,OAAO,MAAM,CAAC;CACjB;;AAED,SAAS,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;IAClC,OAAO,KAAK,CAAC;CAChB;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE;IACjB,OAAO,GAAG,CAAC;CACd;;AAED,SAAS,IAAI,EAAE;;CAEd;;;AAGD,SAAS,OAAO,CAAC,GAAG,EAAE;IAClB,OAAO,CAAC,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,GAAG,WAAW,EAAE,OAAO,GAAG,CAAC,EAAE,CAAC;CACzE;;AAED,MAAM,IAAI,GAAG;;;IAGT,wBAAwB,EAAE,SAAS,IAAI,CAAC;QACpC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;KACjE;;IAED,kBAAkB,EAAE,SAAS,IAAI,CAAC;QAC9B,GAAG,OAAO,IAAI,KAAK,UAAU;YACzB,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;KACnE;;IAED,aAAa,EAAE,UAAU;OACtB,OAAO,UAAU,EAAE,OAAO,IAAI,CAAC,CAAC;KAClC;;IAED,aAAa,EAAE,SAAS,IAAI,CAAC;;YAErBA,QAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;KAE5B;;IAED,YAAY,EAAE,UAAU;QACpB,OAAO,SAAS,IAAI,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB;KACJ;;IAED,aAAa,EAAE,UAAU;QACrB,OAAO,SAAS,IAAI,EAAE;YAClB,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACrC;KACJ;;IAED,gBAAgB,EAAE,SAAS,IAAI,CAAC;;QAE5B,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,cAAc,GAAG,KAAK,CAAC;QAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;QAE5B,SAAS,YAAY,CAAC,WAAW,CAAC;;YAE9B,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;gBACf,OAAO;;YAEX,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;;YAEnC,GAAG,CAAC,WAAW,CAAC;gBACZ,GAAG,CAAC,SAAS,EAAE;oBACX,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACnB,QAAQ,GAAG,KAAK,CAAC;oBACjB,SAAS,GAAG,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;iBAC/D,MAAM;oBACH,cAAc,GAAG,IAAI,CAAC;iBACzB;gBACD,OAAO;aACV;;YAED,GAAG,QAAQ,CAAC;gBACR,GAAG,QAAQ,CAAC;;iBAEX,MAAM;;oBAEH,QAAQ,GAAG,IAAI,CAAC;oBAChB,cAAc,GAAG,KAAK,CAAC;oBACvB,SAAS,GAAG,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;iBAC/D;aACJ,MAAM;gBACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACnB,QAAQ,GAAG,KAAK,CAAC;gBACjB,SAAS,GAAG,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;aAC/D;;SAEJ;;QAED,OAAO,YAAY,CAAC;;KAEvB;;IAED,QAAQ,EAAE,SAAS,CAAC,CAAC;;QAEjB,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC;;QAElB,MAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;YAC3B,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,CAAC,CAAC,QAAQ,GAAG,WAAW,CAAC;;QAEzB,CAAC,CAAC,IAAI,GAAG,UAAU;YACf,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;SACzB,CAAC;;QAEF,CAAC,CAAC,OAAO,GAAG,UAAU;YAClB,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;SAC9B,CAAC;;QAEF,CAAC,CAAC,OAAO,GAAG,UAAU;YAClB,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;IAED,OAAO,EAAE,SAAS,IAAI,EAAE,IAAI,CAAC;;QAEzB,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;QACvC,IAAI,GAAG,CAAC;QACR,IAAI,OAAO,GAAG,IAAI,CAAC;;QAEnB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;;YAE3B,GAAG,OAAO,CAAC;gBACP,OAAO,GAAG,KAAK,CAAC;gBAChB,GAAG,OAAO,CAAC;oBACP,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;iBACjC,MAAM;oBACH,GAAG,GAAG,GAAG,CAAC;iBACb;aACJ,MAAM;gBACH,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;aAChC;;YAED,OAAO,GAAG,CAAC;;SAEd,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;;QAEf,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;YAC3B,OAAO,GAAG,CAAC;SACd,CAAC;;;QAGF,OAAO,CAAC,CAAC;KACZ;;;;;;;;;;;;;;;;;;;;;IAqBD,QAAQ,EAAE,SAAS,OAAO,CAAC;;QAEvB,OAAO,GAAG,OAAO,IAAI,SAAS,CAAC;QAC/B,MAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;;YAE3B,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC/B,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;aACjB,MAAM;gBACH,IAAI,MAAM,CAAC,IAAI,GAAG,CAAC;oBACf,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;iBACpB;aACJ;;YAED,OAAO,IAAI,CAAC;;SAEf,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;gBAChB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;YACD,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,CAAC;;QAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;YAC3B,OAAO,IAAI,CAAC;SACf,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;IAED,OAAO,EAAE,SAAS,OAAO,CAAC;;QAEtB,OAAO,GAAG,OAAO,IAAI,SAAS,CAAC;QAC/B,MAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;;YAE3B,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACd,OAAO,IAAI,CAAC;;SAEf,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;gBAChB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;YACD,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,CAAC;;QAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;YAC3B,OAAO,IAAI,CAAC;SACf,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;;IAGD,WAAW,EAAE,SAAS,CAAC,CAAC;;QAEpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;;YAEZ,IAAI,IAAI,CAAC;;YAET,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;gBAC3B,OAAO,IAAI,GAAG,GAAG,CAAC;aACrB,CAAC;;YAEF,CAAC,CAAC,KAAK,GAAG,UAAU;gBAChB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;aACpB,CAAC;;YAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;gBAC3B,OAAO,IAAI,CAAC;aACf,CAAC;;YAEF,OAAO,CAAC,CAAC;;SAEZ;;QAED,MAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;gBAChB,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,MAAM,MAAM,CAAC,MAAM,EAAE;gBACjB,MAAM,CAAC,KAAK,EAAE,CAAC;aAClB;YACD,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,CAAC;;QAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;YAC3B,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;;;IAID,YAAY,EAAE,SAAS,CAAC,CAAC;;QAErB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;;YAEZ,IAAI,QAAQ,CAAC;YACb,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,GAAG,UAAU,GAAG,EAAE,MAAM,EAAE;gBAC7B,OAAO,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC;aAC/C,CAAC;;YAEF,CAAC,CAAC,KAAK,GAAG,UAAU;gBAChB,QAAQ,GAAG,KAAK,CAAC;gBACjB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;aACpB,CAAC;;YAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;gBAC3B,OAAO,QAAQ,CAAC;aACnB,CAAC;;YAEF,OAAO,CAAC,CAAC;SACZ;;QAED,MAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;;YAE3B,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,OAAO,MAAM,CAAC;;SAEjB,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,MAAM,MAAM,CAAC,MAAM,EAAE;gBACjB,MAAM,CAAC,KAAK,EAAE,CAAC;aAClB;YACD,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,CAAC;;QAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;YAC3B,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;IAED,UAAU,EAAE,UAAU;;QAElB,MAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,MAAM,MAAM,CAAC,MAAM,EAAE;gBACjB,MAAM,CAAC,KAAK,EAAE,CAAC;aAClB;YACD,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,CAAC;;QAEF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU;YAC3B,OAAO,MAAM,CAAC;SACjB,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;IAED,YAAY,EAAE,SAAS,CAAC,EAAE;;QAEtB,IAAI,OAAO,GAAG,KAAK,CAAC;;QAEpB,MAAM,CAAC,GAAG,SAAS,QAAQ,CAAC;YACxB,OAAO,GAAG,OAAO,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;YAC1C,OAAO,OAAO,CAAC;SAClB,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,OAAO,GAAG,KAAK,CAAC;SACnB,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;IAED,WAAW,EAAE,SAAS,IAAI,EAAE;;QAExB,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;;QAExB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACrB;;QAED,IAAI,OAAO,GAAG,KAAK,CAAC;;QAEpB,MAAM,CAAC,GAAG,UAAU,aAAa,EAAE;;YAE/B,GAAG,OAAO;gBACN,OAAO,IAAI,CAAC;;YAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;oBAChC,OAAO,KAAK,CAAC;aACpB;;YAED,OAAO,OAAO,GAAG,IAAI,CAAC;;SAEzB,CAAC;;QAEF,CAAC,CAAC,KAAK,GAAG,UAAU;YAChB,OAAO,GAAG,KAAK,CAAC;YAChB,IAAI,MAAM,CAAC,IAAI,OAAO,CAAC;gBACnB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;aACrB;SACJ,CAAC;;QAEF,OAAO,CAAC,CAAC;;KAEZ;;IAED,UAAU,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;;QAEhC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;;QAExB,OAAO,UAAU,GAAG,EAAE;;YAElB,GAAG,OAAO,IAAI,CAAC,GAAG;gBACd,OAAO,IAAI,CAAC;;YAEhB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;gBAEzB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;oBACrB,OAAO,KAAK,CAAC;aACpB;;YAED,GAAG,CAAC,OAAO;gBACP,OAAO,GAAG,IAAI,CAAC;;YAEnB,OAAO,IAAI,CAAC;;SAEf;;KAEJ;;;IAGD,YAAY,EAAE,WAAW;;QAErB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,OAAO,CAAC;;QAEZ,OAAO,UAAU,GAAG,EAAE;;YAElB,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,KAAK,OAAO,CAAC;YACxC,OAAO,GAAG,GAAG,CAAC;YACd,MAAM,GAAG,IAAI,CAAC;YACd,OAAO,IAAI,CAAC;;SAEf;;KAEJ;;;IAGD,kBAAkB,EAAE,SAAS,GAAG,CAAC;QAC7B,GAAG,GAAG,CAAC,OAAO;YACV,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;KACxF;;IAED,iBAAiB,EAAE,SAAS,GAAG,CAAC;QAC5B,GAAG,CAAC,GAAG,CAAC,OAAO;YACX,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;KACzF;;CAEJ,CAAC;;AAEF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,AAEjB;;AC/eA,SAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;IAEvC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACjC;;CAEJ;;AAED,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE;;AAE9C,SAAS,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;CACrC;;AAED,MAAM,cAAc,CAAC;;IAEjB,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;;QAErB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;QAEnB,GAAG,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACnC;KACJ;;IAED,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,OAAO,GAAG,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;IACvC,IAAI,SAAS,GAAG,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;IAC3C,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;;IAEnC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;;;;;QAKxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;;QAEvB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;;;QAIxB,GAAG,CAAC,QAAQ,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACzD;;KAEJ;;IAED,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC;;QAEpB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;;;QAGvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAEzD;;;;IAID,OAAO,EAAE;;;;;QAKL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;KAErB;;IAED,GAAG,CAAC,OAAO,CAAC;;QAER,MAAM,CAAC,GAAG,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO,GAAG,SAAS,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QACvH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC;;KAEf;;IAED,MAAM,CAAC,OAAO,CAAC;;QAEX,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;;QAE3C,GAAG,CAAC,KAAK,CAAC,CAAC;YACP,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEnC,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEvB,OAAO,IAAI,CAAC;KACf;;IAED,eAAe,EAAE;QACb,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QACrC,GAAG,GAAG,KAAK,CAAC,CAAC;YACT,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;SAC5B,MAAM;YACH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC7B;;KAEJ;;CAEJ,AAGD,AAA8B;;AC1H9B,MAAM,IAAI,CAAC;;IAEP,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;;QAE3B,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC;;QAE/B,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC;;QAErD,IAAI,CAAC,MAAM,QAAQ,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,SAAS,KAAK,CAAC;;QAEzB,IAAI,CAAC,YAAY,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;;KAErC;;IAED,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;IACnC,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;;IAEjC,OAAO,EAAE;;;;;QAKL,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;YACpD,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;KAErB;;IAED,qBAAqB,CAAC,KAAK,CAAC;;QAExB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QACtB,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;;QAE3E,GAAG,IAAI;YACH,OAAO,IAAI,CAAC;;QAEhB,IAAI,GAAG,IAAI,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;;QAE3C,OAAO,IAAI,CAAC;;KAEf;;IAED,MAAM,CAAC,YAAY,CAAC;;QAEhB,GAAG,IAAI,CAAC,IAAI,KAAK,YAAY;YACzB,OAAO,IAAI,CAAC;;QAEhB,MAAM,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,qBAAqB,GAAG,YAAY,GAAG,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;;KAE3G;;IAED,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC;;;;;QAKlB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;QAE5C,GAAG,IAAI,CAAC,IAAI;YACR,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;;QAEjK,OAAO,IAAI,CAAC;;KAEf;;IAED,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC;;;;;QAKrB,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;KAEzD;;IAED,OAAO,CAAC,OAAO,CAAC;;;;;QAKZ,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;QAE1C,OAAO,IAAI,CAAC;;KAEf;;IAED,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC;;;;;QAKvB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QACtB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;QAE7C,OAAO,IAAI,CAAC;;KAEf;;;;;;;;IAQD,MAAM,EAAE;;QAEJ,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;;;;;;;;;KAS9B;;;IAGD,OAAO,CAAC,KAAK,CAAC;;;;;QAKV,MAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACzD,OAAO,cAAc,CAAC,IAAI,CAAC;;KAE9B;;;IAGD,IAAI,CAAC,KAAK,EAAE;;;;;QAKR,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;KAEjD;;;IAGD,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC;;;;;QAKnB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;;KAEhC;;;IAGD,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC;;;;;;;QAOvB,GAAG,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,MAAM;YAC9B,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;;QAEnE,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;;KAE7D;;;IAGD,OAAO,CAAC,KAAK,CAAC;;;;;QAKV,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;;QAE/C,GAAG,IAAI,CAAC,IAAI;YACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;;QAE7C,OAAO,IAAI,CAAC;;KAEf;;;IAGD,MAAM,CAAC,KAAK,CAAC;;;;;QAKT,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;;QAErC,OAAO,IAAI,CAAC;;KAEf;;IAED,UAAU,EAAE;;QAER,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;;KAE/D;;CAEJ,AAED,AAAoB;;ACvNpB,MAAM,IAAI,CAAC;;IAEP,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;;QAEzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;QAEjB,SAAS,OAAO,CAAC,IAAI,CAAC;;YAElB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;gBACT,OAAO,IAAI,CAAC;;YAEhB,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;;YAE/C,OAAO,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC;;SAE3D;;QAED,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAIC,IAAC,CAAC,WAAW,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAIA,IAAC,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,IAAIA,IAAC,CAAC,WAAW,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,IAAIA,IAAC,CAAC,YAAY,CAAC;;QAEhD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;;KAGzB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;;QAEpC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAC9B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YACd,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACpB;SACJ;;KAEJ;;IAED,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;KAC5C;;IAED,OAAO,CAAC,IAAI,EAAE;;QAEV,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;QACpB,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACtC,MAAM,GAAG,GAAG,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;;QAE3C,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACrB;;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;QAEtB,GAAG,UAAU;YACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;KAEvD;;CAEJ,AAGD;;ACpEA,MAAM,GAAG,CAAC;;IAEN,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC;;QAEnB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;KAEtB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAExC;;CAEJ,AAGD;;ACrBA,SAAS,GAAG,CAAC,GAAG,EAAE;;QAEV,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;CAE7B;;AAED,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE/D,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAChD,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;CAEhD,CAAC,AAIF;;ACjBA,MAAM,MAAM,CAAC;;IAET,WAAW,CAAC,GAAG,CAAC;;QAEZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;KAEzB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACnD,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;;KAE5C;;CAEJ,AAGD;;ACpBA,SAAS,MAAM,CAAC,GAAG,EAAE;;IAEjB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;CAEzB;;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAElE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACtB,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;CAErE,CAAC,AAGF;;ACjBA,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;IAE9C,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;CAExC;;;;AAID,MAAM,KAAK,CAAC;;IAER,WAAW,CAAC,GAAG,CAAC;;QAEZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;KAErB;;;IAGD,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAE/F;;;CAGJ,AAGD,AAAqB;;AC5BrB,SAAS,IAAI,CAAC,GAAG,EAAE;;IAEf,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IACzB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;CAExB;;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACzD,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;CAEnD,CAAC;;AAEF,AAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdpB,MAAM,SAAS,CAAC;;IAEZ,WAAW,EAAE;;QAET,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;KAEzB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,EAAE;YACrC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SACpB;;KAEJ;;CAEJ,AAGD;;ACtBA,MAAM,KAAK,CAAC;;IAER,WAAW,CAAC,CAAC,CAAC;;QAEV,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;KAEhB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG;YACrB,IAAI,CAAC,KAAK,EAAE,CAAC;;QAEjB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAEzC;;IAED,KAAK,EAAE;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;;IAED,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;IAED,OAAO,EAAE;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;CAEJ,AAED;;AClCA,MAAM,MAAM,CAAC;;IAET,WAAW,CAAC,CAAC,CAAC;;QAEV,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;KAEhB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG;YACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;QAEnB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAEzC;;IAED,KAAK,EAAE;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;;IAED,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;IAED,OAAO,EAAE;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;CAEJ,AAED;;ACjCA,MAAM,GAAG,CAAC;;IAEN,WAAW,EAAE;;QAET,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACzB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAEzC;;IAED,KAAK,EAAE;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;;IAED,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;IAED,OAAO,EAAE;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;CAEJ,AAED;;AC/BA,SAASC,WAAS,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;IACnC,OAAO,MAAM,CAAC;CACjB;;AAED,MAAM,KAAK,CAAC;;IAER,WAAW,CAAC,GAAG,CAAC;;QAEZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,IAAIA,WAAS,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;KAEnB;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAEnC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;;QAExB,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACjB,MAAM;YACH,IAAI,MAAM,CAAC,IAAI,GAAG,CAAC;gBACf,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aACpB;SACJ;;QAED,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAEzC;;IAED,KAAK,EAAE;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;;IAED,IAAI,EAAE;QACF,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;IAED,OAAO,EAAE;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;CAEJ,AAED;;AC1CA,SAAS,IAAI,GAAG,EAAE;;AAElB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;IAE7D,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;CAExC,CAAC,AAGF,AAiBoB;;ACfpB;;;;;;;;AAQA,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;AAExB,MAAM,KAAK,GAAG;;IAEV,MAAM,EAAE,SAAS,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;;QAE9C,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;QAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC1C;;KAEJ;;CAEJ,CAAC;;;AAGF,MAAM,OAAO,CAAC;;IAEV,WAAW,CAAC,GAAG,CAAC;;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;;KAEvE;;IAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;QACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;KACvD;;IAED,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;;IAED,GAAG,CAAC,GAAG,EAAE;QACL,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;KACvB;;IAED,GAAG,CAAC,GAAG,EAAE;QACL,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;KACvB;;IAED,MAAM,CAAC,GAAG,EAAE;QACR,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;KAC1B;;IAED,MAAM,CAAC,GAAG,EAAE;QACR,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;KAC1B;;IAED,SAAS,CAAC,GAAG,EAAE;QACX,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;KAC7B;;IAED,KAAK,CAAC,GAAG,EAAE;QACP,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;KACzB;;IAED,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;;IAED,KAAK,CAAC,GAAG,EAAE;QACP,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;KACzB;;IAED,KAAK,CAAC,GAAG,EAAE;QACP,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACjC;;IAED,MAAM,CAAC,GAAG,EAAE;QACR,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAClC;;IAED,GAAG,GAAG;QACF,OAAO,IAAI,GAAG,EAAE,CAAC;KACpB;;;IAGD,KAAK,GAAG;QACJ,OAAO,KAAK,CAAC;KAChB;;;;CAIJ,AAGD;;ACvGA,MAAM,KAAK,CAAC;;IAER,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;;QAElB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;;KAE1B;;;IAGD,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrD,GAAG,CAAC,OAAO;YACP,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;;;QAGtD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC;;;KAGnD;;IAED,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE1B,GAAG,IAAI,CAAC,UAAU;YACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAExD;;IAED,cAAc,CAAC,IAAI,CAAC;;QAEhB,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;;KAEtF;;;IAGD,IAAI,GAAG,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;IAED,IAAI,KAAK,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;IAED,IAAI,OAAO,GAAG;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;IAED,MAAM,CAAC,KAAK,EAAE;;QAEV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;KAE3B;;IAED,OAAO,GAAG;;KAET;;;CAGJ,AAED,AAAqB;;ACxErB,IAAI,GAAG,GAAG,CAAC,CAAC;;;;;;AAMZ,MAAM,IAAI,CAAC;;IAEP,WAAW,CAAC,IAAI,CAAC;;QAEb,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,GAAGD,IAAC,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAGA,IAAC,CAAC,IAAI,CAAC;;KAEtB;;IAED,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;;;YAGnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;KAEvD;;IAED,OAAO,EAAE;;QAEL,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;;KAEJ;;CAEJ;;;AAGD,IAAI,CAAC,YAAY,GAAG,SAAS,KAAK,EAAE,IAAI,CAAC;;IAErC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE5B,MAAM,MAAM,GAAG,SAAS,GAAG,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACpB,CAAC;;IAEF,MAAM,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;;IAEtC,IAAI,CAAC,aAAa,GAAG,UAAU;QAC3B,aAAa,CAAC,EAAE,CAAC,CAAC;KACrB,CAAC;;IAEF,OAAO,IAAI,CAAC;;CAEf,CAAC;;;AAGF,IAAI,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE,IAAI,CAAC;;IAEnC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE5B,MAAM,MAAM,GAAG,SAAS,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACnC,CAAC;;IAEF,IAAI,CAAC,aAAa,GAAG,UAAU;QAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC5B,CAAC;;IAEF,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;IAErB,OAAO,IAAI,CAAC;;CAEf,CAAC;;;;AAIF,IAAI,CAAC,aAAa,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;;IAErD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;;IAMlD,IAAI,CAAC,aAAa,GAAG,UAAU;QAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACjC,CAAC;;IAEF,GAAG,OAAO,CAAC;QACP,IAAI,CAAC,IAAI,GAAG,UAAU;YAClB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACpC,GAAG,OAAO,EAAE;gBACR,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;aACnC;SACJ,CAAA;KACJ;;;IAGD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;IAE5B,OAAO,IAAI,CAAC;;CAEf,CAAC;;;;AAIF,IAAI,CAAC,SAAS,GAAG,SAAS,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC;;IAEpD,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;;IAE1B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;;IAEjC,MAAM,EAAE,GAAG,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,EAAE,CAAC;IACtE,MAAM,GAAG,GAAG,MAAM,CAAC,mBAAmB,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,GAAG,CAAC;;IAE9E,MAAM,MAAM,GAAG,SAAS,GAAG,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;KAC/B,CAAC;;IAEF,IAAI,CAAC,aAAa,GAAG,UAAU;QAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;KACnD,CAAC;;IAEF,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;;IAE/C,OAAO,IAAI,CAAC;;CAEf,CAAC,AAGF;;ACnIA,MAAM,WAAW,CAAC;;IAEd,WAAW,CAAC,GAAG,EAAE;;QAEb,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;;KAElC;;;IAGD,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAEpD;;IAED,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE1B,GAAG,IAAI,CAAC,UAAU;YACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAExD;;IAED,IAAI,GAAG,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;IAED,IAAI,KAAK,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;IAED,IAAI,OAAO,GAAG;QACV,OAAO,KAAK,CAAC;KAChB;;;IAGD,MAAM,CAAC,KAAK,EAAE;;QAEV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;KAE3B;;IAED,OAAO,GAAG;;KAET;;;CAGJ,AAED,AAA2B;;ACjD3B,MAAM,cAAc,CAAC;;IAEjB,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;;QAElB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;;KAEpC;;;IAGD,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC;;KAEzD;;IAED,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE1B,GAAG,IAAI,CAAC,UAAU;YACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAExD;;IAED,IAAI,GAAG,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;IAED,IAAI,KAAK,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;IAED,IAAI,OAAO,GAAG;QACV,OAAO,KAAK,CAAC;KAChB;;IAED,MAAM,CAAC,KAAK,EAAE;;QAEV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;KAE3B;;IAED,OAAO,GAAG;;KAET;;;CAGJ,AAED,AAA8B;;ACvD9B,MAAM,OAAO,CAAC;;IAEV,WAAW,EAAE;;QAET,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;KAErB;;CAEJ,AAGD;;ACbA,MAAM,SAAS,CAAC;;IAEZ,WAAW,CAAC,GAAG,EAAE;;QAEb,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;KAExB;;IAED,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;;QAG5B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxC,GAAG,CAAC,OAAO;;YAEP,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;;QAEvD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;;KAEhE;;IAED,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE1B,GAAG,IAAI,CAAC,UAAU;YACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;KAExD;;IAED,cAAc,CAAC,IAAI,CAAC;;QAEhB,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;;KAEpC;;;IAGD,IAAI,GAAG,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;IAED,IAAI,KAAK,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;IAED,IAAI,OAAO,GAAG;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;IAED,MAAM,CAAC,KAAK,EAAE;;QAEV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;KAE3B;;IAED,OAAO,GAAG;;KAET;;;CAGJ,AAED,AAAyB;;ACpEzB,MAAM,WAAW,CAAC;;IAEd,WAAW,CAAC,GAAG,EAAE;;QAEb,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;;KAEpC;;;;IAID,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;;QAE5B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACjC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC1C;;KAEJ;;IAED,IAAI,GAAG,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;IAED,IAAI,KAAK,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;IAED,IAAI,OAAO,GAAG;QACV,OAAO,KAAK,CAAC;KAChB;;IAED,MAAM,CAAC,KAAK,EAAE;;QAEV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;KAE7B;;IAED,OAAO,GAAG;;KAET;;;CAGJ,AAED,AAA2B;;AChD3B,MAAM,OAAO,CAAC;;IAEV,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;;QAE3C,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;KAEpB;;CAEJ,AAED;;ACbA,MAAM,IAAI,GAAG,EAAE,CAAC;;;;;;AAMhB,MAAM,aAAa,GAAG;;IAElB,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACjF,CAAC,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,GAAG,GAAG,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IACtD,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IACtD,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;IACrD,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACnD,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACnD,CAAC,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACnD,CAAC,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IACjE,CAAC,IAAI,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE;IACxC,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACnE,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE;IACrD,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE;IACxC,CAAC,IAAI,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACtD,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE;;CAE3C,CAAC;;;;;;;;;;;;;;;AAeF,MAAM,kBAAkB,GAAG,EAAE,CAAC;AAC9B,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,MAAM,mBAAmB,GAAG,EAAE,CAAC;AAC/B,MAAM,UAAU,GAAG,EAAE,CAAC;;AAEtB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;;IAEzC,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;IACrB,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;IAEnB,GAAG,GAAG,EAAE;QACJ,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAC7B,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KAC7B;;IAED,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IAC5B,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;;IAE1B,GAAG,EAAE,CAAC,IAAI,CAAC;QACP,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KAC3B;;IAED,GAAG,EAAE,CAAC,KAAK,EAAE;QACT,eAAe,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC7B,mBAAmB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KACpC;;CAEJ;;;;AAID,MAAM,QAAQ,CAAC;;IAEX,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;;QAEtE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,KAAK,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,KAAK,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,GAAG,IAAI,CAAC;;;KAGjE;;CAEJ;;AAED,IAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,SAAS,iBAAiB,CAAC,GAAG,CAAC;;;IAG3B,SAAS,GAAG,EAAE,CAAC;IACf,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAClC,MAAM,QAAQ,GAAG,EAAE,CAAC;;IAEpB,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,MAAM,MAAM,CAAC,MAAM,CAAC;QAChB,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,KAAK,GAAG,CAAC;YACT,OAAO,GAAG,CAAC,OAAO,CAAC;YACnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACpB,MAAM;YACH,GAAG,OAAO,EAAE;gBACR,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrB,MAAM;gBACH,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpB;SACJ;KACJ;;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;IAEjC,OAAO,MAAM,CAAC;CACjB;;AAED,SAAS,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE;;;IAG3B,GAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;;IAE7B,MAAM,SAAS,GAAG,EAAE,CAAC;;;IAGrB,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEtE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;;QAElC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,QAAQ,GAAG,CAAC,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;;QAEnG,GAAG,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC;YAClD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;KAEhC;;IAED,OAAO,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;;CAGzC;;AAED,SAAS,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC;;IAEnC,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,IAAI,WAAW,GAAG,IAAI,CAAC;;IAEvB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACvB,GAAG,OAAO,CAAC,KAAK,QAAQ,EAAE;;YAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,GAAG,WAAW,IAAI,CAAC,SAAS,EAAE;oBAC1B,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBAC5B,WAAW,GAAG,KAAK,CAAC;oBACpB,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;iBACjD;qBACI;oBACD,qBAAqB,CAAC,MAAM,CAAC,CAAC;oBAC9B,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;iBACnD;aACJ;;SAEJ,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;SAChC,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;SAChC,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;SAChC;KACJ;;IAED,OAAO,OAAO,CAAC;CAClB;;;AAGD,SAAS,mBAAmB,CAAC,MAAM,CAAC;;IAEhC,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;;QAElC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACrB,MAAM,SAAS,GAAG,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,IAAI,OAAO,CAAC;QACzD,WAAW,GAAG,WAAW,IAAI,eAAe,CAAC,SAAS,CAAC,CAAC;QACxD,GAAG,CAAC,mBAAmB,CAAC,SAAS,CAAC;YAC9B,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;;KAErE;;IAED,GAAG,CAAC,WAAW;QACX,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;;CAExE;;;;AAID,SAAS,qBAAqB,CAAC,MAAM,CAAC;;IAElC,MAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,cAAc,GAAG,WAAW,CAAC,SAAS,IAAI,MAAM,CAAC;;IAEvD,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;;IAEpD,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;;QAElC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACrB,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,IAAI,cAAc,CAAC;QAC9C,GAAG,EAAE,CAAC,SAAS,KAAK,cAAc,CAAC;;;YAG/B,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;;SAE7E;;KAEJ;;CAEJ;;;;AAID,SAAS,aAAa,CAAC,GAAG,EAAE;;IAExB,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;;QAElC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;KAEvB;;IAED,OAAO,MAAM,CAAC;;CAEjB;;AAED,SAAS,WAAW,CAAC,GAAG,EAAE;;IAEtB,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;IAElE,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;QAE1B,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAE5B,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,QAAQ,GAAG,KAAK,CAAC;;;;QAIrB,MAAM,SAAS,CAAC,MAAM,CAAC;YACnB,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,GAAG,IAAI,KAAK,GAAG,CAAC;gBACZ,QAAQ,GAAG,CAAC,QAAQ,CAAC;gBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrB,MAAM;gBACH,GAAG,CAAC,QAAQ,CAAC;oBACT,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;oBAC5B,GAAG,OAAO;wBACN,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B,MAAM;oBACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACrB;aACJ;SACJ;;;QAGD,MAAM,gBAAgB,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QACxC,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;QAChC,MAAM,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAG,EAAE,CAAC;;;;QAIpB,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,GAAG,KAAK,CAAC;;QAEjB,GAAG,SAAS,KAAK,OAAO,CAAC;YACrB,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YACvB,MAAM,CAAC,KAAK,EAAE,CAAC;SAClB,MAAM,IAAI,SAAS,KAAK,QAAQ,CAAC;gBAC1B,MAAM,CAAC,KAAK,EAAE,CAAC;;gBAEf,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;gBAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC5B,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;oBACT,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB,MAAM;oBACH,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAChC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;wBACf,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACpC;iBACJ;;YAEL,MAAM,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;SAC1C;;QAED,MAAM,MAAM,CAAC,MAAM,CAAC;;YAEhB,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;;YAEzB,OAAO,CAAC;;gBAEJ,KAAK,GAAG;;oBAEJ,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;;oBAE5D,GAAG,IAAI,EAAE;wBACL,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;wBACpD,MAAM,CAAC,KAAK,EAAE,CAAC;wBACf,GAAG,UAAU;4BACT,MAAM,CAAC,KAAK,EAAE,CAAC;qBACtB;;oBAED,MAAM;;gBAEV,KAAK,GAAG;;oBAEJ,KAAK,GAAG,IAAI,CAAC;oBACb,MAAM;;gBAEV,KAAK,GAAG;;oBAEJ,IAAI,GAAG,IAAI,CAAC;oBACZ,MAAM;;gBAEV,KAAK,GAAG;;oBAEJ,GAAG,MAAM,CAAC,MAAM,CAAC;wBACb,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBACvB,GAAG,IAAI,KAAK,GAAG,CAAC;4BACZ,OAAO,GAAG,IAAI,CAAC;yBAClB,MAAM;4BACH,KAAK,GAAG,IAAI,CAAC;4BACb,MAAM,CAAC,KAAK,EAAE,CAAC;yBAClB;qBACJ,MAAM;wBACH,OAAO,GAAG,IAAI,CAAC;qBAClB;;oBAED,MAAM;;gBAEV,KAAK,GAAG;;oBAEJ,GAAG,MAAM,CAAC,MAAM,CAAC;wBACb,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;qBAC1B;;oBAED,MAAM;;;;aAIb;;SAEJ;;QAED,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC;QAC/B,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACvF,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;KAElB;;IAED,OAAO,KAAK,CAAC;;CAEhB;;AAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,AAGnB,AAAoB;;AC7XpB,SAAS,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC;;IAEvC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,OAAO,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;;CAEhC;;AAED,SAAS,UAAU,CAAC,GAAG,CAAC;IACpB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAC9B,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACrB,MAAM,CAAC,CAAC;CACX;;AAED,SAAS,mBAAmB,CAAC,KAAK,CAAC;;IAE/B,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;;IAEzB,OAAO,SAAS,gBAAgB,CAAC,GAAG,EAAE;;QAElC,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC;gBAC3D,IAAI,GAAG,IAAI,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;SAC7B;;QAED,OAAO,IAAI,CAAC;;KAEf,CAAC;CACL;;;AAGD,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC;;IAE5B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;IAEhD,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;QACzB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B,CAAC;;CAEL;;;AAGD,SAAS,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC;;IAE9B,MAAM,WAAW,GAAG,EAAE,CAAC;IACvB,MAAM,WAAW,GAAG,EAAE,CAAC;;IAEvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;;IAE1B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;;QAExB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,GAAG,IAAI,EAAE;YACL,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC/B,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;SAClC;;KAEJ;;IAED,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;;QAEzB,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;;YAEnB,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;YAChC,GAAG,IAAI,EAAE;gBACL,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;gBAChC,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACzC;;SAEJ;;QAED,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC;;YAEnB,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;YAChC,GAAG,IAAI,EAAE;gBACL,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5B;;SAEJ;;;KAGJ,CAAC;;;CAGL;;;AAGD,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC;;IAE7B,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAC1B,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;IAE5B,GAAG,GAAG,GAAG,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE;QAC7B,OAAO,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAC3C,MAAM;QACH,OAAO,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;KAC5C;;CAEJ;;;AAGD,SAAS,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE;;IAE7B,OAAO,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;;CAEjD;;;AAGD,SAAS,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE;;IAElC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;IAEzB,OAAO,SAAS,YAAY,GAAG;;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;KAE3B,CAAC;;CAEL;;;AAGD,SAAS,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC;;;QAGjD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;;;QAG1B,OAAO,SAAS,cAAc,CAAC,GAAG,EAAE,MAAM,EAAE;;YAExC,MAAM,MAAM,GAAG,EAAE,CAAC;;YAElB,GAAG,cAAc,CAAC;;gBAEd,GAAG,MAAM,CAAC;oBACN,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;iBACxB,MAAM;oBACH,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;wBACjB,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;qBACtB;iBACJ;aACJ;;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;gBAEvB,GAAG,IAAI,CAAC,OAAO,CAAC;;oBAEZ,MAAM,MAAM,GAAG,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBAClD,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC;wBAC7B,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;qBACvB;;iBAEJ,MAAM;;oBAEH,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAChD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;oBACnF,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;wBACxB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;iBAE5C;;aAEJ;;YAED,OAAO,MAAM,CAAC;;SAEjB,CAAC;;CAET;;;;;;AAMD,SAAS,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;;IAEvC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,GAAG,IAAI,CAAC,OAAO,CAAC;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACtD,MAAM;QACH,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACpE;;CAEJ;;AAED,SAAS,QAAQ,CAAC,CAAC,EAAE;IACjB,IAAI,CAAC,KAAK,IAAI;QACV,OAAO,KAAK,CAAC;IACjB,OAAO,CAAC,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;CAC/D;;;AAGD,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC;;IAE/B,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;CAE1E;;AAED,SAAS,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE;;IAEjC,IAAI,MAAM,GAAG,KAAK,CAAC;IACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC1B,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAClB,GAAG,OAAO,CAAC,UAAU;gBACjB,OAAO,SAAS,CAAC;;YAErB,UAAU,CAAC,2BAA2B,GAAG,OAAO,CAAC,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC;;SAE9E;QACD,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACjC;;;IAGD,OAAO,MAAM,CAAC;;CAEjB;;AAED,SAAS,aAAa,CAAC,MAAM,CAAC;IAC1B,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;CAC7E;;AAED,SAAS,mBAAmB,CAAC,KAAK,EAAE;;IAEhC,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACzB,MAAM,eAAe,GAAG,EAAE,CAAC;;IAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;QAE1B,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;;KAE/C;;IAED,OAAO,SAAS,GAAG,EAAE;;QAEjB,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,MAAM,KAAK,IAAI,eAAe,CAAC;YAC/B,MAAM,OAAO,GAAG,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC1C,GAAG,OAAO,CAAC;gBACP,MAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aAClE;SACJ;;QAED,OAAO,MAAM,CAAC;;KAEjB,CAAC;;CAEL;;AAED,SAAS,eAAe,CAAC,IAAI,EAAE;;IAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;IAE/B,OAAO,SAAS,GAAG,CAAC;QAChB,OAAO,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;KACpC;;CAEJ;;;AAGD,SAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE;;IAE/C,MAAM,IAAI,GAAG,EAAE,CAAC;IAChB,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,MAAM,QAAQ,GAAG,EAAE,CAAC;;IAEpB,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,QAAQ,CAAC;QACvD,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAC1C,OAAO;KACV;;IAED,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;;QAElC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;QAEjC,GAAG,SAAS,KAAK,OAAO,EAAE;YACtB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YACzC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SAC7B;aACI,GAAG,SAAS,KAAK,MAAM,CAAC;YACzB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SAC5C;aACI,GAAG,SAAS,KAAK,OAAO,EAAE;YAC3B,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;SACxC;;QAED,GAAG,IAAI,CAAC,QAAQ;YACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAExB,GAAG,IAAI,CAAC,IAAI;YACR,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;KAE7B;;;;IAID,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;;QAEtB,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;;QAE5B,GAAG,QAAQ,CAAC,MAAM;YACd,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAE3C,GAAG,IAAI,CAAC,MAAM;YACV,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;QAEtB,GAAG,SAAS,CAAC,MAAM,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9C;;KAEJ,MAAM;;QAEH,GAAG,QAAQ,CAAC,MAAM;YACd,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE1C,GAAG,SAAS,CAAC,MAAM;YACf,GAAG,CAAC,SAAS,EAAE,CAAC;;KAEvB;;CAEJ;;AAED,SAAS,QAAQ,CAAC,GAAG,CAAC;IAClB,OAAO,CAAC,CAAC,GAAG,CAAC;CAChB;;AAED,SAAS,QAAQ,CAAC,GAAG,CAAC;IAClB,OAAO,CAAC,GAAG,CAAC;CACf;;;AAGD,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE;;IAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEhC,OAAO,MAAM;;QAET,KAAK,MAAM;YACP,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACd,MAAM;;QAEV,KAAK,OAAO;YACR,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACf,MAAM;;QAEV,KAAK,MAAM;YACP,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACd,MAAM;;QAEV,KAAK,WAAW;YACZ,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACnB,MAAM;;QAEV,KAAK,OAAO;YACR,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACZ,MAAM;;QAEV,KAAK,QAAQ;YACT,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACZ,MAAM;;QAEV,KAAK,QAAQ;YACT,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACrB,MAAM;;QAEV,KAAK,QAAQ;YACT,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACrB,MAAM;;QAEV,KAAK,QAAQ;YACT,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM;;;;KAIb;;CAEJ;;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;;IAErD,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;;IAEtC,GAAG,SAAS,KAAK,MAAM,EAAE;QACrB,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;QACpC,GAAG,KAAK,CAAC,MAAM;YACX,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC3B,MAAM,IAAI,SAAS,KAAK,KAAK,EAAE;QAC5B,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QACjC,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,KAAK,CAAC,MAAM;YACZ,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC3B,MAAM,IAAI,SAAS,KAAK,QAAQ,EAAE;QAC/B,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B,MAAM,IAAI,SAAS,KAAK,QAAQ,EAAE;QAC/B,kBAAkB,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;KAC5C,MAAM,IAAI,SAAS,KAAK,KAAK,EAAE;QAC5B,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;KACzC,MAAM,IAAI,SAAS,KAAK,OAAO,EAAE;QAC9B,kBAAkB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC,MAAM,IAAI,SAAS,KAAK,OAAO,EAAE;QAC9B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACzC,MAAM,IAAI,SAAS,KAAK,OAAO,EAAE;QAC9B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;;KAEtC;;CAEJ;;;;AAID,SAAS,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC;;IAE1C,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;;IAE1B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;QAEzB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;QAE7B,MAAM,CAAC,GAAG,UAAU,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;YACpC,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACnD,CAAC;;QAEF,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;KAEd;;CAEJ;;;AAGD,AAoBA,SAAS,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC;;IAElC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;CAE1B;;;AAGD,SAAS,kBAAkB,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC;;IAE7C,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;;IAE1B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;QAEzB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;QAE7B,MAAM,CAAC,GAAG,UAAU,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;YACpC,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACnD,CAAC;;QAEF,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;KAEjB;;CAEJ;;AAED,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;;IAE5C,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;IACzB,OAAO,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;CAEhD;;AAED,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC;;IAE1C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACxB,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IACxB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;;QAExB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;;QAE1B,GAAG,IAAI,KAAK,MAAM,EAAE;;YAEhB,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACjB,GAAG,CAAC,KAAK,EAAE,CAAC;YACZ,GAAG,CAAC,KAAK,EAAE,CAAC;;SAEf,MAAM,GAAG,IAAI,KAAK,MAAM,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;SACpB,MAAM,IAAI,IAAI,KAAK,MAAM,CAAC;YACvB,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;SACpB,MAAM;;YAEH,GAAG,IAAI,KAAK,SAAS;gBACjB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;gBAElD,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;SAEjD;KACJ;;IAED,OAAO,GAAG,CAAC;;CAEd;;AAED,MAAM,UAAU,GAAG;IACf,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;CACvB,CAAC,AAGF;;ACphBA,MAAM,GAAG,CAAC;;IAEN,WAAW,CAAC,KAAK,EAAE;;QAEf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;QAEpB,GAAG,KAAK;YACJ,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAE9B,MAAM,CAAC,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;;KAE1B;;IAED,IAAI,QAAQ,EAAE;;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;;KAEvC;;IAED,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;IAErC,IAAI,MAAM,CAAC,SAAS,CAAC;;QAEjB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE9B,GAAG,SAAS,KAAK,SAAS;YACtB,OAAO;;QAEX,GAAG,SAAS,EAAE;YACV,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5C,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpC;;QAED,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;QAEzB,GAAG,SAAS,EAAE;YACV,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;;QAED,OAAO,IAAI,CAAC;;KAEf;;IAED,IAAI,IAAI,GAAG;QACP,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;IAED,IAAI,OAAO,GAAG;QACV,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;KACtC;;IAED,IAAI,KAAK,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;IAID,QAAQ,CAAC,GAAG,EAAE;;QAEV,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACpH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,SAAS,CAAC;;KAEpB;;IAED,YAAY,GAAG;;QAEX,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,SAAS,CAAC;;KAEpB;;;IAGD,cAAc,GAAG;;QAEb,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,SAAS,CAAC;;KAEpB;;IAED,cAAc,GAAG;;QAEb,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,SAAS,CAAC;;KAEpB;;;IAGD,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC;;QAE1B,GAAG,OAAO,IAAI,KAAK,QAAQ;YACvB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;QAElC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;;KAEf;;;IAGD,KAAK,EAAE;;KAEN;;;IAGD,IAAI,GAAG;;QAEHA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;QAE9C,OAAO,IAAI,CAAC;KACf;;IAED,IAAI,GAAG;;QAEH,GAAG,CAAC,IAAI,CAAC,OAAO;YACZ,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC;;KAEtB;;IAED,IAAI,GAAG;;QAEH,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC3B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjB,OAAO,MAAM,CAAC;;KAEjB;;IAED,GAAG,CAAC,GAAG,EAAE;;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;;KAEf;;IAED,KAAK,GAAG;QACJ,OAAO,IAAI,CAAC,KAAK,CAACA,IAAC,CAAC,aAAa,CAAC,CAAC;KACtC;;IAED,KAAK,GAAG;QACJ,OAAO,IAAI,CAAC,KAAK,CAACA,IAAC,CAAC,aAAa,CAAC,CAAC;KACtC;;IAED,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,KAAK,CAACA,IAAC,CAAC,YAAY,CAAC,CAAC;KACrC;;IAED,QAAQ,CAAC,IAAI,EAAE;QACX,OAAO,IAAI,CAAC,KAAK,CAACA,IAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;KAC/C;;IAED,IAAI,GAAG;;QAEHA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;;KAEf;;IAED,IAAI,GAAG;;QAEH,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;;QAE/B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACzB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;;QAED,OAAO,IAAI,CAAC;;KAEf;;IAED,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE;;QAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;KAE1B;;IAED,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;;QAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;KAE1B;;IAED,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC;;QAEjB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;KAE1B;;IAED,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE;;QAEpB,IAAI,CAAC,MAAM,GAAG,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;;KAEf;;IAED,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;;QAEf,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAEvB,OAAO,IAAI,CAAC;;KAEf;;;IAGD,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;QAEZ,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC;SACf;;QAED,OAAO,IAAI,CAAC,MAAM,CAACA,IAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;KAE7C;;;;IAID,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;;QAEb,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACf;;QAED,OAAO,IAAI,CAAC,MAAM,CAACA,IAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;KAE7C;;;IAGD,KAAK,CAAC,IAAI,EAAE;;QAERA,IAAC,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACtCA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,OAAO,EAAEA,IAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC;;KAEf;;IAED,SAAS,EAAE;;QAEPA,IAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,KAAK,CAACA,IAAC,CAAC,aAAa,CAAC,CAAC;;KAEtC;;IAED,QAAQ,CAAC,IAAI,EAAE;;QAEX,OAAO,IAAI,CAAC,IAAI,CAACA,IAAC,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;KAE/C;;IAED,KAAK,CAAC,EAAE,EAAE;;QAEN,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;aACb,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aAChD,OAAO,IAAI,CAAC;SAChB;QACD,IAAI,CAAC,MAAM,CAACA,IAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;;KAEf;;IAED,YAAY,GAAG;;QAEXA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAACA,IAAC,CAAC,QAAQ,EAAEA,IAAC,CAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;KACf;;IAED,GAAG,GAAG;QACF,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAC9C,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,MAAM,CAACA,IAAC,CAAC,UAAU,CAAC,CAAC;KACpC;;IAED,KAAK,CAAC,CAAC,EAAE;QACL,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,MAAM,CAACA,IAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;KACzC;;IAED,IAAI,CAAC,CAAC,EAAE;QACJ,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,MAAM,CAACA,IAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACxC;;IAED,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;KACrD;;IAED,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE;;QAErB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,GAAG,CAAC,OAAO,CAAC;;YAER,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;SAE7D,MAAM;;YAEH,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;YACjC,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;YAC9B,GAAG,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;;SAEvC;;QAED,OAAO,IAAI,CAAC;;KAEf;;IAED,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE;;QAE9B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,MAAM,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACjE,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;QAC9B,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;;QAEpC,OAAO,IAAI,CAAC;;KAEf;;IAED,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE;;QAEpB,IAAI,CAAC,OAAO;YACR,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;YAC1C,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAACA,IAAC,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,KAAK,CAACA,IAAC,CAAC,YAAY,CAAC,CAAC;QAC5F,OAAO,IAAI,CAAC;;KAEf;;IAED,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE;;QAE7B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;QAE7B,GAAG,CAAC,OAAO,CAAC;;YAER,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;SAEpE,MAAM;;YAEH,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;YACjC,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;YAC9B,GAAG,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;;SAE3C;;QAED,OAAO,IAAI,CAAC;;KAEf;;IAED,GAAG,CAAC,IAAI,EAAE;;QAENA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3BA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;;KAEf;;IAED,KAAK,GAAG;;QAEJA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC;KACf;;IAED,GAAG,CAAC,IAAI,EAAE;;QAENA,IAAC,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACtCA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,KAAK,EAAEA,IAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;;KAEf;;;IAGD,MAAM,CAAC,IAAI,EAAE;;QAETA,IAAC,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACtCA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAEA,IAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC;;KAEf;;;IAGD,MAAM,CAAC,IAAI,EAAE;;QAETA,IAAC,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACtCA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3BA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;;;KAGf;;IAED,KAAK,GAAG;;QAEJA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;;KAEf;;IAED,OAAO,CAAC,IAAI,EAAE;;QAEVA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAEA,IAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC;;KAEf;;IAED,SAAS,GAAG;;QAERA,IAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;QAE3B,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;;KAEf;;IAED,QAAQ,GAAG;;KAEV;;IAED,OAAO,GAAG;;QAEN,IAAI,IAAI,CAAC,IAAI;YACT,OAAO,IAAI,CAAC;;QAEhB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;QAElB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAO,IAAI,CAAC;;KAEf;;CAEJ,AAID,AAAmB;;ACnfnB,IAAI,SAAS,GAAG,CAAC,CAAC;;AAElB,SAAS,YAAY,CAAC,GAAG,CAAC;;IAEtB,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IACvB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;QACxB,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;;CAEJ;;;AAGD,MAAM,KAAK;;IAEP,WAAW,CAAC,IAAI,EAAE;;QAEd,IAAI,CAAC,GAAG,GAAG,EAAE,SAAS,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;KAEtB;;IAED,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;;IAEjC,IAAI,QAAQ,EAAE;;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;;KAEvC;;IAED,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC;;QAEzB,GAAG,CAAC,SAAS;YACT,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;;QAEzB,MAAM,IAAI,GAAG,CAAC,OAAO,SAAS,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;;KAE1D;;;IAGD,KAAK,EAAE;;QAEH,GAAG,IAAI,CAAC,KAAK;YACT,OAAO;;QAEX,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;;QAEtC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;;KAEzB;;IAED,OAAO,EAAE;;QAEL,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;KAErB;;IAED,WAAW,CAAC,IAAI,CAAC;;QAEb,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,OAAO,KAAK,CAAC;;KAEhB;;IAED,YAAY,CAAC,SAAS,CAAC;;QAEnB,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,OAAO,IAAI,CAAC;;KAEf;;IAED,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;IAErC,IAAI,MAAM,CAAC,SAAS,CAAC;;QAEjB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;;QAE9B,GAAG,SAAS,KAAK,SAAS;YACtB,OAAO;;QAEX,GAAG,SAAS,EAAE;YACV,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5C,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpC;;QAED,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;QAEzB,GAAG,SAAS,EAAE;YACV,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;;QAED,OAAO,IAAI,CAAC;;KAEf;;IAED,IAAI,MAAM,CAAC,IAAI,CAAC;;QAEZ,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAChC;;KAEJ;;IAED,IAAI,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;;IAGtD,aAAa,CAAC,IAAI,CAAC;;QAEf,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrC,OAAO,MAAM,CAAC;;KAEjB;;IAED,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC;;QAEnB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5B,OAAO,CAAC,CAAC;;KAEZ;;;IAGD,IAAI,CAAC,IAAI,CAAC;;QAEN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;;KAErE;;;IAGD,MAAM,CAAC,IAAI,CAAC;;QAER,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAE1B,GAAG,CAAC;YACA,OAAO,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;QAEvC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;;KAEpD;;;IAGD,KAAK,CAAC,IAAI,CAAC;;QAEP,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAE1B,GAAG,CAAC;YACA,OAAO,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,KAAK,CAAC;;KAEhB;;;IAGD,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC;;;QAGxB,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,MAAM,IAAI,IAAI,KAAK,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC5C;;QAED,OAAO,MAAM,CAAC;;KAEjB;;IAED,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC;;QAExB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,EAAE,CAAC;;QAElB,IAAI,MAAM,CAAC,IAAI,OAAO,EAAE;YACpB,IAAI,CAAC,EAAE;;gBAEH,IAAI,CAAC,CAAC,OAAO,EAAE;oBACX,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;aACjC;SACJ;;QAED,OAAO,MAAM,CAAC;KACjB;;;;;IAKD,OAAO,EAAE;;QAEL,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,MAAM,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;QACzB,MAAM,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;;QAEhC,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC1B;;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;;YAExB,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;YACjC,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7B,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;;YAE/B,GAAG,CAAC,QAAQ,CAAC,IAAI;gBACb,SAAS;;;;YAIb,GAAG,MAAM,CAAC,IAAI,CAAC;gBACX,GAAG,aAAa,CAAC,IAAI,EAAE;oBACnB,KAAK,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,EAAE;wBACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;4BACf,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;qBACjC;iBACJ,MAAM;oBACH,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;wBACzC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;qBACjC;iBACJ;aACJ;;YAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,GAAG,aAAa,GAAG,QAAQ,CAAC;;YAEhE,IAAI,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE;gBAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;;oBAElB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnD,IAAI,IAAI;wBACJ,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;iBAC7B;aACJ;;SAEJ;;QAED,OAAO,MAAM,CAAC;;KAEjB;;;IAGD,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;;QAEhB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,GAAG,SAAS;YACR,OAAO,SAAS,CAAC;;QAErB,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;;YAExB,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;;;YAG7B,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM;aACT;;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;YAExC,GAAG,MAAM;gBACL,OAAO,MAAM,CAAC;;YAElB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAE3B,GAAG,CAAC;gBACA,OAAO,CAAC,CAAC;;SAEhB;;QAED,GAAG,QAAQ;YACP,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC;;QAE9D,OAAO,IAAI,CAAC;;KAEf;;IAED,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC;;QAErB,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,GAAG,SAAS;YACR,UAAU,GAAG,IAAI,CAAC;;QAEtB,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;;YAExB,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;;;YAG7B,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM;aACT;;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;YAExC,GAAG,MAAM,EAAE;;gBAEP,GAAG,UAAU;oBACT,OAAO,MAAM,CAAC;;gBAElB,UAAU,GAAG,IAAI,CAAC;gBAClB,SAAS;aACZ;;YAED,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAE3B,GAAG,CAAC,EAAE;;gBAEF,GAAG,UAAU;oBACT,OAAO,CAAC,CAAC;;gBAEb,UAAU,GAAG,IAAI,CAAC;aACrB;;SAEJ;;QAED,GAAG,QAAQ;YACP,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC;;QAE9D,OAAO,IAAI,CAAC;;KAEf;;IAED,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE;;QAEjB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;QAEtC,GAAG,CAAC,IAAI,IAAI,QAAQ;YAChB,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC;;QAE9D,OAAO,IAAI,IAAI,IAAI,CAAC;;KAEvB;;IAED,WAAW,CAAC,MAAM,CAAC;;QAEf,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;aACpC,GAAG,OAAO,MAAM,KAAK,QAAQ;YAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;;QAExC,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;;KAEvE;;;IAGD,gBAAgB,CAAC,UAAU,CAAC;;QAExB,MAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC;YACtB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;;QAED,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;YAChB,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACtB;;QAED,OAAO,IAAI,CAAC;;KAEf;;;;IAID,eAAe,CAAC,SAAS,CAAC;;QAEtB,MAAM,IAAI,GAAG,EAAE,CAAC;;QAEhB,IAAI,MAAM,CAAC,IAAI,SAAS,CAAC;YACrB,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;;QAED,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;YAChB,CAAC,CAAC,OAAO,EAAE,CAAC;SACf;;QAED,OAAO,IAAI,CAAC;;KAEf;;CAEJ,AAED,AAAqB;;AC7ZrB,MAAMD,QAAM,GAAG,EAAE,CAAC;;AAElB,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,IAAI,OAAO,GAAG,KAAK,CAAC;;AAEpBA,QAAM,CAAC,GAAG,GAAG,UAAU;IACnB,OAAO,IAAI,GAAG,EAAE,CAAC;CACpB,CAAC;;;AAGFA,QAAM,CAAC,SAAS,GAAG,SAAS,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC;;IAEtD,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IACtB,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACzC,OAAO,GAAG,CAAC;;CAEd,CAAC;;;;AAIFA,QAAM,CAAC,OAAO,GAAG,SAAS,IAAI,CAAC;;IAE3B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAEvB,GAAG,CAAC,OAAO,EAAE;QACT,OAAO,GAAG,IAAI,CAAC;QACf,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,qBAAqB,EAAE,qBAAqB,CAACA,QAAM,CAAC,KAAK,CAAC,CAAC;aAClG,OAAO,CAAC,QAAQ,CAACA,QAAM,CAAC,KAAK,CAAC,CAAC;KACvC;;CAEJ,CAAC;;;AAGFA,QAAM,CAAC,WAAW,GAAGA,QAAM,CAAC,KAAK,GAAG,SAAS,IAAI,CAAC;;IAE9C,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;;CAE1B,CAAC;;;AAGFA,QAAM,CAAC,KAAK,GAAG,UAAU;;IAErB,OAAO,GAAG,KAAK,CAAC;;IAEhB,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,CAAC,GAAG,WAAW,CAAC;IACpB,WAAW,GAAG,EAAE,CAAC;;IAEjB,MAAM,CAAC,CAAC,MAAM,EAAE;;QAEZ,OAAO,CAAC,CAAC,MAAM,EAAE;YACb,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;;QAED,CAAC,GAAG,WAAW,CAAC;QAChB,WAAW,GAAG,EAAE,CAAC;;QAEjB,MAAM,EAAE,CAAC;QACT,GAAG,MAAM,GAAG,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC;;KAE5D;;CAEJ,CAAC,AAIF,AAAsB;;ACrEtB;;;,;;,;;"}
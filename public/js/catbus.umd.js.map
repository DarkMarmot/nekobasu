{"version":3,"file":"catbus.umd.js","sources":["../src/flib.js","../src/packet.js","../src/dataTypes.js","../src/subscriberList.js","../src/data.js","../src/poolAspects.js","../src/frame.js","../src/pool.js","../src/stream.js","../src/bus.js","../src/nyan.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(){\n        const pool = this;\n        return function() {\n            Catbus.enqueue(pool);\n        }\n    },\n\n    getSyncTimer: function(){\n        const pool = this;\n        return function() {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        const pool = this;\n        return function() {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    tell(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.tell(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._noTopicSubscriberList = new SubscriberList(null, this);\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.tell(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        const subscriberList = (!topic) ? this._noTopicSubscriberList : this._demandSubscriberList(topic);\n        subscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(typeof topic !== 'string'){\n            this._noTopicSubscriberList.remove(watcher);\n        } else {\n            let subscriberList = this._demandSubscriberList(topic);\n            subscriberList.remove(watcher);\n        }\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        let subscriberList = topic ? this._subscriberListsByTopic.get(topic) : this._noTopicSubscriberList;\n        if(!subscriberList)\n            return null;\n        return subscriberList.lastPacket;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        if(topic) {\n            let list = this._demandSubscriberList(topic);\n            list.tell(msg);\n        }\n        else {\n            this._noTopicSubscriberList.tell(msg, null, silently);\n        }\n\n        this._wildcardSubscriberList.tell(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(this.read(topic), topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nclass PoolAspects {\n\n    constructor() {\n\n        this.until      = null;\n        this.reduce     = null;\n        this.when       = null;\n        this.clear      = null;\n        this.timer      = null;\n\n    };\n\n}\n\nexport default PoolAspects;\n\n//\n// this._keep = null; // pool storage\n// this._until = null; // stream end lifecycle -- todo switch until to when in current setup\n// this._timer = null; // release from pool timer\n// this._clear = false; // condition to clear storage on release\n// this._when = false; // invokes timer for release\n","import F from './flib.js';\nimport PoolAspects from './poolAspects.js';\n\n\nclass Frame {\n\n    constructor(bus, streams) {\n\n        streams = streams || [];\n        this._bus = bus;\n        this._index = bus._frames.length;\n        this._holding = false; //begins group, keep, schedule frames\n        this._streams = streams;\n\n        this._process = null; // name of sync process method in streams\n        this._action = null; // function defining sync stream action\n        this._isFactory = false; // whether sync action is a stateful factory function\n\n        this._poolAspects = null;\n\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].debugFrame = this;\n        }\n\n    };\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    get streams() {\n        return [].concat(this._streams);\n    }\n\n    applySyncProcess(name, action, isFactory){ // generate means action function must be called to generate stateful action\n\n        this._process = name;\n        this._action = action;\n        this._isFactory = isFactory;\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        if(isFactory) {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action();\n                s.processMethod = s[name];\n            }\n        } else {\n            for (let i = 0; i < len; i++) {\n                const s = streams[i];\n                s.actionMethod = action;\n                s.processMethod = s[name];\n            }\n        }\n\n        return this;\n\n    };\n\n    hold(){\n\n        this._holding = true;\n        this._poolAspects = new PoolAspects();\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n            const s = streams[i];\n            s.createPool();\n            s.processMethod = s.doPool;\n        }\n\n        return this;\n\n    };\n\n    run(func, stateful){\n        return this.applySyncProcess('doRun', func, stateful);\n    };\n\n    msg(fAny, stateful){\n        return this.applySyncProcess('doMsg', F.FUNCTOR(fAny), stateful);\n    };\n\n\n    transform(fAny, stateful){\n        return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    };\n\n    source(fStr, stateful){\n        return this.applySyncProcess('doSource', F.FUNCTOR(fStr), stateful);\n    };\n\n    delay(fNum, stateful){\n        return this.applySyncProcess('doDelay', F.FUNCTOR(fNum), stateful);\n    };\n\n    filter(func, stateful){\n        return this.applySyncProcess('doFilter', func, stateful);\n    };\n\n    skipDupes() {\n        return this.applySyncProcess('doFilter', F.getSkipDupes, true);\n    };\n\n    clear(factory, ...args){\n        return this.buildPoolAspect('clear', factory, ...args);\n    };\n\n    // factory should define content and reset methods have signature f(msg, source) return f.content()\n\n    reduce(factory, ...args){\n        return this.buildPoolAspect('keep', factory, ...args);\n    };\n\n    timer(factory, ...args){\n        return this.buildPoolAspect('timer', factory, ...args);\n    };\n\n    when(factory, ...args){\n        return this.buildPoolAspect('when', factory, ...args);\n    };\n\n    until(factory, ...args){\n        return this.buildPoolAspect('until', factory, ...args);\n    };\n\n    buildPoolAspect(aspect, factory, ...args){\n\n        if(aspect === 'timer')\n            this._holding = false;\n\n        this._poolAspects[aspect] = [factory, ...args];\n\n        const streams = this._streams;\n        const len = streams.length;\n\n        for(let i = 0; i < len; i++){\n\n            const s = streams[i];\n            const pool = s.pool;\n            pool.build(aspect, factory, ...args);\n\n        }\n\n        return this;\n\n    };\n\n    destroy(){\n\n        const streams = this._streams;\n        const len = streams.length;\n        for(let i = 0; i < len; i++){\n            streams[i].cleanupMethod();\n        }\n        this._streams = null;\n\n    };\n    \n}\n\nexport default Frame;\n\n\n","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(stream){\n\n        this.stream = stream;\n\n        this.keep = null;\n        this.when = F.ALWAYS_TRUE;\n        this.until = F.ALWAYS_TRUE;\n        this.timer = null; // throttle, debounce, defer, batch, sync\n        this.clear = F.ALWAYS_FALSE;\n        this.isPrimed = false;\n        this.source = stream.name;\n\n    };\n\n    tell(msg, source) {\n\n        this.keep(msg, source);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.stream.emit(msg, pool.stream.name);\n\n    };\n\n}\n\n\n\nexport default Pool;","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.debugFrame = null;\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    tell(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, source); // tell method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, topic, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.tell(msg, source, topic);\n        }\n\n    };\n\n    doFilter(msg, source, topic) {\n\n        if(!this.actionMethod(msg, source, topic))\n            return;\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doMsg(msg, source, topic) {\n\n        msg = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    doTransform(msg, source, topic) {\n\n\n        msg = this.actionMethod.msg ? this.actionMethod.msg(msg, source, topic) : msg;\n        source = this.actionMethod.source ? this.actionMethod.source(msg, source, topic) : source;\n        topic = this.actionMethod.topic ? this.actionMethod.topic(msg, source, topic) : topic;\n        this.emit(msg, source, topic);\n\n    };\n\n    doDelay(msg, source, topic) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod(msg, source, topic) || 0, msg, source, topic, this);\n\n    };\n\n    doSource(msg, source, topic) {\n\n        source = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doRun(msg, source, topic) {\n\n        this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source, topic) {\n\n        this.pool.tell(msg, source, topic);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\nStream.fromMonitor = function(data, name){\n\n    const stream = new Stream();\n    const streamName = name || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.tell(msg, streamName || source, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream);\n    };\n\n    data.monitor(toStream);\n\n    return stream;\n\n};\n\n\nStream.fromSubscribe = function(data, topic, name){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.tell(msg, streamName || source, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    data.subscribe(toStream, topic);\n\n    return stream;\n\n};\n\n\nStream.fromFollow = function(data, topic, name){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.tell(msg, streamName || source, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    data.follow(toStream, topic);\n\n    return stream;\n\n};\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.tell(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Stream from './stream.js';\n\n\nclass Bus {\n\n    constructor(scope, streams) {\n\n        this._frames = [];\n        this._dead = false;\n        this._scope = scope;\n        if(scope)\n            scope._busList.push(this);\n        const f = new Frame(this, streams || []);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame(streams) {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, streams);\n        this._frames.push(nextFrame);\n\n        _wireFrames(lastFrame, nextFrame);\n\n        return nextFrame;\n    };\n\n\n\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, wiring prior streams, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        _wireFrames(this._currentFrame, fork._currentFrame);\n\n        return fork;\n    };\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        _wireFrames(bus._currentFrame, frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    scan(func, seed){\n        return this.reduce(F.getScan, func, seed);\n    };\n\n    delay(num) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n        F.ASSERT_IS_HOLDING(this);\n        return this.when(F.getWhenKeys, keys);\n    };\n\n    group(by) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, by);\n        return this;\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.reduce(factory, ...args) :\n            this.addFrame().hold().reduce(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    timer(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.timer(factory, ...args) :\n            this.addFrame().hold().timer(factory, ...args);\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.when(factory, ...args) :\n            this.addFrame().hold().when(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().run(func);\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.addTarget(mergedStream);\n        }\n\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().msg(fAny);\n        return this;\n\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().source(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().filter(func);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().skipDupes();\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const frames = this._frames;\n\n        for (const f of frames) {\n            f.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n// send messages from streams in one frame to new empty streams in another frame\n// injects new streams to frame 2\n\nfunction _wireFrames(frame1, frame2) {\n\n    const streams1 = frame1._streams;\n    const streams2 = frame2._streams;\n\n    const len = streams1.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const s1 = streams1[i];\n        const s2 = new Stream(frame2);\n        s2.name = s1.name;\n        streams2.push(s2);\n        s1.addTarget(s2);\n\n    }\n\n}\n\n\nexport default Bus;\n","\n\nconst Nyan = {};\n\n// across = applies to all words in a phrase\n//\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^', react: true, subscribe: true},\n    {name: 'NEED',   sym: '!', react: true, follow: true, need: true},\n    {name: 'EVENT',  sym: '@', react: true, event: true},\n    {name: 'RUN',    sym: '*', across: true},\n    {name: 'READ',   sym: '~', with_react: true, read: true},\n    {name: 'ATTR',   sym: '#'},\n    {name: 'AND',    sym: '&', across: true},\n    {name: 'STYLE',  sym: '$'},\n    {name: 'WRITE',  sym: '='},\n    {name: 'MUST',   sym: '_', with_react: true, read: true, need: true}, // must have data on read\n    {name: 'FILTER', sym: '-', across: true},\n    {name: 'WATCH',  sym: '%', react: true, follow: true} // default\n\n];\n\n// {name: 'BEGIN',  sym: '{'},\n// {name: 'END',    sym: '}'},\n// {name: 'PIPE',   sym: '|'},\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst acrossByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n    operationsBySymbol[sym] = op;\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n    namesBySymbol[sym] = name;\n\n    if(op.across){\n        acrossByName[name] = true;\n    } else if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n    else if(op.with_react) {\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, topic, alias, monitor){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n\n    }\n\n}\n\n\nfunction parse(str) {\n\n    const result = [];\n\n    // split on parentheses and remove empty chunks (todo optimize for speed)\n    let chunks = str.split(/([{}])/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === ')' || chunk === '(') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            result.push(sentence);\n\n    }\n\n    validate(result);\n    \n    return result;\n\n}\n\nfunction validate(sentences){\n\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase) {\n                    validateReactivePhrase(phrase);\n                    firstPhrase = false;\n                }\n                else {\n                    validateStandardPhrase(phrase);\n                }\n            }\n        }\n    }\n}\n\n\nfunction validateReactivePhrase(phrase){\n    \n    let usingAction = false;\n    for(let i = 0; i < phrase.length; i++){\n        const nw = phrase[i];\n        if(nw.operation === 'ACTION') {\n            usingAction = true;\n            break;\n        }\n    }\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const blankMeaning = (usingAction ? 'READ' : 'WATCH');\n        const operation = nw.operation = nw.operation || blankMeaning;\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with a reaction!');\n\n}\n\n\nfunction validateStandardPhrase(phrase){\n\n    const firstOperation = phrase[0].operation;\n    const defaultOperation = acrossByName[firstOperation] && firstOperation;\n\n    for(let i = 0; i < phrase.length; i++){\n        const nw = phrase[i];\n        nw.operation = nw.operation || defaultOperation || 'READ';\n\n        if(defaultOperation && nw.operation !== defaultOperation){\n            throw new Error('Incompatible Nyan commands in phrase!');\n        }\n\n        if (!defaultOperation && acrossByName[nw.operation]){\n            throw new Error('Later incompatible in phrase!');\n        }\n\n        if (!defaultOperation && reactionsByName[nw.operation]){\n            throw new Error('Reactions in later phrase!');\n        }\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        const chunks = rawWord.split(/([(?:)])/).map(d => d.trim()).filter(d => d);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start);\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n\n        while(chunks.length){\n            const c = chunks.shift();\n\n            if(c === '?'){\n                maybe = true;\n                continue;\n            }\n\n            if(c === ':'){\n                if(chunks.length){\n                    const next = chunks[0];\n                    if(next === '('){\n                        monitor = true;\n                    } else {\n                        topic = next;\n                    }\n                } else {\n                    monitor = true;\n                }\n                continue;\n            }\n\n            if(c === '(' && chunks.length){\n                alias = chunks[0];\n            }\n\n        }\n\n        const nw = new NyanWord(name, operation, maybe, topic, alias, monitor);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","\nimport F from './flib.js';\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\nimport Stream from './stream.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    bus(str, context, node){ // string is Nyan\n\n        const b = new Bus(this);\n\n        if(!str)\n            return b;\n\n        const nyan = Nyan.parse(str);\n\n        const stack = [b];\n        const busList = [];\n\n        for(let i = 0; i < nyan.length; i++){\n            const sentence = nyan[i];\n            if(sentence === '('){\n                const bus = stack[stack.length - 1];\n                stack.push(bus.fork());\n            } else if (sentence === ')'){\n                stack.pop();\n            } else {\n                for(let j = 0; j < sentence.length; j++){\n                    const phrase = sentence[j];\n                    const bus = stack[stack.length - 1];\n                    if(i === 0 && j=== 0){\n                        addReaction(this, bus, phrase);\n                    } else {\n                        addProcess(this, bus, phrase);\n                    }\n                }\n            }\n        }\n\n\n        function addReaction(scope, bus, phrase){\n\n            const subscribe = [];\n            const follow = [];\n            const read = [];\n            const need = [];\n\n            for(let i = 0; i < phrase.length; i++){\n\n                const word = phrase[i];\n                const operation = word.operation;\n\n                if(operation.subscribe)\n                    subscribe.push(word);\n                if(operation.read)\n                    read.push(word);\n                if(operation.follow)\n                    follow.push(word);\n                if(operation.need)\n                    need.push(word);\n\n            }\n\n            // convert nyan words to streams\n\n            for(let i = 0; i < subscribe.length; i++){\n                const word = subscribe[i];\n                const data = scope.find(word.name, !word.maybe);\n                if(word.monitor){\n                    subscribe[i] = Stream.fromMonitor(data, word.alias);\n                } else {\n                    subscribe[i] = Stream.fromSubscribe(data, word.topic, word.alias);\n                }\n            }\n\n            for(let i = 0; i < follow.length; i++){\n                const word = follow[i];\n                const data = scope.find(word.name, !word.maybe);\n                follow[i] = Stream.fromFollow(data);\n            }\n\n            const reactions = subscribe.concat(follow);\n\n            bus.addFrame(reactions).merge().group().batch();\n            bus.msg(getMsg(scope, read));\n            bus.whenKeys(need.map(d => d.name));\n\n        }\n\n        function getMsg(scope, read){\n\n            const f = function(msg) {\n\n                for (let i = 0; i < read.length; i++) {\n                    const word = read[i];\n                    const data = scope.find(word.name, !word.maybe);\n                    if(data.peek())\n                        msg[word.name] = data.read();\n                }\n\n                return msg;\n            };\n\n            return f;\n\n        }\n\n        function addProcess(bus){\n\n        }\n\n        // first phrase ->\n\n        // Stream.fromEvent(target, eventName, useCapture);\n        // Stream.fromSubscribe = function(data, topic, name){\n        // Stream.fromFollow = function(data, topic, name){\n        // needs/musts -> list\n        // read list\n\n        // get all watch streams | & read list | filter needs list\n        // first char in nyan can't be ()\n\n        // then do later phrases\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        // console.log('clearing:', this._id, 'has:', this.children.length);\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        // console.log('done:', this._id, 'has:', this.children.length);\n\n        // for(const data of this._dataList.values()){\n        //     data.destroy();\n        // }\n\n        // this._destroyEach(this._children);\n        // this._destroyEach(this._busList);\n        // this._destroyEach(this._dataList.values());\n\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray, dimension){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic || null);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic || null);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Stream from './stream.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const stream = Stream.fromEvent(target, eventName, useCapture);\n    return new Bus(null, [stream]);\n\n};\n\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\nCatbus.scope = function(name){\n\n    console.log('NYAN');\n    const k = Nyan.parse('^bunny?:error(badbunny), !cow:(huh), _moo2?(meow) | -kitten, moo, dog' +\n        '                       {*toMuffin?, toBunny | =order {=raw}} meow {you} woo');\n\n    for(const sentence of k){\n        if(typeof sentence === 'string'){\n            console.log(sentence);\n            continue;\n        }\n        for(const phrase of sentence){\n            for(const word of phrase){\n                console.log(word.name, word.operation, word.maybe);\n            }\n        }\n    }\n\n    console.log(k);\n\n    console.log('root is ', name);\n    return new Scope(name);\n};\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","msg","source","TO_TOPIC","topic","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","hasOwnProperty","hadMsg","lastMsg","diff","bus","holding","To_MSG","Packet","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","name","currentPacket","ACTION","subscribers","concat","s","tell","watcher","indexOf","splice","Data","scope","NONE","_scope","_type","_noTopicSubscriberList","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","get","set","expectedType","subscribe","packet","peek","subscriberList","_demandSubscriberList","add","remove","lastPacket","undefined","write","MIRROR","read","PoolAspects","until","reduce","when","clear","timer","Frame","streams","_bus","_index","_frames","_holding","_streams","_process","_action","_isFactory","_poolAspects","debugFrame","action","isFactory","actionMethod","processMethod","createPool","doPool","stateful","applySyncProcess","fAny","F","fStr","getSkipDupes","factory","buildPoolAspect","aspect","build","cleanupMethod","Pool","isPrimed","prop","hasContent","emit","Stream","children","thisStream","c","fromMonitor","streamName","toStream","unsubscribe","monitor","fromSubscribe","fromFollow","follow","fromEvent","target","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","Bus","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","fork","frame","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","hold","getScan","num","ASSERT_NEED_ONE_ARGUMENT","delay","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","getKeepAll","getKeepFirst","getKeepLast","ASSERT_IS_FUNCTION","run","mergedStream","addTarget","transform","filter","skipDupes","frames","_wireFrames","frame1","frame2","streams1","streams2","s1","s2","Nyan","operationDefs","sym","react","need","event","across","with_react","operationsBySymbol","operationsByName","symbolsByName","namesBySymbol","reactionsByName","withReactionsByName","acrossByName","op","NyanWord","operation","maybe","alias","parse","str","result","chunks","split","map","d","trim","chunk","sentence","parseSentence","validate","sentences","firstPhrase","j","phrase","validateReactivePhrase","usingAction","nw","hasReaction","blankMeaning","validateStandardPhrase","firstOperation","defaultOperation","parsePhrase","words","rawWords","rawWord","nameAndOperation","firstChar","start","slice","idCounter","_destroyEach","arr","item","Scope","_id","_parent","_children","_dataList","_valves","_mirrors","context","node","b","nyan","stack","busList","pop","addReaction","word","find","reactions","merge","group","batch","getMsg","whenKeys","addProcess","parent","child","newParent","mirror","Object","create","grab","_createData","verify","STATE","state","_createMirror","names","required","dataSet","findDataSet","appliedValves","key","value","dataList","valves","mirrors","size","has","delete","entries","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","dimension","w","silentWrite","refresh","writeHash","oldParent","from","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","process","nextTick","log","cycles","q"],"mappings":";;;;;;AAGA,SAASA,WAAT,GAAsB;WACX,IAAP;;;AAGJ,SAASC,YAAT,GAAuB;WACZ,KAAP;;;AAGJ,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;WACrBA,MAAP;;;AAGJ,SAASC,QAAT,CAAkBF,GAAlB,EAAuBC,MAAvB,EAA+BE,KAA/B,EAAsC;WAC3BA,KAAP;;;AAGJ,SAASC,MAAT,CAAgBJ,GAAhB,EAAqB;WACVA,GAAP;;;AAGJ,SAASK,IAAT,GAAe;;AAKf,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;WACV,OAAOA,GAAP,KAAe,UAAhB,GAA8BA,GAA9B,GAAoC,YAAW;eAASA,GAAP;KAAxD;;;AAGJ,IAAMC,OAAO;;8BAEiB,kCAASC,IAAT,EAAc;YACjCA,KAAKC,MAAL,GAAc,CAAjB,EACI,MAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;KAJC;;wBAOW,4BAASC,IAAT,EAAc;YAC3B,OAAOA,IAAP,KAAgB,UAAnB,EACI,MAAM,IAAID,KAAJ,CAAU,0CAAV,CAAN;KATC;;mBAYM,yBAAU;eACf,YAAU;mBAAS,IAAP;SAAnB;KAbM;;mBAgBM,yBAAU;YACfE,OAAO,IAAb;eACO,YAAW;qBACPC,OAAP,CAAeD,IAAf;SADJ;KAlBK;;kBAuBK,wBAAU;YACdA,OAAO,IAAb;eACO,YAAW;iBACTE,OAAL,CAAaF,IAAb;SADJ;KAzBK;;mBA8BM,yBAAU;YACfA,OAAO,IAAb;eACO,YAAW;uBACHA,KAAKE,OAAhB,EAAyB,CAAzB,EAA4BF,IAA5B;SADJ;KAhCK;;sBAqCS,0BAASG,IAAT,EAAc;;YAEtBH,OAAO,IAAb;eACOP,QAAQU,IAAR,CAAP;YACIC,WAAW,KAAf;YACIC,YAAY,IAAhB;YACIC,iBAAiB,KAArB;YACMC,OAAOP,KAAKQ,IAAL,CAAUD,IAAvB;;iBAESE,YAAT,CAAsBC,WAAtB,EAAkC;;gBAE3BV,KAAKW,MAAL,CAAYC,IAAf,EACI;;gBAEEC,WAAWb,KAAKQ,IAAL,CAAUM,OAA3B;;gBAEG,CAACJ,WAAJ,EAAgB;oBACT,CAACL,SAAJ,EAAe;yBACNH,OAAL,CAAaF,IAAb;+BACW,KAAX;gCACYe,WAAWN,YAAX,EAAyBN,KAAKa,IAAL,CAAUhB,IAAV,CAAzB,EAA0C,IAA1C,CAAZ;iBAHJ,MAIO;qCACc,IAAjB;;;;;gBAKLa,QAAH,EAAY;oBACLT,QAAH,EAAY;;iBAAZ,MAEO;;+BAEQ,IAAX;qCACiB,KAAjB;gCACYW,WAAWN,YAAX,EAAyBN,KAAKa,IAAL,CAAUhB,IAAV,CAAzB,EAA0C,IAA1C,CAAZ;;aAPR,MASO;qBACEE,OAAL,CAAaF,IAAb;2BACW,KAAX;4BACYe,WAAWN,YAAX,EAAyBN,KAAKa,IAAL,CAAUhB,IAAV,CAAzB,EAA0C,IAA1C,CAAZ;;;;eAKDS,YAAP;KAjFK;;cAqFC,kBAASQ,CAAT,EAAW;;YAEbA,KAAKC,QAAT;;YAEMC,SAAS,EAAf;;YAEMC,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;gBACxB+B,OAAOtB,MAAP,GAAgBoB,CAAnB,EACIE,OAAOE,IAAP,CAAYlC,GAAZ;mBACGgC,MAAP;SAHJ;;UAMEG,QAAF,GAAatC,WAAb;;UAEEuC,IAAF,GAAS,YAAU;mBACRJ,OAAOK,KAAP,EAAP;SADJ;;UAIEV,OAAF,GAAY,YAAU;mBACXK,OAAOtB,MAAP,KAAkB,CAAzB;SADJ;;UAIE4B,OAAF,GAAY,YAAU;mBACXN,MAAP;SADJ;;eAIOC,CAAP;KA/GK;;aAmHA,iBAASrB,IAAT,EAAe2B,IAAf,EAAoB;;YAEnBC,UAAUC,UAAU/B,MAAV,KAAqB,CAArC;YACIgC,YAAJ;YACIC,UAAU,IAAd;;YAEMV,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;;gBAExB0C,OAAH,EAAW;0BACG,KAAV;oBACGH,OAAH,EAAW;0BACD5B,KAAK2B,IAAL,EAAWvC,GAAX,EAAgBC,MAAhB,CAAN;iBADJ,MAEO;0BACGD,GAAN;;aALR,MAOO;sBACGY,KAAK8B,GAAL,EAAU1C,GAAV,EAAeC,MAAf,CAAN;;;mBAGGyC,GAAP;SAbJ;;UAiBEE,KAAF,GAAUvC,IAAV;;UAEE+B,IAAF,GAASH,EAAEK,OAAF,GAAY,YAAU;mBACpBI,GAAP;SADJ;;eAKOT,CAAP;KAjJK;;cAoJC,kBAASY,OAAT,EAAiB;;kBAEbA,WAAW9C,SAArB;YACM+C,OAAO,EAAb;;YAEMb,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;;gBAErB8C,IAAIF,QAAQ7C,GAAR,EAAaC,MAAb,CAAV;iBACK8C,CAAL,IAAU/C,GAAV;mBACO8C,IAAP;SAJJ;;UAQEF,KAAF,GAAU,YAAU;iBACZ,IAAMI,CAAV,IAAeF,IAAf,EAAoB;uBACTA,KAAKE,CAAL,CAAP;;cAEFrB,OAAF,GAAY,IAAZ;SAJJ;;UAOES,IAAF,GAASH,EAAEK,OAAF,GAAY,YAAU;mBACpBQ,IAAP;SADJ;;eAIOb,CAAP;KA5KK;;iBAgLI,qBAASH,CAAT,EAAW;;YAEjB,CAACA,CAAD,IAAMA,IAAI,CAAb,EAAgB;;gBAERmB,aAAJ;;gBAEMhB,KAAI,SAAJA,EAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;uBACpBgD,OAAOjD,GAAd;aADJ;;eAIE4C,KAAF,GAAU,YAAU;mBACdjB,OAAF,GAAY,IAAZ;aADJ;;eAIES,IAAF,GAASH,GAAEK,OAAF,GAAY,YAAU;uBACpBW,IAAP;aADJ;;mBAIOhB,EAAP;;;YAIED,SAAS,EAAf;;YAEMC,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;mBACpBiC,IAAP,CAAYlC,GAAZ;gBACGgC,OAAOtB,MAAP,GAAgBoB,CAAnB,EACIE,OAAOK,KAAP;mBACGL,MAAP;SAJJ;;UAOEY,KAAF,GAAU,YAAU;mBACVZ,OAAOtB,MAAb,EAAqB;uBACV2B,KAAP;;cAEFV,OAAF,GAAY,IAAZ;SAJJ;;UAOES,IAAF,GAASH,EAAEK,OAAF,GAAY,YAAU;mBACpBN,MAAP;SADJ;;eAIOC,CAAP;KA1NK;;kBAgOK,sBAASH,CAAT,EAAW;;YAElB,CAACA,CAAD,IAAMA,IAAI,CAAb,EAAgB;;gBAERoB,iBAAJ;gBACIC,WAAW,KAAf;gBACMlB,MAAI,SAAJA,GAAI,CAAUjC,GAAV,EAAeC,MAAf,EAAuB;uBACtBkD,WAAWD,QAAX,GAAsBA,WAAWlD,GAAxC;aADJ;;gBAIE4C,KAAF,GAAU,YAAU;2BACL,KAAX;oBACEjB,OAAF,GAAY,IAAZ;aAFJ;;gBAKES,IAAF,GAASH,IAAEK,OAAF,GAAY,YAAU;uBACpBY,QAAP;aADJ;;mBAIOjB,GAAP;;;YAGED,SAAS,EAAf;;YAEMC,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;;gBAExB+B,OAAOtB,MAAP,GAAgBoB,CAAnB,EACIE,OAAOE,IAAP,CAAYlC,GAAZ;mBACGgC,MAAP;SAJJ;;UAQEY,KAAF,GAAU,YAAU;mBACVZ,OAAOtB,MAAb,EAAqB;uBACV2B,KAAP;;cAEFV,OAAF,GAAY,IAAZ;SAJJ;;UAOES,IAAF,GAASH,EAAEK,OAAF,GAAY,YAAU;mBACpBN,MAAP;SADJ;;eAIOC,CAAP;KA3QK;;gBA+QG,sBAAU;;YAEZD,SAAS,EAAf;;YAEMC,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAcC,MAAd,EAAqB;mBACpBiC,IAAP,CAAYlC,GAAZ;mBACOgC,MAAP;SAFJ;;UAKEY,KAAF,GAAU,YAAU;mBACVZ,OAAOtB,MAAb,EAAqB;uBACV2B,KAAP;;cAEFV,OAAF,GAAY,IAAZ;SAJJ;;UAOES,IAAF,GAASH,EAAEK,OAAF,GAAY,YAAU;mBACpBN,MAAP;SADJ;;eAIOC,CAAP;KAnSK;;kBAuSK,sBAASH,CAAT,EAAY;;YAElBsB,UAAU,KAAd;;YAEMnB,IAAI,SAAJA,CAAI,CAASoB,QAAT,EAAkB;sBACdD,WAAWC,SAAS3C,MAAT,IAAmBoB,CAAxC;mBACOsB,OAAP;SAFJ;;UAKER,KAAF,GAAU,YAAU;sBACN,KAAV;SADJ;;eAIOX,CAAP;KApTK;;iBAwTI,qBAASqB,IAAT,EAAe;;YAElBC,UAAU,EAAhB;YACMC,MAAMF,KAAK5C,MAAjB;;aAEI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;gBAClBT,IAAIM,KAAKG,CAAL,CAAV;oBACQT,CAAR,IAAa,IAAb;;;YAGAI,UAAU,KAAd;;YAEMnB,IAAI,SAAJA,CAAI,CAAUyB,aAAV,EAAyB;;gBAE5BN,OAAH,EACI,OAAO,IAAP;;iBAEC,IAAIK,KAAI,CAAb,EAAgBA,KAAID,GAApB,EAAyBC,IAAzB,EAA8B;oBACpBT,KAAIM,KAAKG,EAAL,CAAV;oBACI,CAACC,cAAcC,cAAd,CAA6BX,EAA7B,CAAL,EACI,OAAO,KAAP;;;mBAGDI,UAAU,IAAjB;SAXJ;;UAeER,KAAF,GAAU,YAAU;sBACN,KAAV;iBACI,IAAMI,GAAV,IAAeO,OAAf,EAAuB;uBACZA,QAAQP,GAAR,CAAP;;SAHR;;eAOOf,CAAP;KA1VK;;kBA8VK,wBAAW;;YAEjB2B,SAAS,KAAb;YACIC,gBAAJ;;eAEO,UAAU7D,GAAV,EAAe;;gBAEZ8D,OAAO,CAACF,MAAD,IAAW5D,QAAQ6D,OAAhC;sBACU7D,GAAV;qBACS,IAAT;mBACO8D,IAAP;SALJ;KAnWK;;wBA+WW,4BAASC,GAAT,EAAa;YAC1BA,IAAIC,OAAP,EACI,MAAM,IAAIrD,KAAJ,CAAU,+DAAV,CAAN;KAjXC;;uBAoXU,2BAASoD,GAAT,EAAa;YACzB,CAACA,IAAIC,OAAR,EACI,MAAM,IAAIrD,KAAJ,CAAU,gEAAV,CAAN;;;CAtXZ;;AA2XAH,KAAKT,SAAL,GAAiBA,SAAjB;AACAS,KAAKN,QAAL,GAAgBA,QAAhB;AACAM,KAAKyD,MAAL,GAAc7D,MAAd;AACAI,KAAKF,OAAL,GAAeA,OAAf;AACAE,KAAKX,WAAL,GAAmBA,WAAnB;AACAW,KAAKV,YAAL,GAAoBA,YAApB;AACAU,KAAKH,IAAL,GAAYA,IAAZ,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClaM6D;oBAEUlE,GAAZ,EAAiBG,KAAjB,EAAwBF,MAAxB,EAAgC;;;aACvBkE,IAAL,GAAkBnE,GAAlB;aACKoE,MAAL,GAAkBjE,KAAlB;aACKkE,OAAL,GAAkBpE,MAAlB;aACKqE,UAAL,GAAkBC,KAAKC,GAAL,EAAlB;;;;;+BAGM;mBAAS,KAAKL,IAAZ;;;;+BACA;mBAAS,KAAKC,MAAZ;;;;+BACD;mBAAS,KAAKC,OAAZ;;;;+BACC;mBAAS,KAAKC,UAAZ;;;;IAItB;;ACfA,IAAMG,aAAa;;YAEL,QAFK;YAGL,QAHK;WAIL,OAJK;cAKL,UALK;UAML,MANK;SAOL;;CAPd;;AAWA,IAAMC,gBAAgB,EAAtB;;AAEA,KAAI,IAAMC,CAAV,IAAeF,UAAf,EAA0B;QAChBG,IAAIH,WAAWE,CAAX,CAAV;kBACcC,CAAd,IAAmBD,CAAnB;;;AAGJ,SAASE,OAAT,CAAiBC,IAAjB,EAAsB;WACXJ,cAAcf,cAAd,CAA6BmB,IAA7B,CAAP;CAIJ;;ICrBMC;4BAEU5E,KAAZ,EAAmB6E,IAAnB,EAAyB;;;;aAEhBZ,MAAL,GAAcjE,KAAd;aACK8E,YAAL,GAAoB,EAApB;aACKC,WAAL,GAAmB,IAAnB;aACKC,KAAL,GAAaH,IAAb;aACKI,KAAL,GAAaJ,KAAKI,KAAlB;aACKC,KAAL,GAAa,KAAb;;;;;6BAUCrF,KAAKG,OAAOmF,UAAS;;gBAEnB,KAAK7D,IAAR,EACI;;oBAEItB,SAAS,KAAKA,KAAtB;gBACIF,SAAS,KAAKsF,IAAlB;gBACIC,gBAAgB,IAAItB,MAAJ,CAAWlE,GAAX,EAAgBG,KAAhB,EAAuBF,MAAvB,CAApB;;gBAEG,KAAK+E,IAAL,CAAUF,IAAV,KAAmBL,WAAWgB,MAAjC;qBACSP,WAAL,GAAmBM,aAAnB;;gBAEAE,cAAc,GAAGC,MAAH,CAAU,KAAKV,YAAf,CAAlB,CAZsB;gBAalBzB,MAAMkC,YAAYhF,MAAtB;;gBAEG,CAAC4E,QAAJ,EAAc;qBACL,IAAI7B,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B;wBACtBmC,IAAIF,YAAYjC,CAAZ,CAAR;2BACOmC,CAAP,KAAa,UAAb,GAA0BA,EAAE/D,IAAF,CAAO+D,CAAP,EAAU5F,GAAV,EAAewF,aAAf,CAA1B,GAA0DI,EAAEC,IAAF,CAAO7F,GAAP,EAAYwF,aAAZ,CAA1D;;;;;;kCAMH;;gBAEF,KAAK/D,IAAR,EACI;;iBAECwD,YAAL,GAAoB,IAApB;iBACKC,WAAL,GAAmB,IAAnB;iBACKG,KAAL,GAAa,IAAb;;;;4BAIAS,SAAQ;;iBAEHb,YAAL,CAAkB/C,IAAlB,CAAuB4D,OAAvB;;;;+BAIGA,SAAQ;;gBAEPrC,IAAI,KAAKwB,YAAL,CAAkBc,OAAlB,CAA0BD,OAA1B,CAAR;;gBAEGrC,MAAM,CAAC,CAAV,EACI,KAAKwB,YAAL,CAAkBe,MAAlB,CAAyBvC,CAAzB,EAA4B,CAA5B;;;;+BApDS;mBAAS,KAAKyB,WAAZ;;;;+BACR;mBAAS,KAAKC,KAAZ;;;;+BACF;mBAAS,KAAKC,KAAZ;;;;+BACF;mBAAS,KAAKC,KAAZ;;;;+BACD;mBAAS,KAAKjB,MAAZ;;;;IAuDlB;;ICvEM6B;kBAEUC,KAAZ,EAAmBX,IAAnB,EAAyBT,IAAzB,EAA+B;;;;eAEpBA,QAAQL,WAAW0B,IAA1B;;YAEG,CAACtB,QAAQC,IAAR,CAAJ,EACI,MAAM,IAAInE,KAAJ,CAAU,2BAA2BmE,IAArC,CAAN;;aAECsB,MAAL,GAAmBF,KAAnB;aACKd,KAAL,GAAmBG,IAAnB;aACKc,KAAL,GAAmBvB,IAAnB;aACKO,KAAL,GAAmB,KAAnB;;aAEKiB,sBAAL,GAA8B,IAAIvB,cAAJ,CAAmB,IAAnB,EAAyB,IAAzB,CAA9B;aACKwB,uBAAL,GAA+B,IAAIxB,cAAJ,CAAmB,IAAnB,EAAyB,IAAzB,CAA/B;aACKyB,uBAAL,GAA+B,IAAIC,GAAJ,EAA/B;;;;;kCASK;;gBAEF,KAAKhF,IAAR,EACI,KAAKiF,UAAL;;;;;;;qCAEc,KAAKF,uBAAL,CAA6BG,MAA7B,EAAlB,8HAAwD;wBAA9CC,IAA8C;;yBAC/CC,OAAL;;;;;;;;;;;;;;;;;iBAGCxB,KAAL,GAAa,IAAb;;;;8CAIkBlF,OAAM;;gBAEpByG,OAAO,KAAKJ,uBAAL,CAA6BM,GAA7B,CAAiC3G,KAAjC,CAAX;;gBAEGyG,IAAH,EACI,OAAOA,IAAP;;mBAEG,IAAI7B,cAAJ,CAAmB5E,KAAnB,EAA0B,IAA1B,CAAP;iBACKqG,uBAAL,CAA6BO,GAA7B,CAAiC5G,KAAjC,EAAwCyG,IAAxC;;mBAEOA,IAAP;;;;+BAIGI,cAAa;;gBAEb,KAAKlC,IAAL,KAAckC,YAAjB,EACI,OAAO,IAAP;;kBAEE,IAAIrG,KAAJ,CAAU,UAAU,KAAK4E,IAAf,GAAsB,qBAAtB,GAA8CyB,YAA9C,GAA6D,aAA7D,GAA6E,KAAKlC,IAA5F,CAAN;;;;+BAIGgB,SAAS3F,OAAM;;gBAEf,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;iBAECO,SAAL,CAAenB,OAAf,EAAwB3F,KAAxB;gBACI+G,SAAS,KAAKC,IAAL,EAAb;;gBAEGD,MAAH,EACI,OAAOpB,OAAP,KAAmB,UAAnB,GAAgCA,QAAQjE,IAAR,CAAaiE,OAAb,EAAsBoB,OAAOlH,GAA7B,EAAkCkH,MAAlC,CAAhC,GAA4EpB,QAAQD,IAAR,CAAaqB,OAAOlH,GAApB,EAAyBkH,MAAzB,CAA5E;;mBAEG,IAAP;;;;kCAIMpB,SAAS3F,OAAM;;gBAElB,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;gBAEEU,iBAAkB,CAACjH,KAAF,GAAW,KAAKmG,sBAAhB,GAAyC,KAAKe,qBAAL,CAA2BlH,KAA3B,CAAhE;2BACemH,GAAf,CAAmBxB,OAAnB;;mBAEO,IAAP;;;;gCAIIA,SAAQ;;gBAET,KAAKrE,IAAR,EACI,KAAKiF,UAAL;;iBAECH,uBAAL,CAA6Be,GAA7B,CAAiCxB,OAAjC;;mBAEO,IAAP;;;;oCAIQA,SAAS3F,OAAM;;gBAEpB,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;gBAED,OAAOvG,KAAP,KAAiB,QAApB,EAA6B;qBACpBmG,sBAAL,CAA4BiB,MAA5B,CAAmCzB,OAAnC;aADJ,MAEO;oBACCsB,iBAAiB,KAAKC,qBAAL,CAA2BlH,KAA3B,CAArB;+BACeoH,MAAf,CAAsBzB,OAAtB;;iBAECS,uBAAL,CAA6BgB,MAA7B,CAAoCzB,OAApC;;mBAEO,IAAP;;;;6BAMC3F,OAAM;;gBAEJ,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;gBAEAU,iBAAiBjH,QAAQ,KAAKqG,uBAAL,CAA6BM,GAA7B,CAAiC3G,KAAjC,CAAR,GAAkD,KAAKmG,sBAA5E;gBACG,CAACc,cAAJ,EACI,OAAO,IAAP;mBACGA,eAAeI,UAAtB;;;;6BAKCrH,OAAO;;gBAEL,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;gBAEAQ,SAAS,KAAKC,IAAL,CAAUhH,KAAV,CAAb;mBACQ+G,MAAD,GAAWA,OAAOlH,GAAlB,GAAwByH,SAA/B;;;;oCAKQzH,KAAKG,OAAM;;gBAEhB,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;iBAECgB,KAAL,CAAW1H,GAAX,EAAgBG,KAAhB,EAAuB,IAAvB;;;;8BAKEH,KAAKG,OAAOmF,UAAS;;gBAEpB,KAAK7D,IAAR,EACI,KAAKiF,UAAL;;gBAED,KAAK5B,IAAL,KAAcL,WAAWkD,MAA5B,EACI,MAAM,IAAIhH,KAAJ,CAAU,kBAAkB,KAAK4E,IAAvB,GAA8B,eAAxC,CAAN;;gBAEDpF,KAAH,EAAU;oBACFyG,OAAO,KAAKS,qBAAL,CAA2BlH,KAA3B,CAAX;qBACK0F,IAAL,CAAU7F,GAAV;aAFJ,MAIK;qBACIsG,sBAAL,CAA4BT,IAA5B,CAAiC7F,GAAjC,EAAsC,IAAtC,EAA4CsF,QAA5C;;;iBAGCiB,uBAAL,CAA6BV,IAA7B,CAAkC7F,GAAlC,EAAuCG,KAAvC,EAA8CmF,QAA9C;;;;gCAKInF,OAAM;;gBAEP,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;iBAECgB,KAAL,CAAW,KAAKE,IAAL,CAAUzH,KAAV,CAAX,EAA6BA,KAA7B;;mBAEO,IAAP;;;;+BAKGA,OAAM;;gBAEN,KAAKsB,IAAR,EACI,KAAKiF,UAAL;;iBAECgB,KAAL,CAAW,CAAC,KAAKE,IAAL,CAAUzH,KAAV,CAAZ,EAA8BA,KAA9B;;mBAEO,IAAP;;;;qCAIQ;;kBAEF,IAAIQ,KAAJ,CAAU,WAAW,KAAK4E,IAAhB,GAAuB,mBAAjC,CAAN;;;;+BAlLQ;mBAAS,KAAKa,MAAZ;;;;+BACH;mBAAS,KAAKhB,KAAZ;;;;+BACF;mBAAS,KAAKiB,KAAZ;;;;+BACF;mBAAS,KAAKhB,KAAZ;;;;IAqLjB;;IChNMwC,cAEF,uBAAc;;;;SAELC,KAAL,GAAkB,IAAlB;SACKC,MAAL,GAAkB,IAAlB;SACKC,IAAL,GAAkB,IAAlB;SACKC,KAAL,GAAkB,IAAlB;SACKC,KAAL,GAAkB,IAAlB;;;AAMR,AAEA;;;;;;;ICbMC;mBAEUpE,GAAZ,EAAiBqE,OAAjB,EAA0B;;;;kBAEZA,WAAW,EAArB;aACKC,IAAL,GAAYtE,GAAZ;aACKuE,MAAL,GAAcvE,IAAIwE,OAAJ,CAAY7H,MAA1B;aACK8H,QAAL,GAAgB,KAAhB,CALsB;aAMjBC,QAAL,GAAgBL,OAAhB;;aAEKM,QAAL,GAAgB,IAAhB,CARsB;aASjBC,OAAL,GAAe,IAAf,CATsB;aAUjBC,UAAL,GAAkB,KAAlB,CAVsB;;aAYjBC,YAAL,GAAoB,IAApB;;YAEMrF,MAAM4E,QAAQ1H,MAApB;aACI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;oBAChBA,CAAR,EAAWqF,UAAX,GAAwB,IAAxB;;;;;;yCAqBSvD,MAAMwD,QAAQC,WAAU;;;iBAEhCN,QAAL,GAAgBnD,IAAhB;iBACKoD,OAAL,GAAeI,MAAf;iBACKH,UAAL,GAAkBI,SAAlB;;gBAEMZ,UAAU,KAAKK,QAArB;gBACMjF,MAAM4E,QAAQ1H,MAApB;;gBAEGsI,SAAH,EAAc;qBACL,IAAIvF,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B;wBACpBmC,IAAIwC,QAAQ3E,CAAR,CAAV;sBACEwF,YAAF,GAAiBF,QAAjB;sBACEG,aAAF,GAAkBtD,EAAEL,IAAF,CAAlB;;aAJR,MAMO;qBACE,IAAI9B,KAAI,CAAb,EAAgBA,KAAID,GAApB,EAAyBC,IAAzB,EAA8B;wBACpBmC,KAAIwC,QAAQ3E,EAAR,CAAV;uBACEwF,YAAF,GAAiBF,MAAjB;uBACEG,aAAF,GAAkBtD,GAAEL,IAAF,CAAlB;;;;mBAID,IAAP;;;;+BAIE;;iBAEGiD,QAAL,GAAgB,IAAhB;iBACKK,YAAL,GAAoB,IAAIhB,WAAJ,EAApB;;gBAEMO,UAAU,KAAKK,QAArB;gBACMjF,MAAM4E,QAAQ1H,MAApB;;iBAEI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;oBAClBmC,IAAIwC,QAAQ3E,CAAR,CAAV;kBACE0F,UAAF;kBACED,aAAF,GAAkBtD,EAAEwD,MAApB;;;mBAGG,IAAP;;;;4BAIAxI,MAAMyI,UAAS;mBACR,KAAKC,gBAAL,CAAsB,OAAtB,EAA+B1I,IAA/B,EAAqCyI,QAArC,CAAP;;;;4BAGAE,MAAMF,UAAS;mBACR,KAAKC,gBAAL,CAAsB,OAAtB,EAA+BE,KAAElJ,OAAF,CAAUiJ,IAAV,CAA/B,EAAgDF,QAAhD,CAAP;;;;kCAIME,MAAMF,UAAS;mBACd,KAAKC,gBAAL,CAAsB,aAAtB,EAAqCE,KAAElJ,OAAF,CAAUiJ,IAAV,CAArC,EAAsDF,QAAtD,CAAP;;;;+BAGGI,MAAMJ,UAAS;mBACX,KAAKC,gBAAL,CAAsB,UAAtB,EAAkCE,KAAElJ,OAAF,CAAUmJ,IAAV,CAAlC,EAAmDJ,QAAnD,CAAP;;;;8BAGErI,MAAMqI,UAAS;mBACV,KAAKC,gBAAL,CAAsB,SAAtB,EAAiCE,KAAElJ,OAAF,CAAUU,IAAV,CAAjC,EAAkDqI,QAAlD,CAAP;;;;+BAGGzI,MAAMyI,UAAS;mBACX,KAAKC,gBAAL,CAAsB,UAAtB,EAAkC1I,IAAlC,EAAwCyI,QAAxC,CAAP;;;;oCAGQ;mBACD,KAAKC,gBAAL,CAAsB,UAAtB,EAAkCE,KAAEE,YAApC,EAAkD,IAAlD,CAAP;;;;8BAGEC,SAAiB;8CAALlJ,IAAK;oBAAA;;;mBACZ,KAAKmJ,eAAL,cAAqB,OAArB,EAA8BD,OAA9B,SAA0ClJ,IAA1C,EAAP;;;;;;;;+BAKGkJ,SAAiB;+CAALlJ,IAAK;oBAAA;;;mBACb,KAAKmJ,eAAL,cAAqB,MAArB,EAA6BD,OAA7B,SAAyClJ,IAAzC,EAAP;;;;8BAGEkJ,SAAiB;+CAALlJ,IAAK;oBAAA;;;mBACZ,KAAKmJ,eAAL,cAAqB,OAArB,EAA8BD,OAA9B,SAA0ClJ,IAA1C,EAAP;;;;6BAGCkJ,SAAiB;+CAALlJ,IAAK;oBAAA;;;mBACX,KAAKmJ,eAAL,cAAqB,MAArB,EAA6BD,OAA7B,SAAyClJ,IAAzC,EAAP;;;;8BAGEkJ,SAAiB;+CAALlJ,IAAK;oBAAA;;;mBACZ,KAAKmJ,eAAL,cAAqB,OAArB,EAA8BD,OAA9B,SAA0ClJ,IAA1C,EAAP;;;;wCAGYoJ,QAAQF,SAAiB;;gBAElCE,WAAW,OAAd,EACI,KAAKrB,QAAL,GAAgB,KAAhB;;+CAH4B/H,IAAK;oBAAA;;;iBAKhCoI,YAAL,CAAkBgB,MAAlB,KAA6BF,OAA7B,SAAyClJ,IAAzC;;gBAEM2H,UAAU,KAAKK,QAArB;gBACMjF,MAAM4E,QAAQ1H,MAApB;;iBAEI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;;oBAElBmC,IAAIwC,QAAQ3E,CAAR,CAAV;oBACM5C,OAAO+E,EAAE/E,IAAf;qBACKiJ,KAAL,cAAWD,MAAX,EAAmBF,OAAnB,SAA+BlJ,IAA/B;;;mBAIG,IAAP;;;;kCAIK;;gBAEC2H,UAAU,KAAKK,QAArB;gBACMjF,MAAM4E,QAAQ1H,MAApB;iBACI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;wBAChBA,CAAR,EAAWsG,aAAX;;iBAECtB,QAAL,GAAgB,IAAhB;;;;+BA7IM;mBACC,KAAKJ,IAAZ;;;;+BAGQ;mBACD,KAAKC,MAAZ;;;;+BAGU;mBACH,KAAKE,QAAZ;;;;+BAGU;mBACH,GAAG7C,MAAH,CAAU,KAAK8C,QAAf,CAAP;;;;IAsIR;;IC3KMuB;kBAEUxI,MAAZ,EAAmB;;;;aAEVA,MAAL,GAAcA,MAAd;;aAEKH,IAAL,GAAY,IAAZ;aACK2G,IAAL,GAAYwB,KAAE3J,WAAd;aACKiI,KAAL,GAAa0B,KAAE3J,WAAf;aACKqI,KAAL,GAAa,IAAb,CAPe;aAQVD,KAAL,GAAauB,KAAE1J,YAAf;aACKmK,QAAL,GAAgB,KAAhB;aACKhK,MAAL,GAAcuB,OAAO+D,IAArB;;;;;6BAICvF,KAAKC,QAAQ;;iBAEToB,IAAL,CAAUrB,GAAV,EAAeC,MAAf;gBACG,CAAC,KAAKgK,QAAT,EAAkB;oBACR3H,UAAU,KAAKjB,IAAL,CAAUiB,OAAV,EAAhB;oBACG,KAAK0F,IAAL,CAAU1F,OAAV,CAAH,EAAsB;yBACb2H,QAAL,GAAgB,IAAhB;yBACK/B,KAAL,CAAW,IAAX;;;;;;8BAMNgC,MAAMP,SAAiB;8CAALlJ,IAAK;oBAAA;;;iBACpByJ,IAAL,IAAaP,QAAQ9H,IAAR,iBAAa,IAAb,SAAsBpB,IAAtB,EAAb;;;;gCAGII,MAAM;;mBAEHA,QAAQ,IAAf;gBACMsJ,aAAa,CAACtJ,KAAKQ,IAAL,CAAUM,OAA9B;gBACM3B,MAAMmK,cAActJ,KAAKQ,IAAL,CAAUe,IAAV,EAA1B;;gBAEGvB,KAAKoH,KAAL,EAAH,EAAgB;qBACP5G,IAAL,CAAUuB,KAAV;qBACKoF,IAAL,CAAUpF,KAAV;;;iBAGCqH,QAAL,GAAgB,KAAhB;;gBAEGE,UAAH,EACItJ,KAAKW,MAAL,CAAY4I,IAAZ,CAAiBpK,GAAjB,EAAsBa,KAAKW,MAAL,CAAY+D,IAAlC;;;;IAQZ;;ICvDM8E;sBAEW;;;;aAEJvB,UAAL,GAAkB,IAAlB;aACKrH,IAAL,GAAY,KAAZ;aACK6I,QAAL,GAAgB,EAAhB;aACK/E,IAAL,GAAY,IAAZ;aACK1E,IAAL,GAAY,IAAZ;aACKkJ,aAAL,GAAqBP,KAAEnJ,IAAvB,CAPS;aAQJ6I,aAAL,GAAqB,KAAKkB,IAA1B;aACKnB,YAAL,GAAoB,IAApB,CATS;;;;;6BAaRjJ,KAAKC,QAAQ;;gBAEX,KAAKwB,IAAR;uBACW,IAAP;;iBAECyH,aAAL,CAAmBlJ,GAAnB,EAAwBC,MAAxB,EALc;;mBAOP,IAAP;;;;6BAICuB,QAAO;;gBAEF8I,WAAW,KAAKA,QAAtB;gBACM7G,IAAI6G,SAASvE,OAAT,CAAiBvE,MAAjB,CAAV;;gBAEGiC,MAAM,CAAC,CAAV,EACI6G,SAAStE,MAAT,CAAgBvC,CAAhB,EAAmB,CAAnB;;;;kCAIEjC,QAAO;iBACR8I,QAAL,CAAcpI,IAAd,CAAmBV,MAAnB;;;;6BAGCxB,KAAKC,QAAQE,OAAOoK,YAAW;;yBAEnBA,cAAc,IAA3B,CAFgC;;gBAI1BD,WAAWC,WAAWD,QAA5B;gBACM9G,MAAM8G,SAAS5J,MAArB;;iBAEI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;oBAClB+G,IAAIF,SAAS7G,CAAT,CAAV;kBACEoC,IAAF,CAAO7F,GAAP,EAAYC,MAAZ,EAAoBE,KAApB;;;;;iCAKCH,KAAKC,QAAQE,OAAO;;gBAEtB,CAAC,KAAK8I,YAAL,CAAkBjJ,GAAlB,EAAuBC,MAAvB,EAA+BE,KAA/B,CAAJ,EACI;iBACCiK,IAAL,CAAUpK,GAAV,EAAeC,MAAf,EAAuBE,KAAvB;;;;8BAKEH,KAAKC,QAAQE,OAAO;;kBAEhB,KAAK8I,YAAL,CAAkBjJ,GAAlB,EAAuBC,MAAvB,EAA+BE,KAA/B,CAAN;iBACKiK,IAAL,CAAUpK,GAAV,EAAeC,MAAf,EAAuBE,KAAvB;;;;oCAIQH,KAAKC,QAAQE,OAAO;;kBAGtB,KAAK8I,YAAL,CAAkBjJ,GAAlB,GAAwB,KAAKiJ,YAAL,CAAkBjJ,GAAlB,CAAsBA,GAAtB,EAA2BC,MAA3B,EAAmCE,KAAnC,CAAxB,GAAoEH,GAA1E;qBACS,KAAKiJ,YAAL,CAAkBhJ,MAAlB,GAA2B,KAAKgJ,YAAL,CAAkBhJ,MAAlB,CAAyBD,GAAzB,EAA8BC,MAA9B,EAAsCE,KAAtC,CAA3B,GAA0EF,MAAnF;oBACQ,KAAKgJ,YAAL,CAAkB9I,KAAlB,GAA0B,KAAK8I,YAAL,CAAkB9I,KAAlB,CAAwBH,GAAxB,EAA6BC,MAA7B,EAAqCE,KAArC,CAA1B,GAAwEA,KAAhF;iBACKiK,IAAL,CAAUpK,GAAV,EAAeC,MAAf,EAAuBE,KAAvB;;;;gCAIIH,KAAKC,QAAQE,OAAO;;;;uBAIb,KAAKiK,IAAhB,EAAsB,KAAKnB,YAAL,CAAkBjJ,GAAlB,EAAuBC,MAAvB,EAA+BE,KAA/B,KAAyC,CAA/D,EAAkEH,GAAlE,EAAuEC,MAAvE,EAA+EE,KAA/E,EAAsF,IAAtF;;;;iCAIKH,KAAKC,QAAQE,OAAO;;qBAEhB,KAAK8I,YAAL,CAAkBjJ,GAAlB,EAAuBC,MAAvB,EAA+BE,KAA/B,CAAT;iBACKiK,IAAL,CAAUpK,GAAV,EAAeC,MAAf,EAAuBE,KAAvB;;;;8BAKEH,KAAKC,QAAQE,OAAO;;iBAEjB8I,YAAL,CAAkBjJ,GAAlB,EAAuBC,MAAvB,EAA+BE,KAA/B;iBACKiK,IAAL,CAAUpK,GAAV,EAAeC,MAAf,EAAuBE,KAAvB;;;;qCAIQ;;iBAEHU,IAAL,GAAY,IAAImJ,IAAJ,CAAS,IAAT,CAAZ;;;;+BAGGhK,KAAKC,QAAQE,OAAO;;iBAElBU,IAAL,CAAUgF,IAAV,CAAe7F,GAAf,EAAoBC,MAApB,EAA4BE,KAA5B;;;;kCAIK;;gBAEF,KAAKsB,IAAR,EACI;;iBAECsI,aAAL,GALK;;;;;;AAYbM,OAAOI,WAAP,GAAqB,UAASzF,IAAT,EAAeO,IAAf,EAAoB;;QAE/B/D,SAAS,IAAI6I,MAAJ,EAAf;QACMK,aAAanF,QAAQP,KAAKO,IAAhC;;WAEOA,IAAP,GAAcmF,UAAd;;QAEMC,WAAW,SAAXA,QAAW,CAAS3K,GAAT,EAAcC,MAAd,EAAsBE,KAAtB,EAA4B;eAClC0F,IAAP,CAAY7F,GAAZ,EAAiB0K,cAAczK,MAA/B,EAAuCE,KAAvC;KADJ;;WAIO4J,aAAP,GAAuB,YAAU;aACxBa,WAAL,CAAiBD,QAAjB;KADJ;;SAIKE,OAAL,CAAaF,QAAb;;WAEOnJ,MAAP;CAjBJ;;AAsBA6I,OAAOS,aAAP,GAAuB,UAAS9F,IAAT,EAAe7E,KAAf,EAAsBoF,IAAtB,EAA2B;;QAExC/D,SAAS,IAAI6I,MAAJ,EAAf;QACMK,aAAanF,QAAQpF,KAAR,IAAiB6E,KAAKO,IAAzC;;WAEOA,IAAP,GAAcmF,UAAd;;QAEMC,WAAW,SAAXA,QAAW,CAAS3K,GAAT,EAAcC,MAAd,EAAsBE,KAAtB,EAA4B;eAClC0F,IAAP,CAAY7F,GAAZ,EAAiB0K,cAAczK,MAA/B,EAAuCE,KAAvC;KADJ;;WAIO4J,aAAP,GAAuB,YAAU;aACxBa,WAAL,CAAiBD,QAAjB,EAA2BxK,KAA3B;KADJ;;SAIK8G,SAAL,CAAe0D,QAAf,EAAyBxK,KAAzB;;WAEOqB,MAAP;CAjBJ;;AAsBA6I,OAAOU,UAAP,GAAoB,UAAS/F,IAAT,EAAe7E,KAAf,EAAsBoF,IAAtB,EAA2B;;QAErC/D,SAAS,IAAI6I,MAAJ,EAAf;QACMK,aAAanF,QAAQpF,KAAR,IAAiB6E,KAAKO,IAAzC;WACOA,IAAP,GAAcmF,UAAd;;QAEMC,WAAW,SAAXA,QAAW,CAAS3K,GAAT,EAAcC,MAAd,EAAsBE,KAAtB,EAA4B;eAClC0F,IAAP,CAAY7F,GAAZ,EAAiB0K,cAAczK,MAA/B,EAAuCE,KAAvC;KADJ;;WAIO4J,aAAP,GAAuB,YAAU;aACxBa,WAAL,CAAiBD,QAAjB,EAA2BxK,KAA3B;KADJ;;SAIK6K,MAAL,CAAYL,QAAZ,EAAsBxK,KAAtB;;WAEOqB,MAAP;CAhBJ;;AAqBA6I,OAAOY,SAAP,GAAmB,UAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAuC;;iBAEzC,CAAC,CAACA,UAAf;;QAEM5J,SAAS,IAAI6I,MAAJ,EAAf;WACO9E,IAAP,GAAc4F,SAAd;;QAEME,KAAKH,OAAOI,gBAAP,IAA2BJ,OAAOK,WAAlC,IAAiDL,OAAOG,EAAnE;QACMG,MAAMN,OAAOO,mBAAP,IAA8BP,OAAOQ,cAArC,IAAuDR,OAAOM,GAA1E;;QAEMb,WAAW,SAAXA,QAAW,CAAS3K,GAAT,EAAa;eACnB6F,IAAP,CAAY7F,GAAZ,EAAiBmL,SAAjB;KADJ;;WAIOpB,aAAP,GAAuB,YAAU;YACzBlI,IAAJ,CAASqJ,MAAT,EAAiBC,SAAjB,EAA4BR,QAA5B,EAAsCS,UAAtC;KADJ;;OAIGvJ,IAAH,CAAQqJ,MAAR,EAAgBC,SAAhB,EAA2BR,QAA3B,EAAqCS,UAArC;;WAEO5J,MAAP;CApBJ,CAyBA;;ICrNMmK;iBAEUzF,KAAZ,EAAmBkC,OAAnB,EAA4B;;;;aAEnBG,OAAL,GAAe,EAAf;aACKlD,KAAL,GAAa,KAAb;aACKe,MAAL,GAAcF,KAAd;YACGA,KAAH,EACIA,MAAM0F,QAAN,CAAe1J,IAAf,CAAoB,IAApB;YACED,IAAI,IAAIkG,KAAJ,CAAU,IAAV,EAAgBC,WAAW,EAA3B,CAAV;aACKG,OAAL,CAAarG,IAAb,CAAkBD,CAAlB;aACK4J,aAAL,GAAqB5J,CAArB;;;;;;;;;iCAkBKmG,SAAS;;gBAER0D,YAAY,KAAKD,aAAvB;gBACME,YAAY,KAAKF,aAAL,GAAqB,IAAI1D,KAAJ,CAAU,IAAV,EAAgBC,OAAhB,CAAvC;iBACKG,OAAL,CAAarG,IAAb,CAAkB6J,SAAlB;;wBAEYD,SAAZ,EAAuBC,SAAvB;;mBAEOA,SAAP;;;;;;;gCAOG;;;;;;gCAMA;;iBAEDC,kBAAF,CAAqB,IAArB;;;;+BAIG;;iBAEDA,kBAAF,CAAqB,IAArB;gBACMC,OAAO,IAAIN,GAAJ,CAAQ,KAAKzF,KAAb,CAAb;wBACY,KAAK2F,aAAjB,EAAgCI,KAAKJ,aAArC;;mBAEOI,IAAP;;;;4BAGAlI,KAAK;;gBAECmI,QAAQ,KAAKC,QAAL,EAAd,CAFK;wBAGOpI,IAAI8H,aAAhB,EAA+BK,KAA/B,EAHK;mBAIE,IAAP;;;;gCAII;mBACG,KAAKhE,KAAL,CAAWsB,KAAE4C,aAAb,CAAP;;;;gCAGI;mBACG,KAAKlE,KAAL,CAAWsB,KAAE6C,aAAb,CAAP;;;;+BAGG;mBACI,KAAKnE,KAAL,CAAWsB,KAAE8C,YAAb,CAAP;;;;iCAGKtL,MAAM;mBACJ,KAAKkH,KAAL,CAAWsB,KAAE+C,gBAAb,EAA+BvL,IAA/B,CAAP;;;;+BAGG;;iBAEDgL,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBK,IAAhB;mBACO,IAAP;;;;6BAIC5L,MAAM2B,MAAK;mBACL,KAAKwF,MAAL,CAAYyB,KAAEiD,OAAd,EAAuB7L,IAAvB,EAA6B2B,IAA7B,CAAP;;;;8BAGEmK,KAAK;;iBAELC,wBAAF,CAA2BlK,SAA3B;iBACEuJ,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBS,KAAhB,CAAsBF,GAAtB;mBACO,IAAP;;;;oCAIO;;iBAELG,iBAAF,CAAoB,IAApB;mBACO,KAAK5E,KAAL,CAAWuB,KAAEsD,aAAb,CAAP;;;;iCAIKxJ,MAAM;iBACTuJ,iBAAF,CAAoB,IAApB;mBACO,KAAK7E,IAAL,CAAUwB,KAAEuD,WAAZ,EAAyBzJ,IAAzB,CAAP;;;;8BAGE0J,IAAI;;iBAEJhB,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBK,IAAhB,GAAuBzE,MAAvB,CAA8ByB,KAAEyD,QAAhC,EAA0CD,EAA1C;mBACO,IAAP;;;;uCAGW;;iBAEThB,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBK,IAAhB,GAAuBzE,MAAvB,CAA8ByB,KAAEyD,QAAhC,EAA0CzD,KAAEtJ,QAA5C;mBACO,IAAP;;;;8BAGE;mBACK,KAAK6H,MAAL,CAAYyB,KAAE0D,UAAd,CAAP;;;;8BAGEpL,GAAG;mBACE,KAAKiG,MAAL,CAAYyB,KAAE2D,YAAd,EAA4BrL,CAA5B,CAAP;;;;6BAGCA,GAAG;mBACG,KAAKiG,MAAL,CAAYyB,KAAE4D,WAAd,EAA2BtL,CAA3B,CAAP;;;;8BAGE6H,SAAkB;;;8CAANlJ,IAAM;oBAAA;;;mBACb,sBAAKoL,aAAL,EAAmB5D,KAAnB,uBAAyB0B,OAAzB,SAAqClJ,IAArC,EAAP;;;;+BAGGkJ,SAAkB;;;+CAANlJ,IAAM;oBAAA;;;iBAEhBuD,OAAL,GACI,uBAAK6H,aAAL,EAAmB9D,MAAnB,wBAA0B4B,OAA1B,SAAsClJ,IAAtC,EADJ,GAEI,uBAAK0L,QAAL,GAAgBK,IAAhB,IAAuBzE,MAAvB,wBAA8B4B,OAA9B,SAA0ClJ,IAA1C,GAAgDyH,KAAhD,CAAsDsB,KAAE8C,YAAxD,CAFJ;mBAGO,IAAP;;;;8BAIE3C,SAAkB;;;+CAANlJ,IAAM;oBAAA;;;iBAEfuD,OAAL,GACI,uBAAK6H,aAAL,EAAmB3D,KAAnB,wBAAyByB,OAAzB,SAAqClJ,IAArC,EADJ,GAEI,wBAAK0L,QAAL,GAAgBK,IAAhB,IAAuBtE,KAAvB,yBAA6ByB,OAA7B,SAAyClJ,IAAzC,EAFJ;mBAGO,IAAP;;;;8BAIEkJ,SAAkB;;;+CAANlJ,IAAM;oBAAA;;;iBAEfuD,OAAL,GACI,uBAAK6H,aAAL,EAAmB/D,KAAnB,wBAAyB6B,OAAzB,SAAqClJ,IAArC,EADJ,GAEI,wBAAK0L,QAAL,GAAgBK,IAAhB,IAAuB1E,KAAvB,yBAA6B6B,OAA7B,SAAyClJ,IAAzC,GAA+CyH,KAA/C,CAAqDsB,KAAE8C,YAAvD,CAFJ;mBAGO,IAAP;;;;6BAIC3C,SAAkB;;;+CAANlJ,IAAM;oBAAA;;;iBAEduD,OAAL,GACI,uBAAK6H,aAAL,EAAmB7D,IAAnB,wBAAwB2B,OAAxB,SAAoClJ,IAApC,EADJ,GAEI,wBAAK0L,QAAL,GAAgBK,IAAhB,IAAuBxE,IAAvB,yBAA4B2B,OAA5B,SAAwClJ,IAAxC,GAA8CyH,KAA9C,CAAoDsB,KAAE8C,YAAtD,CAFJ;mBAGO,IAAP;;;;4BAIA1L,MAAM;;iBAEJyM,kBAAF,CAAqBzM,IAArB;iBACEoL,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBmB,GAAhB,CAAoB1M,IAApB;mBACO,IAAP;;;;gCAII;;iBAEFoL,kBAAF,CAAqB,IAArB;;gBAEMuB,eAAe,IAAIlD,MAAJ,EAArB;;gBAEMyB,YAAY,KAAKD,aAAvB;gBACME,YAAY,KAAKF,aAAL,GAAqB,IAAI1D,KAAJ,CAAU,IAAV,EAAgB,CAACoF,YAAD,CAAhB,CAAvC;iBACKhF,OAAL,CAAarG,IAAb,CAAkB6J,SAAlB;;gBAEM3D,UAAU0D,UAAUrD,QAA1B;gBACMjF,MAAM4E,QAAQ1H,MAApB;iBACK,IAAI+C,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B;oBACpBmC,IAAIwC,QAAQ3E,CAAR,CAAV;kBACE+J,SAAF,CAAYD,YAAZ;;;mBAGG,IAAP;;;;4BAGAhE,MAAM;;iBAEJoD,wBAAF,CAA2BlK,SAA3B;iBACEuJ,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBnM,GAAhB,CAAoBuJ,IAApB;mBACO,IAAP;;;;kCAIMA,MAAM;;iBAEVoD,wBAAF,CAA2BlK,SAA3B;iBACEuJ,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBsB,SAAhB,CAA0BlE,IAA1B;mBACO,IAAP;;;;+BAIGE,MAAM;;iBAEPkD,wBAAF,CAA2BlK,SAA3B;iBACEuJ,kBAAF,CAAqB,IAArB;;iBAEKG,QAAL,GAAgBlM,MAAhB,CAAuBwJ,IAAvB;mBACO,IAAP;;;;+BAIG7I,MAAM;;iBAEP+L,wBAAF,CAA2BlK,SAA3B;iBACE4K,kBAAF,CAAqBzM,IAArB;iBACEoL,kBAAF,CAAqB,IAArB;;iBAEKG,QAAL,GAAgBuB,MAAhB,CAAuB9M,IAAvB;mBACO,IAAP;;;;oCAIQ;;iBAENoL,kBAAF,CAAqB,IAArB;iBACKG,QAAL,GAAgBwB,SAAhB;mBACO,IAAP;;;;mCAIO;;;;;kCAID;;gBAEF,KAAKlM,IAAT,EACI,OAAO,IAAP;;iBAEC4D,KAAL,GAAa,IAAb;;gBAEMuI,SAAS,KAAKrF,OAApB;;;;;;;qCAEgBqF,MAAhB,8HAAwB;wBAAb3L,CAAa;;sBAClB4E,OAAF;;;;;;;;;;;;;;;;;mBAGG,IAAP;;;;+BA1QO;mBACA,KAAKxB,KAAZ;;;;+BAGU;mBACH,KAAKwG,aAAL,CAAmBrD,QAA1B;;;;+BAGQ;mBACD,KAAKpC,MAAZ;;;;;;;;;AA0QR,SAASyH,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;;QAE3BC,WAAWF,OAAOrF,QAAxB;QACMwF,WAAWF,OAAOtF,QAAxB;;QAEMjF,MAAMwK,SAAStN,MAArB;;SAEK,IAAI+C,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B;;YAEpByK,KAAKF,SAASvK,CAAT,CAAX;YACM0K,KAAK,IAAI9D,MAAJ,CAAW0D,MAAX,CAAX;WACGxI,IAAH,GAAU2I,GAAG3I,IAAb;iBACSrD,IAAT,CAAciM,EAAd;WACGX,SAAH,CAAaW,EAAb;;CAOR;;AC1TA,IAAMC,OAAO,EAAb;;;;AAIA,IAAMC,gBAAgB,CAElB,EAAC9I,MAAM,QAAP,EAAiB+I,KAAK,GAAtB,EAA2BC,OAAO,IAAlC,EAAwCtH,WAAW,IAAnD,EAFkB,EAGlB,EAAC1B,MAAM,MAAP,EAAiB+I,KAAK,GAAtB,EAA2BC,OAAO,IAAlC,EAAwCvD,QAAQ,IAAhD,EAAsDwD,MAAM,IAA5D,EAHkB,EAIlB,EAACjJ,MAAM,OAAP,EAAiB+I,KAAK,GAAtB,EAA2BC,OAAO,IAAlC,EAAwCE,OAAO,IAA/C,EAJkB,EAKlB,EAAClJ,MAAM,KAAP,EAAiB+I,KAAK,GAAtB,EAA2BI,QAAQ,IAAnC,EALkB,EAMlB,EAACnJ,MAAM,MAAP,EAAiB+I,KAAK,GAAtB,EAA2BK,YAAY,IAAvC,EAA6C/G,MAAM,IAAnD,EANkB,EAOlB,EAACrC,MAAM,MAAP,EAAiB+I,KAAK,GAAtB,EAPkB,EAQlB,EAAC/I,MAAM,KAAP,EAAiB+I,KAAK,GAAtB,EAA2BI,QAAQ,IAAnC,EARkB,EASlB,EAACnJ,MAAM,OAAP,EAAiB+I,KAAK,GAAtB,EATkB,EAUlB,EAAC/I,MAAM,OAAP,EAAiB+I,KAAK,GAAtB,EAVkB,EAWlB,EAAC/I,MAAM,MAAP,EAAiB+I,KAAK,GAAtB,EAA2BK,YAAY,IAAvC,EAA6C/G,MAAM,IAAnD,EAAyD4G,MAAM,IAA/D,EAXkB;AAYlB,EAACjJ,MAAM,QAAP,EAAiB+I,KAAK,GAAtB,EAA2BI,QAAQ,IAAnC,EAZkB,EAalB,EAACnJ,MAAM,OAAP,EAAiB+I,KAAK,GAAtB,EAA2BC,OAAO,IAAlC,EAAwCvD,QAAQ,IAAhD,EAbkB;;CAAtB;;;;;;AAqBA,IAAM4D,qBAAqB,EAA3B;AACA,IAAMC,mBAAmB,EAAzB;AACA,IAAMC,gBAAgB,EAAtB;AACA,IAAMC,gBAAgB,EAAtB;AACA,IAAMC,kBAAkB,EAAxB;AACA,IAAMC,sBAAsB,EAA5B;AACA,IAAMC,eAAe,EAArB;;AAEA,KAAI,IAAIzL,IAAI,CAAZ,EAAeA,IAAI4K,cAAc3N,MAAjC,EAAyC+C,GAAzC,EAA6C;;QAEnC0L,KAAKd,cAAc5K,CAAd,CAAX;QACM8B,OAAO4J,GAAG5J,IAAhB;QACM+I,MAAMa,GAAGb,GAAf;uBACmBA,GAAnB,IAA0Ba,EAA1B;qBACiB5J,IAAjB,IAAyB4J,EAAzB;kBACc5J,IAAd,IAAsB+I,GAAtB;kBACcA,GAAd,IAAqB/I,IAArB;;QAEG4J,GAAGT,MAAN,EAAa;qBACInJ,IAAb,IAAqB,IAArB;KADJ,MAEO,IAAG4J,GAAGZ,KAAN,EAAa;wBACAhJ,IAAhB,IAAwB,IAAxB;4BACoBA,IAApB,IAA4B,IAA5B;KAFG,MAIF,IAAG4J,GAAGR,UAAN,EAAkB;4BACCpJ,IAApB,IAA4B,IAA5B;;;;IAOF6J,WAEF,kBAAY7J,IAAZ,EAAkB8J,SAAlB,EAA6BC,KAA7B,EAAoCnP,KAApC,EAA2CoP,KAA3C,EAAkD1E,OAAlD,EAA0D;;;;SAEjDtF,IAAL,GAAYA,IAAZ;SACK8J,SAAL,GAAiBA,SAAjB;SACKC,KAAL,GAAaA,SAAS,KAAtB;SACKnP,KAAL,GAAaA,SAAS,IAAtB;SACKoP,KAAL,GAAaA,SAAS,IAAtB;SACK1E,OAAL,GAAeA,WAAW,KAA1B;;;AAOR,SAAS2E,KAAT,CAAeC,GAAf,EAAoB;;QAEVC,SAAS,EAAf;;;QAGIC,SAASF,IAAIG,KAAJ,CAAU,QAAV,EAAoBC,GAApB,CAAwB;eAAKC,EAAEC,IAAF,EAAL;KAAxB,EAAuCrC,MAAvC,CAA8C;eAAKoC,CAAL;KAA9C,CAAb;;SAEI,IAAIrM,KAAI,CAAZ,EAAeA,KAAIkM,OAAOjP,MAA1B,EAAkC+C,IAAlC,EAAsC;;YAE5BuM,QAAQL,OAAOlM,EAAP,CAAd;YACMwM,WAAYD,UAAU,GAAV,IAAiBA,UAAU,GAA5B,GAAmCA,KAAnC,GAA2CE,cAAcF,KAAd,CAA5D;;YAEG,OAAOC,QAAP,KAAoB,QAApB,IAAgCA,SAASvP,MAAT,GAAkB,CAArD,EACIgP,OAAOxN,IAAP,CAAY+N,QAAZ;;;aAICP,MAAT;;WAEOA,MAAP;;;AAIJ,SAASS,QAAT,CAAkBC,SAAlB,EAA4B;;QAEpBC,cAAc,IAAlB;;SAEI,IAAI5M,MAAI,CAAZ,EAAeA,MAAI2M,UAAU1P,MAA7B,EAAqC+C,KAArC,EAAyC;YAC/BmC,IAAIwK,UAAU3M,GAAV,CAAV;YACG,OAAOmC,CAAP,KAAa,QAAhB,EAA0B;iBACjB,IAAI0K,IAAI,CAAb,EAAgBA,IAAI1K,EAAElF,MAAtB,EAA8B4P,GAA9B,EAAmC;oBACzBC,SAAS3K,EAAE0K,CAAF,CAAf;oBACGD,WAAH,EAAgB;2CACWE,MAAvB;kCACc,KAAd;iBAFJ,MAIK;2CACsBA,MAAvB;;;;;;;AAQpB,SAASC,sBAAT,CAAgCD,MAAhC,EAAuC;;QAE/BE,cAAc,KAAlB;SACI,IAAIhN,MAAI,CAAZ,EAAeA,MAAI8M,OAAO7P,MAA1B,EAAkC+C,KAAlC,EAAsC;YAC5BiN,KAAKH,OAAO9M,GAAP,CAAX;YACGiN,GAAGrB,SAAH,KAAiB,QAApB,EAA8B;0BACZ,IAAd;;;;;QAKJsB,cAAc,KAAlB;SACI,IAAIlN,MAAI,CAAZ,EAAeA,MAAI8M,OAAO7P,MAA1B,EAAkC+C,KAAlC,EAAsC;;YAE5BiN,MAAKH,OAAO9M,GAAP,CAAX;YACMmN,eAAgBH,cAAc,MAAd,GAAuB,OAA7C;YACMpB,YAAYqB,IAAGrB,SAAH,GAAeqB,IAAGrB,SAAH,IAAgBuB,YAAjD;sBACcD,eAAe3B,gBAAgBK,SAAhB,CAA7B;YACG,CAACJ,oBAAoBI,SAApB,CAAJ,EACI,MAAM,IAAI1O,KAAJ,CAAU,4CAAV,CAAN;;;QAIL,CAACgQ,WAAJ,EACI,MAAM,IAAIhQ,KAAJ,CAAU,2CAAV,CAAN;;;AAKR,SAASkQ,sBAAT,CAAgCN,MAAhC,EAAuC;;QAE7BO,iBAAiBP,OAAO,CAAP,EAAUlB,SAAjC;QACM0B,mBAAmB7B,aAAa4B,cAAb,KAAgCA,cAAzD;;SAEI,IAAIrN,MAAI,CAAZ,EAAeA,MAAI8M,OAAO7P,MAA1B,EAAkC+C,KAAlC,EAAsC;YAC5BiN,KAAKH,OAAO9M,GAAP,CAAX;WACG4L,SAAH,GAAeqB,GAAGrB,SAAH,IAAgB0B,gBAAhB,IAAoC,MAAnD;;YAEGA,oBAAoBL,GAAGrB,SAAH,KAAiB0B,gBAAxC,EAAyD;kBAC/C,IAAIpQ,KAAJ,CAAU,uCAAV,CAAN;;;YAGA,CAACoQ,gBAAD,IAAqB7B,aAAawB,GAAGrB,SAAhB,CAAzB,EAAoD;kBAC1C,IAAI1O,KAAJ,CAAU,+BAAV,CAAN;;;YAGA,CAACoQ,gBAAD,IAAqB/B,gBAAgB0B,GAAGrB,SAAnB,CAAzB,EAAuD;kBAC7C,IAAI1O,KAAJ,CAAU,4BAAV,CAAN;;;;;AAQZ,SAASuP,aAAT,CAAuBT,GAAvB,EAA4B;;QAElBC,SAAS,EAAf;QACMC,SAASF,IAAIG,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmB;eAAKC,EAAEC,IAAF,EAAL;KAAnB,EAAkCrC,MAAlC,CAAyC;eAAKoC,CAAL;KAAzC,CAAf;;SAEI,IAAIrM,MAAI,CAAZ,EAAeA,MAAIkM,OAAOjP,MAA1B,EAAkC+C,KAAlC,EAAsC;;YAE5BuM,QAAQL,OAAOlM,GAAP,CAAd;YACM8M,SAASS,YAAYhB,KAAZ,CAAf;eACO9N,IAAP,CAAYqO,MAAZ;;;WAIGb,MAAP;;;AAIJ,SAASsB,WAAT,CAAqBvB,GAArB,EAA0B;;QAEhBwB,QAAQ,EAAd;QACMC,WAAWzB,IAAIG,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmB;eAAKC,EAAEC,IAAF,EAAL;KAAnB,EAAkCrC,MAAlC,CAAyC;eAAKoC,CAAL;KAAzC,CAAjB;;QAEMtM,MAAM0N,SAASxQ,MAArB;;SAEK,IAAI+C,MAAI,CAAb,EAAgBA,MAAID,GAApB,EAAyBC,KAAzB,EAA8B;;YAEpB0N,UAAUD,SAASzN,GAAT,CAAhB;YACMkM,SAASwB,QAAQvB,KAAR,CAAc,UAAd,EAA0BC,GAA1B,CAA8B;mBAAKC,EAAEC,IAAF,EAAL;SAA9B,EAA6CrC,MAA7C,CAAoD;mBAAKoC,CAAL;SAApD,CAAf;YACMsB,mBAAmBzB,OAAOtN,KAAP,EAAzB;YACMgP,YAAYF,QAAQ,CAAR,CAAlB;YACM9B,YAAYN,cAAcsC,SAAd,CAAlB;YACMC,QAAQjC,YAAY,CAAZ,GAAgB,CAA9B;YACM9J,QAAO6L,iBAAiBG,KAAjB,CAAuBD,KAAvB,CAAb;YACIhC,QAAQ,KAAZ;YACIzE,UAAU,KAAd;YACI1K,QAAQ,IAAZ;YACIoP,QAAQ,IAAZ;;eAEMI,OAAOjP,MAAb,EAAoB;gBACV8J,IAAImF,OAAOtN,KAAP,EAAV;;gBAEGmI,MAAM,GAAT,EAAa;wBACD,IAAR;;;;gBAIDA,MAAM,GAAT,EAAa;oBACNmF,OAAOjP,MAAV,EAAiB;wBACP0B,OAAOuN,OAAO,CAAP,CAAb;wBACGvN,SAAS,GAAZ,EAAgB;kCACF,IAAV;qBADJ,MAEO;gCACKA,IAAR;;iBALR,MAOO;8BACO,IAAV;;;;;gBAKLoI,MAAM,GAAN,IAAamF,OAAOjP,MAAvB,EAA8B;wBAClBiP,OAAO,CAAP,CAAR;;;;YAKFe,KAAK,IAAItB,QAAJ,CAAa7J,KAAb,EAAmB8J,SAAnB,EAA8BC,KAA9B,EAAqCnP,KAArC,EAA4CoP,KAA5C,EAAmD1E,OAAnD,CAAX;cACM3I,IAAN,CAAWwO,EAAX;;;WAIGO,KAAP;;;AAIJ7C,KAAKoB,KAAL,GAAaA,KAAb,CAGA;;ACrPA,IAAIgC,YAAY,CAAhB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA0B;;QAEhBlO,MAAMkO,IAAIhR,MAAhB;SACI,IAAI+C,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,GAAxB,EAA4B;YAClBkO,OAAOD,IAAIjO,CAAJ,CAAb;aACKoD,OAAL;;;;IAKF+K;mBAEUrM,IAAZ,EAAkB;;;;aAETsM,GAAL,GAAW,EAAEL,SAAb;aACKpM,KAAL,GAAaG,IAAb;aACKuM,OAAL,GAAe,IAAf;aACKC,SAAL,GAAiB,EAAjB;aACKnG,QAAL,GAAgB,EAAhB;aACKoG,SAAL,GAAiB,IAAIvL,GAAJ,EAAjB;aACKwL,OAAL,GAAe,IAAIxL,GAAJ,EAAf;aACKyL,QAAL,GAAgB,IAAIzL,GAAJ,EAAhB;aACKpB,KAAL,GAAa,KAAb;;;;;4BAaAoK,KAAK0C,SAASC,MAAK;;;gBAEbC,IAAI,IAAI1G,GAAJ,CAAQ,IAAR,CAAV;;gBAEG,CAAC8D,GAAJ,EACI,OAAO4C,CAAP;;gBAEEC,OAAOlE,KAAKoB,KAAL,CAAWC,GAAX,CAAb;;gBAEM8C,QAAQ,CAACF,CAAD,CAAd;gBACMG,UAAU,EAAhB;;iBAEI,IAAI/O,IAAI,CAAZ,EAAeA,IAAI6O,KAAK5R,MAAxB,EAAgC+C,GAAhC,EAAoC;oBAC1BwM,WAAWqC,KAAK7O,CAAL,CAAjB;oBACGwM,aAAa,GAAhB,EAAoB;wBACVlM,MAAMwO,MAAMA,MAAM7R,MAAN,GAAe,CAArB,CAAZ;0BACMwB,IAAN,CAAW6B,IAAIkI,IAAJ,EAAX;iBAFJ,MAGO,IAAIgE,aAAa,GAAjB,EAAqB;0BAClBwC,GAAN;iBADG,MAEA;yBACC,IAAInC,IAAI,CAAZ,EAAeA,IAAIL,SAASvP,MAA5B,EAAoC4P,GAApC,EAAwC;4BAC9BC,SAASN,SAASK,CAAT,CAAf;4BACMvM,OAAMwO,MAAMA,MAAM7R,MAAN,GAAe,CAArB,CAAZ;4BACG+C,MAAM,CAAN,IAAW6M,MAAK,CAAnB,EAAqB;wCACL,IAAZ,EAAkBvM,IAAlB,EAAuBwM,MAAvB;yBADJ,MAEO;uCACQ,IAAX,EAAiBxM,IAAjB,EAAsBwM,MAAtB;;;;;;qBAOPmC,WAAT,CAAqBxM,KAArB,EAA4BnC,GAA5B,EAAiCwM,MAAjC,EAAwC;;oBAE9BtJ,YAAY,EAAlB;oBACM+D,SAAS,EAAf;oBACMpD,OAAO,EAAb;oBACM4G,OAAO,EAAb;;qBAEI,IAAI/K,KAAI,CAAZ,EAAeA,KAAI8M,OAAO7P,MAA1B,EAAkC+C,IAAlC,EAAsC;;wBAE5BkP,OAAOpC,OAAO9M,EAAP,CAAb;wBACM4L,YAAYsD,KAAKtD,SAAvB;;wBAEGA,UAAUpI,SAAb,EACIA,UAAU/E,IAAV,CAAeyQ,IAAf;wBACDtD,UAAUzH,IAAb,EACIA,KAAK1F,IAAL,CAAUyQ,IAAV;wBACDtD,UAAUrE,MAAb,EACIA,OAAO9I,IAAP,CAAYyQ,IAAZ;wBACDtD,UAAUb,IAAb,EACIA,KAAKtM,IAAL,CAAUyQ,IAAV;;;;;qBAMJ,IAAIlP,MAAI,CAAZ,EAAeA,MAAIwD,UAAUvG,MAA7B,EAAqC+C,KAArC,EAAyC;wBAC/BkP,QAAO1L,UAAUxD,GAAV,CAAb;wBACMuB,OAAOkB,MAAM0M,IAAN,CAAWD,MAAKpN,IAAhB,EAAsB,CAACoN,MAAKrD,KAA5B,CAAb;wBACGqD,MAAK9H,OAAR,EAAgB;kCACFpH,GAAV,IAAe4G,OAAOI,WAAP,CAAmBzF,IAAnB,EAAyB2N,MAAKpD,KAA9B,CAAf;qBADJ,MAEO;kCACO9L,GAAV,IAAe4G,OAAOS,aAAP,CAAqB9F,IAArB,EAA2B2N,MAAKxS,KAAhC,EAAuCwS,MAAKpD,KAA5C,CAAf;;;;qBAIJ,IAAI9L,MAAI,CAAZ,EAAeA,MAAIuH,OAAOtK,MAA1B,EAAkC+C,KAAlC,EAAsC;wBAC5BkP,SAAO3H,OAAOvH,GAAP,CAAb;wBACMuB,QAAOkB,MAAM0M,IAAN,CAAWD,OAAKpN,IAAhB,EAAsB,CAACoN,OAAKrD,KAA5B,CAAb;2BACO7L,GAAP,IAAY4G,OAAOU,UAAP,CAAkB/F,KAAlB,CAAZ;;;oBAGE6N,YAAY5L,UAAUtB,MAAV,CAAiBqF,MAAjB,CAAlB;;oBAEImB,QAAJ,CAAa0G,SAAb,EAAwBC,KAAxB,GAAgCC,KAAhC,GAAwCC,KAAxC;oBACIhT,GAAJ,CAAQiT,OAAO/M,KAAP,EAAc0B,IAAd,CAAR;oBACIsL,QAAJ,CAAa1E,KAAKqB,GAAL,CAAS;2BAAKC,EAAEvK,IAAP;iBAAT,CAAb;;;qBAIK0N,MAAT,CAAgB/M,KAAhB,EAAuB0B,IAAvB,EAA4B;;oBAElB3F,IAAI,SAAJA,CAAI,CAASjC,GAAT,EAAc;;yBAEf,IAAIyD,MAAI,CAAb,EAAgBA,MAAImE,KAAKlH,MAAzB,EAAiC+C,KAAjC,EAAsC;4BAC5BkP,OAAO/K,KAAKnE,GAAL,CAAb;4BACMuB,OAAOkB,MAAM0M,IAAN,CAAWD,KAAKpN,IAAhB,EAAsB,CAACoN,KAAKrD,KAA5B,CAAb;4BACGtK,KAAKmC,IAAL,EAAH,EACInH,IAAI2S,KAAKpN,IAAT,IAAiBP,KAAK4C,IAAL,EAAjB;;;2BAGD5H,GAAP;iBATJ;;uBAYOiC,CAAP;;;qBAIKkR,UAAT,CAAoBpP,GAApB,EAAwB;;;;;;;;;;;;;;;;;gCAmBrB;;gBAEA,KAAKsB,KAAR,EACI;;;;yBAIS,KAAKiF,QAAlB,EAPG;yBAQU,KAAKsB,QAAlB;yBACa,KAAKoG,SAAL,CAAerL,MAAf,EAAb;;;;;;;;;;;;;iBAaKoL,SAAL,GAAiB,EAAjB;iBACKnG,QAAL,GAAgB,EAAhB;iBACKoG,SAAL,CAAe/J,KAAf;iBACKgK,OAAL,CAAahK,KAAb;iBACKiK,QAAL,CAAcjK,KAAd;;;;kCAIK;;iBAEAA,KAAL;iBACKmL,MAAL,GAAc,IAAd;iBACK/N,KAAL,GAAa,IAAb;;;;oCAIQE,MAAK;;gBAET8N,QAAQ,IAAIzB,KAAJ,CAAUrM,IAAV,CAAZ;kBACM6N,MAAN,GAAe,IAAf;mBACOC,KAAP;;;;qCAISC,WAAU;;sBAETF,MAAV,GAAmB,KAAKA,MAAxB;iBACKA,MAAL,GAAcE,SAAd;mBACO,IAAP;;;;sCAuCUtO,MAAK;;gBAETuO,SAASC,OAAOC,MAAP,CAAczO,IAAd,CAAf;mBACOqB,KAAP,GAAe5B,WAAWkD,MAA1B;iBACKuK,QAAL,CAAcnL,GAAd,CAAkB/B,KAAKO,IAAvB,EAA6BgO,MAA7B;mBACOA,MAAP;;;;oCAIQhO,MAAMT,MAAK;;gBAEbgL,IAAI,IAAI7J,IAAJ,CAAS,IAAT,EAAeV,IAAf,EAAqBT,IAArB,CAAV;iBACKkN,SAAL,CAAejL,GAAf,CAAmBxB,IAAnB,EAAyBuK,CAAzB;mBACOA,CAAP;;;;6BAKCvK,MAAK;;mBAEC,KAAKmO,IAAL,CAAUnO,IAAV,KAAmB,KAAKoO,WAAL,CAAiBpO,IAAjB,EAAuBd,WAAW0B,IAAlC,CAA1B;;;;+BAKGZ,MAAK;;gBAEFuK,IAAI,KAAK4D,IAAL,CAAUnO,IAAV,CAAV;;gBAEGuK,CAAH,EACI,OAAOA,EAAE8D,MAAF,CAASnP,WAAWgB,MAApB,CAAP;;mBAEG,KAAKkO,WAAL,CAAiBpO,IAAjB,EAAuBd,WAAWgB,MAAlC,CAAP;;;;8BAKEF,MAAK;;gBAEDuK,IAAI,KAAK4D,IAAL,CAAUnO,IAAV,CAAV;;gBAEGuK,CAAH,EACI,OAAOA,EAAE8D,MAAF,CAASnP,WAAWoP,KAApB,CAAP;;gBAEEC,QAAQ,KAAKH,WAAL,CAAiBpO,IAAjB,EAAuBd,WAAWoP,KAAlC,CAAd;iBACKE,aAAL,CAAmBD,KAAnB;mBACOA,KAAP;;;;oCAOQE,OAAOC,UAAS;;gBAGlBvE,SAAS,EAAf;;;;;;qCACkBsE,KAAlB,8HAAwB;wBAAdzO,IAAc;;2BACbA,IAAP,IAAe,KAAKqN,IAAL,CAAUrN,IAAV,EAAgB0O,QAAhB,CAAf;;;;;;;;;;;;;;;;;mBAGGvE,MAAP;;;;oCAIQsE,OAAOC,UAAS;;gBAElBC,UAAU,KAAKC,WAAL,CAAiBH,KAAjB,EAAwBC,QAAxB,CAAhB;gBACMvE,SAAS,EAAf;;;;;;;sCAEewE,OAAf,mIAAwB;wBAAdpE,CAAc;;wBAChBA,CAAJ,EAAO;4BACGtI,aAAasI,EAAE3I,IAAF,EAAnB;4BACIK,UAAJ,EACIkI,OAAOI,EAAEvK,IAAT,IAAiBiC,WAAWxH,GAA5B;;;;;;;;;;;;;;;;;;mBAIL0P,MAAP;;;;;;;;kCAMK;;gBAEDxJ,QAAQ,IAAZ;;gBAEMwJ,SAAS,IAAIjJ,GAAJ,EAAf;gBACM2N,gBAAgB,IAAI3N,GAAJ,EAAtB;;;;;;;sCAE0BP,MAAM8L,SAAhC,mIAA0C;;wBAA/BqC,KAA+B;wBAA1BC,KAA0B;;2BAC/BvN,GAAP,CAAWsN,KAAX,EAAgBC,KAAhB;;;;;;;;;;;;;;;;;mBAGEpO,QAAQA,MAAM4L,OAApB,EAA4B;;oBAElByC,WAAWrO,MAAM8L,SAAvB;oBACMwC,SAAStO,MAAM+L,OAArB;oBACMwC,UAAUvO,MAAMgM,QAAtB;;oBAEG,CAACqC,SAASG,IAAb,EACI;;;;oBAIDF,OAAOE,IAAV,EAAe;wBACRN,cAAcM,IAAjB,EAAuB;;;;;;kDACDN,cAAc9Q,IAAd,EAAlB,mIAAwC;oCAA7B+Q,GAA6B;;oCACjC,CAACG,OAAOG,GAAP,CAAWN,GAAX,CAAJ,EACID,cAAcQ,MAAd,CAAqBP,GAArB;;;;;;;;;;;;;;;;qBAHZ,MAKO;;;;;;kDACwBG,OAAOK,OAAP,EAA3B,mIAA6C;;oCAAjCR,IAAiC;oCAA5BC,KAA4B;;8CAC3BvN,GAAd,CAAkBsN,IAAlB,EAAuBC,KAAvB;;;;;;;;;;;;;;;;;;;oBAKNQ,YAAYV,cAAcM,IAAd,GAAqBN,aAArB,GAAqCG,QAAvD;;;;;;;0CAEiBO,UAAUxR,IAAV,EAAjB,mIAAmC;4BAAzB+Q,KAAyB;;4BAC3B,CAAC3E,OAAOiF,GAAP,CAAWN,KAAX,CAAL,EAAsB;;gCAEZrP,OAAOyP,QAAQ3N,GAAR,CAAYuN,KAAZ,KAAoBE,SAASzN,GAAT,CAAauN,KAAb,CAAjC;gCACIrP,IAAJ,EACI0K,OAAO3I,GAAP,CAAWsN,KAAX,EAAgBrP,IAAhB;;;;;;;;;;;;;;;;;;;mBAMT0K,MAAP;;;;6BAKCnK,MAAM0O,UAAS;;gBAEVc,YAAY,KAAKrB,IAAL,CAAUnO,IAAV,CAAlB;gBACGwP,SAAH,EACI,OAAOA,SAAP;;gBAEA7O,QAAQ,IAAZ;;mBAEMA,QAAQA,MAAM4L,OAApB,EAA4B;;oBAElB0C,SAAStO,MAAM+L,OAArB;;;oBAGGuC,OAAOE,IAAP,IAAe,CAACF,OAAOG,GAAP,CAAWpP,IAAX,CAAnB,EAAoC;;;;oBAI9BgO,SAASrN,MAAMgM,QAAN,CAAepL,GAAf,CAAmBvB,IAAnB,CAAf;;oBAEGgO,MAAH,EACI,OAAOA,MAAP;;oBAEEzD,IAAI5J,MAAMwN,IAAN,CAAWnO,IAAX,CAAV;;oBAEGuK,CAAH,EACI,OAAOA,CAAP;;;gBAILmE,QAAH,EACI,MAAM,IAAItT,KAAJ,CAAU,oBAAoB4E,IAApB,GAA2B,aAArC,CAAN;;mBAEG,IAAP;;;;kCAIMA,MAAM0O,UAAS;;gBAEjBe,aAAa,KAAjB;gBACMD,YAAY,KAAKrB,IAAL,CAAUnO,IAAV,CAAlB;gBACGwP,SAAH,EACIC,aAAa,IAAb;;gBAEA9O,QAAQ,IAAZ;;mBAEMA,QAAQA,MAAM4L,OAApB,EAA4B;;oBAElB0C,SAAStO,MAAM+L,OAArB;;;oBAGGuC,OAAOE,IAAP,IAAe,CAACF,OAAOG,GAAP,CAAWpP,IAAX,CAAnB,EAAoC;;;;oBAI9BgO,SAASrN,MAAMgM,QAAN,CAAepL,GAAf,CAAmBvB,IAAnB,CAAf;;oBAEGgO,MAAH,EAAW;;wBAEJyB,UAAH,EACI,OAAOzB,MAAP;;iCAES,IAAb;;;;oBAIEzD,IAAI5J,MAAMwN,IAAN,CAAWnO,IAAX,CAAV;;oBAEGuK,CAAH,EAAM;;wBAECkF,UAAH,EACI,OAAOlF,CAAP;;iCAES,IAAb;;;;gBAKLmE,QAAH,EACI,MAAM,IAAItT,KAAJ,CAAU,oBAAoB4E,IAApB,GAA2B,aAArC,CAAN;;mBAEG,IAAP;;;;6BAICA,MAAM0O,UAAU;;gBAEXjP,OAAO,KAAKgN,SAAL,CAAelL,GAAf,CAAmBvB,IAAnB,CAAb;;gBAEG,CAACP,IAAD,IAASiP,QAAZ,EACI,MAAM,IAAItT,KAAJ,CAAU,oBAAoB4E,IAApB,GAA2B,aAArC,CAAN;;mBAEGP,QAAQ,IAAf;;;;oCAIQiQ,QAAO;;gBAEZC,MAAMC,OAAN,CAAcF,MAAd,CAAH,EACI,OAAO,KAAKG,gBAAL,CAAsBH,MAAtB,CAAP,CADJ,KAEK,IAAG,QAAOA,MAAP,yCAAOA,MAAP,OAAkB,QAArB,EACD,OAAO,KAAKI,eAAL,CAAqBJ,MAArB,CAAP;;kBAEE,IAAItU,KAAJ,CAAU,kDAAV,CAAN;;;;;;;yCAKa2U,YAAYC,WAAU;;gBAE7B3O,OAAO,EAAb;;;;;;;sCAEe0O,UAAf,mIAA0B;wBAAhBE,CAAgB;;wBAChB1F,IAAI,KAAK8C,IAAL,CAAU4C,EAAEjQ,IAAZ,CAAV;sBACEkQ,WAAF,CAAcD,EAAElB,KAAhB,EAAuBkB,EAAErV,KAAF,IAAW,IAAlC;yBACK+B,IAAL,CAAU4N,CAAV;;;;;;;;;;;;;;;;;gBAGArM,IAAI,CAAR;;;;;;sCACemD,IAAf,mIAAoB;wBAAVkJ,EAAU;;wBACV0F,KAAIF,WAAW7R,CAAX,CAAV;uBACEiS,OAAF,CAAUF,GAAErV,KAAF,IAAW,IAArB;;;;;;;;;;;;;;;;;mBAGG,IAAP;;;;;;;wCAMYwV,WAAU;;gBAEhB/O,OAAO,EAAb;;iBAEI,IAAM5D,CAAV,IAAe2S,SAAf,EAAyB;oBACf/Q,IAAI+Q,UAAU3S,CAAV,CAAV;oBACM8M,IAAI,KAAK8C,IAAL,CAAU5P,CAAV,CAAV;kBACEyS,WAAF,CAAc7Q,CAAd;qBACK1C,IAAL,CAAU4N,CAAV;;;;;;;;sCAGWlJ,IAAf,mIAAoB;wBAAVkJ,GAAU;;wBACd4F,OAAF;;;;;;;;;;;;;;;;;mBAGG,IAAP;;;;+BAlfO;mBAAS,KAAKtQ,KAAZ;;;;+BACF;mBAAS,KAAKC,KAAZ;;;;+BAEC;;mBAEH,KAAK0M,SAAL,CAAelC,GAAf,CAAmB,UAACC,CAAD;uBAAOA,CAAP;aAAnB,CAAP;;;;+BAiLS;mBAAS,KAAKgC,OAAZ;;6BAEJwB,WAAU;;gBAEXsC,YAAY,KAAKxC,MAAvB;;gBAEGwC,cAActC,SAAjB,EACI;;gBAEDsC,SAAH,EAAc;oBACJnS,IAAImS,UAAU7D,SAAV,CAAoBhM,OAApB,CAA4B,IAA5B,CAAV;0BACUgM,SAAV,CAAoB/L,MAApB,CAA2BvC,CAA3B,EAA8B,CAA9B;;;iBAGCqO,OAAL,GAAewB,SAAf;;gBAEGA,SAAH,EAAc;0BACAvB,SAAV,CAAoB7P,IAApB,CAAyB,IAAzB;;;mBAGG,IAAP;;;;6BAIO0E,MAAK;;;;;;;uCAEMA,IAAlB,wIAAuB;wBAAbrB,IAAa;;yBACd0M,OAAL,CAAalL,GAAb,CAAiBxB,IAAjB,EAAuB,IAAvB;;;;;;;;;;;;;;;;;+BAKI;mBAAS2P,MAAMW,IAAN,CAAW,KAAK5D,OAAL,CAAa3O,IAAb,EAAX,CAAP;;;;IAkSlB;;ACrhBA,IAAMwS,WAAS,EAAf;;AAEA,IAAIC,cAAc,EAAlB;AACA,IAAIC,UAAU,KAAd;;AAEAF,SAAO7K,SAAP,GAAmB,UAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAuC;;QAEhD5J,SAAS6I,OAAOY,SAAP,CAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,UAApC,CAAf;WACO,IAAIO,GAAJ,CAAQ,IAAR,EAAc,CAACnK,MAAD,CAAd,CAAP;CAHJ;;AAQAsU,SAAOhV,OAAP,GAAiB,UAASD,IAAT,EAAc;;gBAEfqB,IAAZ,CAAiBrB,IAAjB;;QAEG,CAACmV,OAAJ,EAAa;;kBACC,IAAV;YACI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,qBAA5C,EAAmEA,sBAAsBJ,SAAOK,KAA7B,EAAnE,KACKC,QAAQC,QAAR,CAAiBP,SAAOK,KAAxB;;CAPb;;AAYAL,SAAO5P,KAAP,GAAe,UAASX,IAAT,EAAc;;YAEjB+Q,GAAR,CAAY,MAAZ;QACMtT,IAAIoL,KAAKoB,KAAL,CAAW,0EACjB,6EADM,CAAV;;;;;;;6BAGsBxM,CAAtB,8HAAwB;gBAAdiN,QAAc;;gBACjB,OAAOA,QAAP,KAAoB,QAAvB,EAAgC;wBACpBqG,GAAR,CAAYrG,QAAZ;;;;;;;;sCAGgBA,QAApB,mIAA6B;wBAAnBM,MAAmB;;;;;;8CACPA,MAAlB,mIAAyB;gCAAfoC,IAAe;;oCACb2D,GAAR,CAAY3D,KAAKpN,IAAjB,EAAuBoN,KAAKtD,SAA5B,EAAuCsD,KAAKrD,KAA5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAKJgH,GAAR,CAAYtT,CAAZ;;YAEQsT,GAAR,CAAY,UAAZ,EAAwB/Q,IAAxB;WACO,IAAIqM,KAAJ,CAAUrM,IAAV,CAAP;CArBJ;;AAwBAuQ,SAAOK,KAAP,GAAe,YAAU;;cAEX,KAAV;;QAEII,SAAS,CAAb;QACIC,IAAIT,WAAR;kBACc,EAAd;;WAEMS,EAAE9V,MAAR,EAAgB;;eAEL8V,EAAE9V,MAAT,EAAiB;gBACPG,OAAO2V,EAAEnU,KAAF,EAAb;iBACKtB,OAAL;;;YAGAgV,WAAJ;sBACc,EAAd;;;YAGGQ,SAAS,EAAZ,EACI,MAAM,IAAI5V,KAAJ,CAAU,gCAAV,EAA4C6V,CAA5C,CAAN;;CApBZ,CA4BA;;AC/EA;;;;;;;"}
{"version":3,"file":"catbus.umd.js","sources":["../src/flib.js","../src/packet.js","../src/dataTypes.js","../src/subscriberList.js","../src/data.js","../src/wave.js","../src/pool.js","../src/frame.js","../src/wire.js","../src/waveDef.js","../src/bus.js","../src/nyan.js","../src/stream.js","../src/nyanBus.js","../src/scope.js","../src/catbus.js","../src/main.js"],"sourcesContent":["\nimport Catbus from './catbus.js';\n\nfunction ALWAYS_TRUE(){\n    return true;\n}\n\nfunction ALWAYS_FALSE(){\n    return false;\n}\n\n\nfunction TO_SOURCE(msg, source) {\n    return source;\n}\n\nfunction TO_TOPIC(msg, source, topic) {\n    return topic;\n}\n\nfunction TO_MSG(msg) {\n    return msg;\n}\n\nfunction NOOP(){\n\n}\n\n\nfunction FUNCTOR(val) {\n    return (typeof val === 'function') ? val : function() { return val; };\n}\n\nconst Func = {\n\n\n    ASSERT_NEED_ONE_ARGUMENT: function(args){\n        if(args.length < 1)\n            throw new Error('Method requires at least one argument.');\n    },\n\n    ASSERT_IS_FUNCTION: function(func){\n        if(typeof func !== 'function')\n            throw new Error('Argument [func] is not of type function.');\n    },\n\n    getAlwaysTrue: function(){\n       return function(){ return true;}\n    },\n\n    getBatchTimer: function(){\n        const pool = this;\n        return function() {\n            Catbus.enqueue(pool);\n        }\n    },\n\n    getSyncTimer: function(){\n        const pool = this;\n        return function() {\n            pool.release(pool);\n        }\n    },\n\n    getDeferTimer: function(){\n        const pool = this;\n        return function() {\n            setTimeout(pool.release, 0, pool);\n        }\n    },\n\n    getThrottleTimer: function(fNum){\n\n        const pool = this;\n        fNum = FUNCTOR(fNum);\n        let wasEmpty = false;\n        let timeoutId = null;\n        let msgDuringTimer = false;\n        const auto = pool.keep.auto;\n\n        function timedRelease(fromTimeout){\n\n            if(pool.stream.dead)\n                return;\n\n            const nowEmpty = pool.keep.isEmpty;\n\n            if(!fromTimeout){\n                if(!timeoutId) {\n                    pool.release(pool);\n                    wasEmpty = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                } else {\n                    msgDuringTimer = true;\n                }\n                return;\n            }\n\n            if(nowEmpty){\n                if(wasEmpty){\n                    // throttle becomes inactive\n                } else {\n                    // try one more time period to maintain throttle\n                    wasEmpty = true;\n                    msgDuringTimer = false;\n                    timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n                }\n            } else {\n                pool.release(pool);\n                wasEmpty = false;\n                timeoutId = setTimeout(timedRelease, fNum.call(pool), true);\n            }\n\n        }\n\n        return timedRelease;\n\n    },\n\n    getQueue: function(n){\n\n        n = n || Infinity;\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n        };\n\n        f.isBuffer = ALWAYS_TRUE;\n\n        f.next = function(){\n            return buffer.shift();\n        };\n\n        f.isEmpty = function(){\n            return buffer.length === 0;\n        };\n\n        f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getScan: function(func, seed){\n\n        const hasSeed = arguments.length === 2;\n        let acc;\n        let initMsg = true;\n\n        const f = function(msg, source){\n\n            if(initMsg){\n                initMsg = false;\n                if(hasSeed){\n                    acc = func(seed, msg, source);\n                } else {\n                    acc = msg;\n                }\n            } else {\n                acc = func(acc, msg, source);\n            }\n\n            return acc;\n\n        };\n\n        f.reset = NOOP;\n\n        f.next = f.content = function(){\n            return acc;\n        };\n\n\n        return f;\n    },\n\n    getGroup: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            if(g) {\n                hash[g] = msg;\n            } else { // no source, copy message props into hash to merge nameless streams of key data\n                for(const k in msg){\n                    hash[k] = msg[k];\n                }\n            }\n\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n    getHash: function(groupBy){\n\n        groupBy = groupBy || TO_SOURCE;\n        const hash = {};\n\n        const f = function(msg, source){\n\n            const g = groupBy(msg, source);\n            hash[g] = msg;\n            return hash;\n\n        };\n\n        f.reset = function(){\n            for(const k in hash){\n                delete hash[k];\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return hash;\n        };\n\n        return f;\n\n    },\n\n\n    getKeepLast: function(n){\n\n        if(!n || n < 0) {\n\n            let last;\n\n            const f = function(msg, source){\n                return last = msg;\n            };\n\n            f.reset = function(){\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return last;\n            };\n\n            return f;\n\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            if(buffer.length > n)\n                buffer.shift();\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n\n\n    getKeepFirst: function(n){\n\n        if(!n || n < 0) {\n\n            let firstMsg;\n            let hasFirst = false;\n            const f = function (msg, source) {\n                return hasFirst ? firstMsg : firstMsg = msg;\n            };\n\n            f.reset = function(){\n                firstMsg = false;\n                f.isEmpty = true;\n            };\n\n            f.next = f.content = function(){\n                return firstMsg;\n            };\n\n            return f;\n        }\n\n        const buffer = [];\n\n        const f = function(msg, source){\n\n            if(buffer.length < n)\n                buffer.push(msg);\n            return buffer;\n\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getKeepAll: function(){\n\n        const buffer = [];\n\n        const f = function(msg, source){\n            buffer.push(msg);\n            return buffer;\n        };\n\n        f.reset = function(){\n            while(buffer.length) {\n                buffer.shift();\n            }\n            f.isEmpty = true;\n        };\n\n        f.next = f.content = function(){\n            return buffer;\n        };\n\n        return f;\n\n    },\n\n    getWhenCount: function(n) {\n\n        let latched = false;\n\n        const f = function(messages){\n            latched = latched || messages.length >= n;\n            return latched;\n        };\n\n        f.reset = function(){\n            latched = false;\n        };\n\n        return f;\n\n    },\n\n    getWhenKeys: function(keys) {\n\n        const keyHash = {};\n        const len = keys.length;\n\n        for(let i = 0; i < len; i++){\n            const k = keys[i];\n            keyHash[k] = true;\n        }\n\n        let latched = false;\n\n        const f = function (messagesByKey) {\n\n            if(latched)\n                return true;\n\n            for (let i = 0; i < len; i++) {\n                const k = keys[i];\n                if (!messagesByKey.hasOwnProperty(k))\n                    return false;\n            }\n\n            return latched = true;\n\n        };\n\n        f.reset = function(){\n            latched = false;\n            for(const k in keyHash){\n                delete keyHash[k];\n            }\n        };\n\n        return f;\n\n    },\n\n    getHasKeys: function(keys, noLatch) {\n\n        let latched = false;\n        const len = keys.length;\n\n        return function (msg) {\n\n            if(latched || !len)\n                return true;\n\n            for(let i = 0; i < len; i++) {\n\n                const k = keys[i];\n                if(!msg.hasOwnProperty(k))\n                    return false;\n            }\n\n            if(!noLatch)\n                latched = true;\n\n            return true;\n\n        }\n\n    },\n\n\n    getSkipDupes: function() {\n\n        let hadMsg = false;\n        let lastMsg;\n\n        return function (msg) {\n\n            const diff = !hadMsg || msg !== lastMsg;\n            lastMsg = msg;\n            hadMsg = true;\n            return diff;\n\n        }\n\n    },\n\n\n    ASSERT_NOT_HOLDING: function(bus){\n        if(bus.holding)\n            throw new Error('Method cannot be invoked while holding messages in the frame.');\n    },\n\n    ASSERT_IS_HOLDING: function(bus){\n        if(!bus.holding)\n            throw new Error('Method cannot be invoked unless holding messages in the frame.');\n    }\n\n};\n\nFunc.TO_SOURCE = TO_SOURCE;\nFunc.TO_TOPIC = TO_TOPIC;\nFunc.To_MSG = TO_MSG;\nFunc.FUNCTOR = FUNCTOR;\nFunc.ALWAYS_TRUE = ALWAYS_TRUE;\nFunc.ALWAYS_FALSE = ALWAYS_FALSE;\nFunc.NOOP = NOOP;\n\nexport default Func;","\nclass Packet {\n\n    constructor(msg, topic, source) {\n        this._msg       = msg;\n        this._topic     = topic;\n        this._source    = source;\n        this._timestamp = Date.now();\n    };\n\n    get msg() { return this._msg; };\n    get topic() { return this._topic; };\n    get source() { return this._source; };\n    get timestamp() { return this._timestamp; };\n\n}\n\nexport default Packet;","\n\nconst DATA_TYPES = {\n\n    ACTION:   'action',\n    MIRROR:   'mirror',\n    STATE:    'state',\n    COMPUTED: 'computed',\n    NONE:     'none',\n    ANY:      'any'\n\n};\n\nconst reverseLookup = {};\n\nfor(const p in DATA_TYPES){\n    const v = DATA_TYPES[p];\n    reverseLookup[v] = p;\n}\n\nfunction isValid(type){\n    return reverseLookup.hasOwnProperty(type);\n}\n\n\nexport { DATA_TYPES, isValid};\n\n","\nimport Packet from './packet.js';\nimport { DATA_TYPES } from './dataTypes';\n\nclass SubscriberList {\n\n    constructor(topic, data) {\n\n        this._topic = topic;\n        this._subscribers = [];\n        this._lastPacket = null;\n        this._data = data;\n        this._name = data._name;\n        this._dead = false;\n\n    };\n\n    get lastPacket() { return this._lastPacket; };\n    get data() { return this._data; };\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n    get topic() { return this._topic; };\n\n    handle(msg, topic, silently){\n\n        if(this.dead)\n            return;\n\n        topic = topic || this.topic;\n        let source = this.name;\n        let currentPacket = new Packet(msg, topic, source);\n\n        if(this.data.type !== DATA_TYPES.ACTION) // actions do not store data (ephemeral and immediate)\n            this._lastPacket = currentPacket;\n\n        let subscribers = [].concat(this._subscribers); // call original sensors in case subscriptions change mid loop\n        let len = subscribers.length;\n\n        if(!silently) {\n            for (let i = 0; i < len; i++) {\n                let s = subscribers[i];\n                typeof s === 'function' ? s.call(s, msg, currentPacket) : s.handle(msg, currentPacket);\n            }\n        }\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this._subscribers = null;\n        this._lastPacket = null;\n        this._dead = true;\n\n    };\n\n    add(watcher){\n\n        this._subscribers.push(watcher);\n\n    };\n\n    remove(watcher){\n\n        let i = this._subscribers.indexOf(watcher);\n\n        if(i !== -1)\n            this._subscribers.splice(i, 1);\n\n    };\n\n}\n\n\nexport default SubscriberList;\n\n","\nimport SubscriberList from './subscriberList.js';\nimport {isValid, DATA_TYPES} from './dataTypes.js';\n\nconst NO_TOPIC = '___NO_TOPIC___';\n\nclass Data {\n\n    constructor(scope, name, type) {\n\n        type = type || DATA_TYPES.NONE;\n\n        if(!isValid(type))\n            throw new Error('Invalid Data of type: ' + type);\n\n        this._scope      = scope;\n        this._name       = name;\n        this._type       = type;\n        this._dead       = false;\n\n        this._wildcardSubscriberList = new SubscriberList(null, this);\n        this._subscriberListsByTopic = new Map();\n\n    };\n\n    get scope() { return this._scope; };\n    get name() { return this._name; };\n    get type() { return this._type; };\n    get dead() { return this._dead; };\n\n    destroy(){\n\n        if(this.dead)\n            this._throwDead();\n        \n        for(const list of this._subscriberListsByTopic.values()){\n            list.destroy();\n        }\n\n        this._dead = true;\n\n    };\n    \n    _demandSubscriberList(topic){\n\n        topic = topic || undefined;\n        let list = this._subscriberListsByTopic.get(topic);\n\n        if(list)\n            return list;\n\n        list = new SubscriberList(topic, this);\n        this._subscriberListsByTopic.set(topic, list);\n\n        return list;\n        \n    };\n\n    verify(expectedType){\n\n        if(this.type === expectedType)\n            return this;\n\n        throw new Error('Data ' + this.name + ' requested as type ' + expectedType + ' exists as ' + this.type);\n\n    };\n\n    follow(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.subscribe(watcher, topic);\n        let packet = this.peek();\n\n        if(packet)\n            typeof watcher === 'function' ? watcher.call(watcher, packet.msg, packet) : watcher.handle(packet.msg, packet);\n\n        return this;\n\n    };\n\n    subscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).add(watcher);\n\n        return this;\n\n    };\n\n    monitor(watcher){\n\n        if(this.dead)\n            this._throwDead();\n\n        this._wildcardSubscriberList.add(watcher);\n\n        return this;\n\n    };\n\n    unsubscribe(watcher, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this._demandSubscriberList(topic).remove(watcher);\n        this._wildcardSubscriberList.remove(watcher);\n\n        return this;\n\n    };\n\n    topics(){\n\n        return this._subscriberListsByTopic.keys();\n\n    };\n\n    survey(){ // get entire key/value store by topic:lastPacket\n\n        const entries = this._subscriberListsByTopic.entries();\n        const m = new Map();\n        for (const [key, value] of entries) {\n            m.set(key, value.lastPacket);\n        }\n\n        return m;\n    };\n\n\n    peek(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const subscriberList = this._subscriberListsByTopic.get(topic);\n        return subscriberList ? subscriberList.lastPacket : null;\n\n    };\n\n\n    read(topic) {\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        let packet = this.peek(topic);\n        return (packet) ? packet.msg : undefined;\n\n    };\n\n\n    silentWrite(msg, topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(msg, topic, true);\n\n    };\n\n\n    write(msg, topic, silently){\n\n        if(this.dead)\n            this._throwDead();\n\n        if(this.type === DATA_TYPES.MIRROR)\n            throw new Error('Mirror Data: ' + this.name + ' is read-only');\n\n        topic = topic || undefined;\n        const list = this._demandSubscriberList(topic);\n        list.handle(msg, topic, silently);\n        this._wildcardSubscriberList.handle(msg, topic, silently);\n\n    };\n\n\n    refresh(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        const lastPacket = this.peek(topic);\n\n        if(lastPacket)\n            this.write(lastPacket._msg, topic);\n\n        return this;\n\n    };\n\n\n    toggle(topic){\n\n        if(this.dead)\n            this._throwDead();\n\n        topic = topic || undefined;\n        this.write(!this.read(topic), topic);\n\n        return this;\n\n    };\n\n    _throwDead(){\n\n        throw new Error('Data: ' + this.name + ' is already dead.');\n\n    };\n\n}\n\nexport default Data;\n\n\n\n\n\n\n\n\n\n\n\n\n","\nclass Wave {\n\n    constructor(){\n\n        this.process = this.pass;\n        this.action = null;\n\n    };\n\n    define(def) {\n        this.process = this[def.process];\n        this.action = def.stateful ? def.action(...def.args) : def.action;\n    }\n\n    handle(frame, wire, msg, source, topic) {\n        this.process(frame, wire, msg, source, topic)\n    };\n\n    pass(frame, wire, msg, source, topic) {\n\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    run(frame, wire, msg, source, topic) {\n\n        this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    msg(frame, wire, msg, source, topic) {\n\n        msg = this.action(msg, source, topic);\n        frame.emit(wire, msg, source, topic);\n\n    }\n\n    filter(frame, wire, msg, source, topic) {\n\n        if(!this.action(msg, source, topic))\n            return;\n        frame.emit(wire, msg, source, topic);\n\n    };\n\n    delay(frame, wire, msg, source, topic) {\n\n        function callback(){\n            frame.emit(wire, msg, source, topic);\n        }\n\n        setTimeout(callback, this.action(msg, source, topic) || 0, msg, source, topic);\n\n    };\n\n}\n\n\nexport default Wave;","\nimport F from './flib.js';\n\nclass Pool {\n\n    constructor(frame){\n\n        this.stream = stream;\n\n        this.keep = null;\n        this.when = F.ALWAYS_TRUE;\n        this.until = F.ALWAYS_TRUE;\n        this.timer = null; // throttle, debounce, defer, batch, sync\n        this.clear = F.ALWAYS_FALSE;\n        this.isPrimed = false;\n        this.source = stream.name;\n\n    };\n\n    handle(msg, source) {\n\n        this.keep(msg, source);\n        if(!this.isPrimed){\n            const content = this.keep.content();\n            if(this.when(content)){\n                this.isPrimed = true;\n                this.timer(this);\n            }\n        }\n\n    };\n\n    build(prop, factory, ...args){\n        this[prop] = factory.call(this, ...args);\n    };\n\n    release(pool) {\n\n        pool = pool || this;\n        const hasContent = !pool.keep.isEmpty;\n        const msg = hasContent && pool.keep.next();\n\n        if(pool.clear()){\n            pool.keep.reset();\n            pool.when.reset();\n        }\n\n        pool.isPrimed = false;\n\n        if(hasContent)\n            pool.stream.emit(msg, pool.stream.name);\n\n    };\n\n}\n\n\nexport default Pool;","\nimport Wave from './wave.js';\nimport Pool from './pool.js';\n\nclass Frame {\n\n    constructor(bus) {\n\n        this._bus = bus;\n        this._targets = []; // frames to join or fork into\n        this._index = bus._frames.length;\n        this._wireMap = new WeakMap(); // wires as keys, handlers/pools as values\n        this._holding = false; // begins pools allowing multiple method calls -- must close with a time operation\n        this._processDef = null; // wave or poll definition\n\n    };\n\n    define(def) {\n\n        this._processDef = def;\n        return this;\n\n    };\n\n    handle(wire, msg, source, topic){\n\n        const hasWire = this._wireMap.has(wire);\n        if(!hasWire)\n            this._wireMap.set(wire, this._createHandler());\n\n        const handler = this._wireMap.get(wire);\n        handler.handle(this, wire, msg, wire.name || source, topic);\n\n    };\n\n    emit(wire, msg, source, topic){\n\n        const len = this._targets.length;\n        for(let i = 0; i < len; i++){\n            const frame = this._targets[i];\n            frame.handle(wire, msg, source, topic);\n        }\n\n    };\n\n    _createHandler(){\n\n        const stream = this._holding ? new Pool() : new Wave();\n        if(this._processDef)\n            stream.define(this._processDef);\n        return stream;\n\n    };\n\n\n    get bus() {\n        return this._bus;\n    };\n\n    get index() {\n        return this._index;\n    };\n\n    get holding() {\n        return this._holding;\n    };\n\n    hold(){\n\n        this._holding = true;\n        return this;\n\n    };\n\n    pull(){\n\n        // todo pull from observers\n\n    };\n\n    target(frame) {\n\n        this._targets.push(frame);\n\n    };\n\n    destroy() {\n\n    };\n\n    // source(name) {\n    //\n    //     const streams = this._streams;\n    //     const len = streams.length;\n    //\n    //     for(let i = 0; i < len; i++){\n    //         const s = streams[i];\n    //         s.name = name;\n    //     }\n    //     return this;\n    //\n    // }\n    //\n    // run(func, stateful){\n    //     return this.applySyncProcess('doRun', func, stateful);\n    // };\n    //\n    // msg(fAny, stateful){\n    //     return this.applySyncProcess('doMsg', F.FUNCTOR(fAny), stateful);\n    // };\n    //\n    //\n    // transform(fAny, stateful){\n    //     return this.applySyncProcess('doTransform', F.FUNCTOR(fAny), stateful);\n    // };\n    //\n    // delay(fNum, stateful){\n    //     return this.applySyncProcess('doDelay', F.FUNCTOR(fNum), stateful);\n    // };\n    //\n    // filter(func, stateful){\n    //     return this.applySyncProcess('doFilter', func, stateful);\n    // };\n    //\n    // skipDupes() {\n    //     return this.applySyncProcess('doFilter', F.getSkipDupes, true);\n    // };\n    //\n    // hasKeys(keys) {\n    //     return this.applySyncProcess('doFilter', F.getHasKeys, true, keys);\n    // };\n    //\n    // clear(factory, ...args){\n    //     return this.buildPoolAspect('clear', factory, ...args);\n    // };\n    //\n    // // factory should define content and reset methods have signature f(msg, source) return f.content()\n    //\n    // reduce(factory, ...args){\n    //     return this.buildPoolAspect('keep', factory, ...args);\n    // };\n    //\n    // timer(factory, ...args){\n    //     return this.buildPoolAspect('timer', factory, ...args);\n    // };\n    //\n    // when(factory, ...args){\n    //     return this.buildPoolAspect('when', factory, ...args);\n    // };\n    //\n    // until(factory, ...args){\n    //     return this.buildPoolAspect('until', factory, ...args);\n    // };\n    //\n    // buildPoolAspect(aspect, factory, ...args){\n    //\n    //     if(aspect === 'timer')\n    //         this._holding = false;\n    //\n    //     this._poolAspects[aspect] = [factory, ...args];\n    //\n    //     const streams = this._streams;\n    //     const len = streams.length;\n    //\n    //     for(let i = 0; i < len; i++){\n    //\n    //         const s = streams[i];\n    //         const pool = s.pool;\n    //         pool.build(aspect, factory, ...args);\n    //\n    //     }\n    //\n    //     return this;\n    //\n    // };\n\n\n    \n}\n\nexport default Frame;\n\n\n","import F from './flib.js';\n\nclass Wire {\n\n    constructor(){\n\n        this.target = null; // a frame in a bus\n        this.dead = false;\n        this.name = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n\n    };\n\n    handle(msg, source, topic) {\n\n        if(!this.dead && this.target)\n            this.target.handle(this, msg, this.name || source, topic);\n\n        return this;\n\n    };\n\n    destroy(){\n\n        if(!this.dead && this.target){\n            this.dead = true;\n            this.cleanupMethod();\n        }\n\n    };\n\n}\n\n\n\nWire.fromMonitor = function(data, name){\n\n    const wire = new Wire();\n    const wireName = wire.name = name || data.name;\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, wireName, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire);\n    };\n\n    data.monitor(toWire);\n\n    return wire;\n\n};\n\n\n\nWire.fromSubscribe = function(data, topic, name, canPull){\n\n    const wire = new Wire();\n    const wireName = wire.name = name || topic || data.name;\n\n    const toWire = function(msg, source, topic){\n        wire.handle(msg, wireName, topic);\n    };\n\n    wire.cleanupMethod = function(){\n        data.unsubscribe(toWire, topic);\n    };\n\n    if(canPull){\n        wire.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = wireName || packet._source;\n                const topic = packet._topic;\n                wire.handle(msg, source, topic, wire);\n            }\n        }\n    }\n\n    data.subscribe(toWire, topic);\n\n    return wire;\n\n};\n\n\n\nWire.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const wire = new Wire();\n    wire.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toWire = function(msg){\n        wire.handle(msg, eventName);\n    };\n\n    wire.cleanupMethod = function(){\n        off.call(target, eventName, toWire, useCapture);\n    };\n\n    on.call(target, eventName, toWire, useCapture);\n\n    return wire;\n\n};\n\n\nexport default Wire;","\nclass WaveDef {\n\n    constructor(process, action, stateful, ...args){\n\n        this.process = process;\n        this.action = action;\n        this.stateful = stateful;\n        this.args = args;\n\n    };\n\n\n}\n\nexport default WaveDef;","\nimport Frame from './frame.js';\nimport F from './flib.js';\nimport Wire from './wire.js';\nimport WaveDef from './waveDef.js';\n\nclass Bus {\n\n    constructor(scope) {\n\n        this._frames = [];\n        this._wires = [];\n        this._dead = false;\n        this._scope = scope; // data scope\n        this._children = []; // from forks\n        this._parent = null;\n\n        if(scope)\n            scope._busList.push(this);\n\n        const f = new Frame(this);\n        this._frames.push(f);\n        this._currentFrame = f;\n\n    };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    get dead() {\n        return this._dead;\n    };\n\n    get holding() {\n        return this._currentFrame._holding;\n    };\n\n    get scope() {\n        return this._scope;\n    }\n\n\n\n    // NOTE: unlike most bus methods, this one returns a new current frame (not the bus!)\n\n    addFrame() {\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this);\n        this._frames.push(nextFrame);\n        lastFrame.target(nextFrame);\n        return nextFrame;\n\n    };\n\n\n    // create stream\n    spawn(){\n\n    }\n\n    // convert each stream into a bus, wiring prior streams, dump in array\n\n    split(){\n\n        F.ASSERT_NOT_HOLDING(this);\n\n    };\n\n    fork() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const fork = new Bus(this.scope);\n        fork.parent = this;\n        this._currentFrame.target(fork._currentFrame);\n\n        return fork;\n    };\n\n    back() {\n\n        if(!this._parent)\n            throw new Error('Cannot exit fork, parent does not exist!');\n\n        return this.parent;\n\n    };\n\n    join() {\n\n        const parent = this.back();\n        parent.add(this);\n        return parent;\n\n    }\n\n    add(bus) {\n\n        const frame = this.addFrame(); // wire from current bus\n        bus._currentFrame.target(frame); // wire from outside bus\n        return this;\n\n    };\n\n    defer() {\n        return this.timer(F.getDeferTimer);\n    };\n\n    batch() {\n        return this.timer(F.getBatchTimer);\n    };\n\n    sync() {\n        return this.timer(F.getSyncTimer);\n    };\n\n    throttle(fNum) {\n        return this.timer(F.getThrottleTimer, fNum);\n    };\n\n    hold() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold();\n        return this;\n\n    };\n\n    pull() {\n\n        const frame1 = this._frames[0];\n\n        if(frame1._streams.length > 0){\n            frame1.pull();\n            return this;\n        }\n\n        if(this._frames.length !== 1){\n            const frame2 = this._frames[1];\n            frame2.pull();\n        }\n\n        return this;\n\n    };\n\n    event(target, eventName, useCapture) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        const wire = Wire.fromEvent(target, eventName, useCapture);\n        wire.name = eventName;\n        wire.target = this.addFrame();\n        this._wires.push(wire);\n\n        return this;\n\n    };\n\n    // eventList(list) {\n    //\n    //     F.ASSERT_NOT_HOLDING(this);\n    //\n    //     const len = list.length;\n    //     const streams = [];\n    //\n    //     for(let i = 0; i < len; i++){\n    //         const e = list[i];\n    //         const eventName = e.eventName || e.name;\n    //         const name = e.name || e.eventName;\n    //         const s = Stream.fromEvent(e.target, eventName, e.useCapture);\n    //         s.name = name;\n    //         streams.push(s);\n    //     }\n    //\n    //     this.addFrame(streams);\n    //     return this;\n    //\n    // };\n\n    scan(func, seed){\n        return this.reduce(F.getScan, func, seed);\n    };\n\n    delay(num) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().delay(num);\n        return this;\n\n    };\n\n    willReset(){\n\n        F.ASSERT_IS_HOLDING(this);\n        return this.clear(F.getAlwaysTrue);\n\n    }\n\n    whenKeys(keys) {\n        return this.when(F.getWhenKeys, keys);\n    };\n\n    group(by) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, by);\n        return this;\n    };\n\n    groupByTopic() {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hold().reduce(F.getGroup, F.TO_TOPIC);\n        return this;\n    };\n\n    all() {\n        return this.reduce(F.getKeepAll);\n    };\n\n    first(n) {\n        return this.reduce(F.getKeepFirst, n);\n    };\n\n    last(n) {\n        return this.reduce(F.getKeepLast, n);\n    };\n\n    clear(factory, ...args) {\n        return this._currentFrame.clear(factory, ...args);\n    };\n\n    reduce(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.reduce(factory, ...args) :\n            this.addFrame().hold().reduce(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    timer(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.timer(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).timer(factory, ...args);\n        return this;\n\n    };\n\n    until(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.until(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).until(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    when(factory, ...args) {\n\n        this.holding ?\n            this._currentFrame.when(factory, ...args) :\n            this.addFrame().hold().reduce(F.getKeepLast).when(factory, ...args).timer(F.getSyncTimer);\n        return this;\n\n    };\n\n    run(func) {\n\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('run', func));\n        return this;\n\n    };\n\n    merge() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        const mergedStream = new Stream();\n\n        const lastFrame = this._currentFrame;\n        const nextFrame = this._currentFrame = new Frame(this, [mergedStream]);\n        this._frames.push(nextFrame);\n\n        const streams = lastFrame._streams;\n        const len = streams.length;\n        for (let i = 0; i < len; i++) {\n            const s = streams[i];\n            s.addTarget(mergedStream);\n        }\n\n        return this;\n    };\n\n    msg(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('msg', fAny));\n        return this;\n\n    };\n\n    transform(fAny) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().transform(fAny);\n        return this;\n\n    };\n\n    source(fStr) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().source(fStr);\n        return this;\n\n    };\n\n    filter(func) {\n\n        F.ASSERT_NEED_ONE_ARGUMENT(arguments);\n        F.ASSERT_IS_FUNCTION(func);\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('filter', func));\n        return this;\n\n\n    };\n\n    hasKeys(keys) {\n\n        F.ASSERT_NOT_HOLDING(this);\n        this.addFrame().hasKeys(keys);\n        return this;\n\n    };\n\n    skipDupes() {\n\n        F.ASSERT_NOT_HOLDING(this);\n\n        this.addFrame().define(new WaveDef('filter', F.getSkipDupes, true));\n        return this;\n\n    };\n\n    toStream() {\n        // merge, fork -> immutable stream?\n    };\n\n    destroy() {\n\n        if (this.dead)\n            return this;\n\n        this._dead = true;\n\n        const wires = this._wires;\n        const len = wires.length;\n        for (let i = 0; i < len; i++) {\n            const wire = wires[i];\n            wire.destroy();\n        }\n\n        return this;\n\n    };\n\n}\n\n\n\nexport default Bus;\n","\n\nconst Nyan = {};\n\n// then = applies to all words in a phrase\n// watch: ^ = action, need, event, watch | read, must\n// then:  run, read, attr, and, style, write, blast, filter\n\nconst operationDefs = [\n\n    {name: 'ACTION', sym: '^',  react: true, subscribe: true, need: true, solo: true},\n    {name: 'WIRE',   sym: '~',  react: true, follow: true}, // INTERCEPT\n    {name: 'WATCH',  sym: null, react: true, follow: true},\n    {name: 'EVENT',  sym: '@',  react: true, event: true},\n    {name: 'ALIAS',  sym: '(',  then: true, solo: true},\n    {name: 'METHOD', sym: '`',  then: true, solo: true},\n    {name: 'READ',   sym: null, then: true, read: true},\n    {name: 'ATTR',   sym: '#',  then: true, solo: true, output: true},\n    {name: 'AND',    sym: '&',  then: true },\n    {name: 'STYLE',  sym: '$',  then: true,  solo: true, output: true },\n    {name: 'WRITE',  sym: '=',  then: true,  solo: true },\n    {name: 'SPRAY',  sym: '<',  then: true },\n    {name: 'RUN',    sym: '*',  then: true, output: true },\n    {name: 'FILTER', sym: '>',  then: true }\n\n];\n\n// cat, dog | & meow, kitten {*log} | =puppy\n\n\n// todo make ! a trailing thingie, must goes away\n// trailing defs -- ! = needs message in data to continue, ? = data must exist or throw error\n// {name: 'BEGIN',  sym: '{'}, -- fork\n// {name: 'END',    sym: '}'}, -- back\n// {name: 'PIPE',   sym: '|'}, -- phrase delimiter\n// read = SPACE\n// - is data maybe (data point might not be present)\n// ? is object maybe (object might not be there)\n// () is rename\n\nconst operationsBySymbol = {};\nconst operationsByName = {};\nconst symbolsByName = {};\nconst namesBySymbol = {};\nconst reactionsByName = {};\nconst withReactionsByName = {};\nconst thenByName = {};\n\nfor(let i = 0; i < operationDefs.length; i++){\n\n    const op = operationDefs[i];\n    const name = op.name;\n    const sym = op.sym;\n\n    if(sym) {\n        operationsBySymbol[sym] = op;\n        namesBySymbol[sym] = name;\n    }\n\n    operationsByName[name] = op;\n    symbolsByName[name] = sym;\n\n    if(op.then){\n        thenByName[name] = true;\n    }\n\n    if(op.react) {\n        reactionsByName[name] = true;\n        withReactionsByName[name] = true;\n    }\n\n}\n\n\n\nclass NyanWord {\n\n    constructor(name, operation, maybe, need, topic, alias, monitor, extracts){\n\n        this.name = name;\n        this.operation = operation;\n        this.maybe = maybe || false;\n        this.need = need || false;\n        this.topic = topic || null;\n        this.alias = alias || null;\n        this.monitor = monitor || false;\n        this.extracts = extracts && extracts.length ? extracts : null; // possible list of message property pulls\n        // this.useCapture =\n\n    }\n\n}\n\nlet tickStack = [];\n\nfunction toTickStackString(str){\n\n\n    tickStack = [];\n    const chunks = str.split(/([`])/);\n    const strStack = [];\n\n    let ticking = false;\n    while(chunks.length){\n        const c = chunks.shift();\n        if(c === '`'){\n            ticking = !ticking;\n            strStack.push(c);\n        } else {\n            if(ticking) {\n                tickStack.push(c);\n            } else {\n                strStack.push(c);\n            }\n        }\n    }\n\n    const result = strStack.join('');\n    //console.log('stack res', result, tickStack);\n    return result;\n}\n\nfunction parse(str, isProcess) {\n\n\n    str = toTickStackString(str);\n\n    const sentences = [];\n\n    // split on curlies and remove empty chunks (todo optimize for parsing speed, batch loop operations?)\n    let chunks = str.split(/([{}]|-})/).map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const sentence = (chunk === '}' || chunk === '{' || chunk === '-}') ? chunk : parseSentence(chunk);\n\n        if(typeof sentence === 'string' || sentence.length > 0)\n            sentences.push(sentence);\n\n    }\n\n    return validate(sentences, isProcess);\n\n\n}\n\nfunction validate(sentences, isProcess){\n\n    const cmdList = [];\n    let firstPhrase = true;\n    \n    for(let i = 0; i < sentences.length; i++){\n        const s = sentences[i];\n        if(typeof s !== 'string') {\n\n            for (let j = 0; j < s.length; j++) {\n                const phrase = s[j];\n                if(firstPhrase && !isProcess) {\n                    validateReactPhrase(phrase);\n                    firstPhrase = false;\n                    cmdList.push({name: 'REACT', phrase: phrase});\n                }\n                else {\n                    validateProcessPhrase(phrase);\n                    cmdList.push({name: 'PROCESS', phrase: phrase});\n                }\n            }\n\n        } else if (s === '{') {\n            cmdList.push({name: 'FORK'});\n        } else if (s === '}') {\n            cmdList.push({name: 'BACK'});\n        } else if (s === '-}') {\n            cmdList.push({name: 'JOIN'});\n        }\n    }\n\n    return cmdList;\n}\n\n\nfunction validateReactPhrase(phrase){\n\n    let hasReaction = false;\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        const operation = nw.operation = nw.operation || 'WATCH';\n        hasReaction = hasReaction || reactionsByName[operation];\n        if(!withReactionsByName[operation])\n            throw new Error('This Nyan command cannot be in a reaction!');\n\n    }\n\n    if(!hasReaction)\n        throw new Error('Nyan commands must begin with an observation!');\n\n}\n\n\n\nfunction validateProcessPhrase(phrase){\n\n    const firstPhrase = phrase[0];\n    const firstOperation = firstPhrase.operation || 'READ';\n\n    if(!thenByName[firstOperation])\n        throw new Error('Illegal operation in phrase!'); // unknown or reactive\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const nw = phrase[i];\n        nw.operation = nw.operation || firstOperation;\n        if(nw.operation !== firstOperation){\n\n           // console.log('mult', nw.operation, firstOperation);\n            throw new Error('Multiple operation types in phrase (only one allowed)!');\n\n        }\n\n    }\n\n}\n\n\n\nfunction parseSentence(str) {\n\n    const result = [];\n    const chunks = str.split('|').map(d => d.trim()).filter(d => d);\n\n    for(let i = 0; i < chunks.length; i++){\n\n        const chunk = chunks[i];\n        const phrase = parsePhrase(chunk);\n        result.push(phrase);\n\n    }\n\n    return result;\n\n}\n\nfunction parsePhrase(str) {\n\n    const words = [];\n    const rawWords = str.split(',').map(d => d.trim()).filter(d => d);\n\n    const len = rawWords.length;\n\n    for (let i = 0; i < len; i++) {\n\n        const rawWord = rawWords[i];\n        //console.log('word=', rawWord);\n        const rawChunks = rawWord.split(/([(?!:.`)])/);\n        const chunks = [];\n        let inMethod = false;\n\n        // white space is only allowed between e.g. `throttle 200`, `string meow in the hat`\n\n        while(rawChunks.length){\n            const next = rawChunks.shift();\n            if(next === '`'){\n                inMethod = !inMethod;\n                chunks.push(next);\n            } else {\n                if(!inMethod){\n                    const trimmed = next.trim();\n                    if(trimmed)\n                        chunks.push(trimmed);\n                } else {\n                    chunks.push(next);\n                }\n            }\n        }\n\n        //console.log('to:', chunks);\n        const nameAndOperation = chunks.shift();\n        const firstChar = rawWord[0];\n        const operation = namesBySymbol[firstChar];\n        const start = operation ? 1 : 0;\n        const name = nameAndOperation.slice(start).trim();\n        const extracts = [];\n\n        // todo hack (rename)\n\n        let maybe = false;\n        let monitor = false;\n        let topic = null;\n        let alias = null;\n        let need = false;\n\n        if(operation === 'ALIAS'){\n            alias = chunks.shift();\n            chunks.shift(); // todo verify ')'\n        } else if (operation === 'METHOD'){\n                chunks.shift();\n                // const next = chunks.shift();\n                const next = tickStack.shift();\n                const i = next.indexOf(' ');\n                if(i === -1) {\n                    extracts.push(next);\n                } else {\n                    extracts.push(next.slice(0, i));\n                    if(next.length > i){\n                        extracts.push(next.slice(i + 1));\n                    }\n                }\n\n            while(chunks.length){ chunks.shift(); }\n        }\n\n        while(chunks.length){\n\n            const c = chunks.shift();\n\n            switch(c){\n\n                case '.':\n\n                    const prop = chunks.length && chunks[0]; // todo assert not operation\n                    const silentFail = chunks.length > 1 && (chunks[1] === '?');\n\n                    if(prop) {\n                        extracts.push({name: prop, silentFail: silentFail});\n                        chunks.shift(); // remove word from queue\n                        if(silentFail)\n                            chunks.shift(); // remove ? from queue\n                    }\n\n                    break;\n\n                case '?':\n\n                    maybe = true;\n                    break;\n\n                case '!':\n\n                    need = true;\n                    break;\n\n                case ':':\n\n                    if(chunks.length){\n                        const next = chunks[0];\n                        if(next === '('){\n                            monitor = true;\n                        } else {\n                            topic = next;\n                            chunks.shift(); // remove topic from queue\n                        }\n                    } else {\n                        monitor = true;\n                    }\n\n                    break;\n\n                case '(':\n\n                    if(chunks.length){\n                        alias = chunks.shift(); // todo assert not operation\n                    }\n\n                    break;\n\n\n\n            }\n\n        }\n\n        alias = alias || topic || name;\n        const nw = new NyanWord(name, operation, maybe, need, topic, alias, monitor, extracts);\n        words.push(nw);\n\n    }\n\n    return words;\n\n}\n\nNyan.parse = parse;\n\n\nexport default Nyan;\n\n","import Pool from './pool.js';\nimport F from './flib.js';\n\nclass Stream {\n\n    constructor(){\n\n        this.dead = false;\n        this.children = [];\n        this.name = null;\n        this.pool = null;\n        this.cleanupMethod = F.NOOP; // to cleanup subscriptions\n        this.pull = F.NOOP; // to retrieve and emit stored values from a source\n        this.processMethod = this.emit;\n        this.actionMethod = null; // for run, transform, filter, name, delay\n\n    };\n\n    handle(msg, source) {\n\n        if(this.dead) // true if canceled or disposed midstream\n            return this;\n\n        this.processMethod(msg, this.name || source); // handle method = doDelay, doGroup, doHold, , doFilter\n\n        return this;\n\n    };\n\n    drop(stream){\n\n        const children = this.children;\n        const i = children.indexOf(stream);\n\n        if(i !== -1)\n            children.splice(i, 1);\n\n    };\n\n    addTarget(stream){\n        this.children.push(stream);\n    };\n\n    emit(msg, source, topic, thisStream){\n\n        thisStream = thisStream || this; // allow callbacks with context instead of bind (massively faster)\n        source = thisStream.name || source;\n\n        const children = thisStream.children;\n        const len = children.length;\n\n        for(let i = 0; i < len; i++){\n            const c = children[i];\n            c.handle(msg, source, topic);\n        }\n\n    };\n\n    doFilter(msg, source, topic) {\n\n        if(!this.actionMethod(msg, source, topic))\n            return;\n        this.emit(msg, source, topic);\n\n    };\n\n\n    doMsg(msg, source, topic) {\n\n        msg = this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    doTransform(msg, source, topic) {\n\n\n        msg = this.actionMethod.msg ? this.actionMethod.msg(msg, source, topic) : msg;\n        source = this.actionMethod.source ? this.actionMethod.source(msg, source, topic) : source;\n        topic = this.actionMethod.topic ? this.actionMethod.topic(msg, source, topic) : topic;\n        this.emit(msg, source, topic);\n\n    };\n\n    doDelay(msg, source, topic) {\n\n        // todo add destroy -> kills timeout\n        // passes 'this' to avoid bind slowdown\n        setTimeout(this.emit, this.actionMethod(msg, source, topic) || 0, msg, source, topic, this);\n\n    };\n\n    doSource(msg, source, topic) {\n\n        this.name = this.actionMethod(); // todo shoehorned -- this needs it's own setup\n        //source = this.actionMethod(msg, source, topic);\n        // this.name = function(){ return }\n        this.emit(msg, this.name || source, topic);\n\n    };\n\n\n    doRun(msg, source, topic) {\n\n        this.actionMethod(msg, source, topic);\n        this.emit(msg, source, topic);\n\n    };\n\n    createPool(){\n\n        this.pool = new Pool(this);\n    };\n\n    doPool(msg, source, topic) {\n\n        this.pool.handle(msg, this.name || source, topic);\n\n    };\n\n    destroy(){\n\n        if(this.dead)\n            return;\n\n        this.cleanupMethod(); // should remove an eventListener if present\n\n    };\n\n}\n\n\nStream.fromMonitor = function(data, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || data.name;\n\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.survey();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.monitor(toStream);\n\n    return stream;\n\n};\n\n\n\nStream.fromSubscribe = function(data, topic, name, canPull){\n\n    const stream = new Stream();\n    const streamName = name || topic || data.name;\n    stream.name = streamName;\n\n    const toStream = function(msg, source, topic){\n        stream.emit(msg, streamName, topic);\n    };\n\n    stream.cleanupMethod = function(){\n        data.unsubscribe(toStream, topic);\n    };\n\n    if(canPull){\n        stream.pull = function(){\n            const packet = data.peek();\n            if(packet) {\n                const msg = packet._msg;\n                const source = streamName || packet._source;\n                const topic = packet._topic;\n                stream.emit(msg, source, topic, stream);\n            }\n        }\n    }\n\n    data.subscribe(toStream, topic);\n\n    return stream;\n\n};\n\n\n\nStream.fromEvent = function(target, eventName, useCapture){\n\n    useCapture = !!useCapture;\n\n    const stream = new Stream();\n    stream.name = eventName;\n\n    const on = target.addEventListener || target.addListener || target.on;\n    const off = target.removeEventListener || target.removeListener || target.off;\n\n    const toStream = function(msg){\n        stream.handle(msg, eventName);\n    };\n\n    stream.cleanupMethod = function(){\n        off.call(target, eventName, toStream, useCapture);\n    };\n\n    on.call(target, eventName, toStream, useCapture);\n\n    return stream;\n\n};\n\n\nexport default Stream;","import Stream from './stream.js';\nimport Nyan from './nyan.js';\n\n\nfunction getPacketFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    const peek = data && data.peek(word.topic);\n    return peek;\n\n}\n\n\nfunction getSurveyFromDataWord(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n    return data && data.survey();\n\n}\n\nfunction throwError(msg){\n    console.log('throwing ', msg);\n    const e = new Error(msg);\n    console.log(this, e);\n    throw e;\n}\n\nfunction getDoSkipNamedDupes(names){\n\n    let lastMsg = {};\n    const len = names.length;\n\n    return function doSkipNamedDupes(msg) {\n\n        let diff = false;\n        for(let i = 0; i < len; i++){\n            const name = names[i];\n            if(!lastMsg.hasOwnProperty(name) || lastMsg[name] !== msg[name])\n                diff = true;\n            lastMsg[name] = msg[name];\n        }\n\n        return diff;\n\n    };\n}\n\n\nfunction getDoWrite(scope, word){\n\n    const data = scope.find(word.name, !word.maybe);\n\n    return function doWrite(msg) {\n        data.write(msg, word.topic);\n    };\n\n}\n\n\nfunction getDoSpray(scope, phrase){\n\n    const wordByAlias = {};\n    const dataByAlias = {};\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++){ // todo, validate no dupe alias in word validator for spray\n\n        const word = phrase[i];\n        const data = scope.find(word.name, !word.maybe);\n        if(data) { // might not exist if optional\n            wordByAlias[word.alias] = word;\n            dataByAlias[word.alias] = data;\n        }\n\n    }\n\n    return function doWrite(msg) {\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                const msgPart = msg[alias];\n                data.silentWrite(msgPart, word.topic);\n            }\n\n        }\n\n        for(const alias in msg){\n\n            const data = dataByAlias[alias];\n            if(data) {\n                const word = wordByAlias[alias];\n                data.refresh(word.topic);\n            }\n\n        }\n\n\n    };\n\n\n}\n\n\nfunction getDoRead(scope, phrase){\n\n    const len = phrase.length;\n    const firstWord = phrase[0];\n\n    if(len > 1 || firstWord.monitor) { // if only reading word is a wildcard subscription then hash as well\n        return getDoReadMultiple(scope, phrase);\n    } else {\n        return getDoReadSingle(scope, firstWord);\n    }\n\n}\n\n\nfunction getDoAnd(scope, phrase) {\n\n    return getDoReadMultiple(scope, phrase, true);\n\n}\n\n\nfunction getDoReadSingle(scope, word) {\n\n    return function doReadSingle() {\n\n        const packet = getPacketFromDataWord(scope, word);\n        return packet && packet.msg;\n\n    };\n\n}\n\n\nfunction getDoReadMultiple(scope, phrase, isAndOperation){\n\n\n        const len = phrase.length;\n\n\n        return function doReadMultiple(msg, source) {\n\n            const result = {};\n\n            if(isAndOperation){\n\n                if(source){\n                    result[source] = msg;\n                } else {\n                    for (const p in msg) {\n                        result[p] = msg[p];\n                    }\n                }\n            }\n\n            for (let i = 0; i < len; i++) {\n                const word = phrase[i];\n\n                if(word.monitor){\n\n                    const survey = getSurveyFromDataWord(scope, word);\n                    for(const [key, value] of survey){\n                        result[key] = value;\n                    }\n\n                } else {\n\n                    const packet = getPacketFromDataWord(scope, word);\n                    const prop = word.monitor ? (word.alias || word.topic) : (word.alias || word.name);\n                    if (packet)\n                        result[prop] = packet.msg;\n\n                }\n\n            }\n\n            return result;\n\n        };\n\n}\n\n\n// get data stream -- store data in bus, emit into stream on pull()\n\n\nfunction getDataStream(scope, word, canPull) {\n\n    const data = scope.find(word.name, !word.maybe);\n    if(word.monitor){\n        return Stream.fromMonitor(data, word.alias, canPull);\n    } else {\n        return Stream.fromSubscribe(data, word.topic, word.alias, canPull);\n    }\n\n}\n\nfunction isObject(v) {\n    if (v === null)\n        return false;\n    return (typeof v === 'function') || (typeof v === 'object');\n}\n\n\nfunction getEventStream(scope, word, node){\n\n    return Stream.fromEvent(node, word.topic, word.useCapture, word.alias);\n\n}\n\nfunction doExtracts(value, extracts) {\n\n    let result = value;\n    const len = extracts.length;\n\n    for (let i = 0; i < len; i++) {\n        const extract = extracts[i];\n        if(!isObject(result)) {\n            if(extract.silentFail)\n                return undefined;\n\n            throwError('Cannot access property \\'' + extract.name + '\\' of ' + result);\n\n        }\n        result = result[extract.name];\n    }\n\n\n    return result;\n\n}\n\nfunction getNeedsArray(phrase){\n    return phrase.filter(word => word.operation.need).map(word => word.alias);\n}\n\nfunction getDoMsgHashExtract(words) {\n\n    const len = words.length;\n    const extractsByAlias = {};\n\n    for (let i = 0; i < len; i++) {\n\n        const word = words[i];\n        extractsByAlias[word.alias] = word.extracts;\n\n    }\n\n    return function(msg) {\n\n        const result = {};\n        for(const alias in extractsByAlias){\n            const hasProp = msg.hasOwnProperty(alias);\n            if(hasProp){\n                result[alias] = doExtracts(msg[alias], extractsByAlias[alias]);\n            }\n        }\n\n        return result;\n\n    };\n\n}\n\nfunction getDoMsgExtract(word) {\n\n    const extracts = word.extracts;\n\n    return function(msg){\n        return doExtracts(msg, extracts);\n    }\n\n}\n\n\nfunction applyReaction(scope, bus, phrase, target) { // target is some event emitter\n\n    const need = [];\n    const skipDupes = [];\n    const streams = [];\n    const extracts = [];\n\n    if(phrase.length === 1 && phrase[0].operation === 'ACTION'){\n        bus.addFrame(getDataStream(scope, phrase[0], false));\n        return;\n    }\n\n    for(let i = 0; i < phrase.length; i++){\n\n        const word = phrase[i];\n        const operation = word.operation;\n\n        if(operation === 'WATCH') {\n            streams.push(getDataStream(scope, word, true));\n            skipDupes.push(word.alias)\n        }\n        else if(operation === 'WIRE'){\n            streams.push(getDataStream(scope, word, true));\n        }\n        else if(operation === 'EVENT') {\n            streams.push(getEventStream(scope, word));\n        }\n\n        if(word.extracts)\n            extracts.push(word);\n\n        if(word.need)\n            need.push(word.alias);\n\n    }\n\n    bus.addFrame(streams);\n\n    if(streams.length > 1) {\n\n        bus.merge().group().batch();\n\n        if(extracts.length)\n            bus.msg(getDoMsgHashExtract(extracts));\n\n        if(need.length)\n            bus.hasKeys(need);\n\n        if(skipDupes.length){\n            bus.filter(getDoSkipNamedDupes(skipDupes));\n        }\n\n    } else {\n\n        if(extracts.length)\n            bus.msg(getDoMsgExtract(extracts[0]));\n\n        if(skipDupes.length)\n            bus.skipDupes();\n\n    }\n\n}\n\nfunction isTruthy(msg){ return !!msg; };\nfunction isFalsey(msg){ return !msg; };\n\n\nfunction applyMethod(bus, word) {\n\n    const method = word.extracts[0];\n\n    switch(method){\n\n        case 'true':\n            bus.msg(true);\n            break;\n\n        case 'false':\n            bus.msg(false);\n            break;\n\n        case 'null':\n            bus.msg(null);\n            break;\n\n        case 'undefined':\n            bus.msg(undefined);\n            break;\n\n        case 'array':\n            bus.msg([]);\n            break;\n\n        case 'object':\n            bus.msg({});\n            break;\n\n        case 'truthy':\n            bus.filter(isTruthy);\n            break;\n\n        case 'falsey':\n            bus.filter(isFalsey);\n            break;\n\n        case 'string':\n            bus.msg(function(){ return word.extracts[1];});\n            break;\n\n            // throttle x, debounce x, delay x, last x, first x, all\n\n    }\n\n}\n\nfunction applyProcess(scope, bus, phrase, context, node) {\n\n    const operation = phrase[0].operation; // same for all words in a process phrase\n\n    if(operation === 'READ') {\n        bus.msg(getDoRead(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if(needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'AND') {\n        bus.msg(getDoAnd(scope, phrase));\n        const needs = getNeedsArray(phrase);\n        if (needs.length)\n            bus.whenKeys(needs);\n    } else if (operation === 'METHOD') {\n        applyMethod(bus, phrase[0]);\n    } else if (operation === 'FILTER') {\n        applyFilterProcess(bus, phrase, context);\n    } else if (operation === 'RUN') {\n        applyMsgProcess(bus, phrase, context);\n    } else if (operation === 'ALIAS') {\n        applySourceProcess(bus, phrase[0]);\n    } else if (operation === 'WRITE') {\n        bus.run(getDoWrite(scope, phrase[0]));\n    } else if (operation === 'SPRAY') {\n        bus.run(getDoSpray(scope, phrase)); // todo validate that writes do not contain words in reacts\n\n    }\n\n}\n\n\n\nfunction applyMsgProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.msg(f);\n\n    }\n\n}\n\n\nfunction applyRunProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.run(f);\n\n    }\n\n}\n\nfunction applySourceProcess(bus, word){\n\n    bus.source(word.alias);\n\n}\n\n\nfunction applyFilterProcess(bus, phrase, context){\n\n    const len = phrase.length;\n\n    for(let i = 0; i < len; i++) {\n\n        const word = phrase[i];\n        const name = word.name;\n        const method = context[name];\n\n        const f = function (msg, source, topic) {\n            return method.call(context, msg, source, topic);\n        };\n\n        bus.filter(f);\n\n    }\n\n}\n\n\nfunction nyanToBus(scope, bus, str, context, target){\n\n    const nyan = Nyan.parse(str);\n    const len = nyan.length;\n\n    for(let i = 0; i < len; i++){\n\n        const cmd = nyan[i];\n        const name = cmd.name;\n        const phrase = cmd.phrase;\n\n      //  console.log('----', name, phrase);\n\n        if(name === 'JOIN') {\n            bus = bus.join();\n            bus.merge();\n            bus.group();\n            bus.sync();\n        } else if(name === 'FORK'){\n            bus = bus.fork();\n        } else if (name === 'BACK'){\n            bus = bus.back();\n        } else {\n\n            if(name === 'PROCESS')\n                applyProcess(scope, bus, phrase, context, target);\n            else // name === 'REACT'\n                applyReaction(scope, bus, phrase, target);\n\n        }\n    }\n\n    return bus;\n\n}\n\nexport default nyanToBus;","\nimport F from './flib.js';\nimport Data from './data.js';\nimport { DATA_TYPES, isValid } from './dataTypes.js';\nimport Bus from './bus.js';\nimport Nyan from './nyan.js';\nimport Stream from './stream.js';\nimport nyanToBus from './nyanBus.js';\n\nlet idCounter = 0;\n\nfunction _destroyEach(arr){\n\n    const len = arr.length;\n    for(let i = 0; i < len; i++){\n        const item = arr[i];\n        item.destroy();\n    }\n\n}\n\n\nclass Scope{\n\n    constructor(name) {\n\n        this._id = ++idCounter;\n        this._name = name;\n        this._parent = null;\n        this._children = [];\n        this._busList = [];\n        this._dataList = new Map();\n        this._valves = new Map();\n        this._mirrors = new Map();\n        this._dead = false;\n\n    };\n\n    get name() { return this._name; };\n    get dead() { return this._dead; };\n\n    get children(){\n\n        return this._children.map((d) => d);\n\n    };\n\n\n    // todo react via nyan (so it can be precompiled and reused\n    react(str, context, node){ // string is Nyan\n\n        if(!str)\n            throw new Error('Need a Nyan phrase!');\n\n        let b = new Bus(this);\n\n        return nyanToBus(this, b, str, context, node);\n\n    };\n\n    clear(){\n\n        if(this._dead)\n            return;\n\n        _destroyEach(this.children); // iterates over copy to avoid losing position as children leaves their parent\n        _destroyEach(this._busList);\n        _destroyEach(this._dataList.values());\n\n        this._children = [];\n        this._busList = [];\n        this._dataList.clear();\n        this._valves.clear();\n        this._mirrors.clear();\n\n    };\n\n    destroy(){\n\n        this.clear();\n        this.parent = null;\n        this._dead = true;\n\n    };\n\n    createChild(name){\n\n        let child = new Scope(name);\n        child.parent = this;\n        return child;\n\n    };\n\n    insertParent(newParent){\n\n        newParent.parent = this.parent;\n        this.parent = newParent;\n        return this;\n\n    };\n\n    get parent() { return this._parent; };\n\n    set parent(newParent){\n\n        const oldParent = this.parent;\n\n        if(oldParent === newParent)\n            return;\n\n        if(oldParent) {\n            const i = oldParent._children.indexOf(this);\n            oldParent._children.splice(i, 1);\n        }\n\n        this._parent = newParent;\n\n        if(newParent) {\n            newParent._children.push(this);\n        }\n\n        return this;\n\n    };\n\n    set valves(list){\n\n        for(const name of list){\n            this._valves.set(name, true);\n        }\n\n    }\n\n    get valves(){ return Array.from(this._valves.keys());};\n\n\n    _createMirror(data){\n\n        const mirror = Object.create(data);\n        mirror._type = DATA_TYPES.MIRROR;\n        this._mirrors.set(data.name, mirror);\n        return mirror;\n\n    };\n\n    _createData(name, type){\n\n        const d = new Data(this, name, type);\n        this._dataList.set(name, d);\n        return d;\n\n    };\n\n\n    data(name){\n\n        return this.grab(name) || this._createData(name, DATA_TYPES.NONE);\n\n    };\n\n\n    action(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.ACTION);\n\n        return this._createData(name, DATA_TYPES.ACTION);\n\n    };\n\n\n    state(name){\n\n        const d = this.grab(name);\n\n        if(d)\n            return d.verify(DATA_TYPES.STATE);\n\n        const state = this._createData(name, DATA_TYPES.STATE);\n        this._createMirror(state);\n        return state;\n\n    };\n\n\n    findDataSet(names, required){\n\n\n        const result = {};\n        for(const name of names){\n            result[name] = this.find(name, required);\n        }\n\n        return result;\n\n    };\n\n    readDataSet(names, required){\n\n        const dataSet = this.findDataSet(names, required);\n        const result = {};\n\n        for(const d of dataSet) {\n            if (d) {\n                const lastPacket = d.peek();\n                if (lastPacket)\n                    result[d.name] = lastPacket.msg;\n            }\n        }\n\n        return result;\n    };\n\n\n    // created a flattened view of all data at and above this scope\n\n    flatten(){\n\n        let scope = this;\n\n        const result = new Map();\n        const appliedValves = new Map();\n\n        for(const [key, value] of scope._dataList){\n            result.set(key, value);\n        }\n\n        while(scope = scope._parent){\n\n            const dataList = scope._dataList;\n            const valves = scope._valves;\n            const mirrors = scope._mirrors;\n\n            if(!dataList.size)\n                continue;\n\n            // further restrict valves with each new scope\n\n            if(valves.size){\n                if(appliedValves.size) {\n                    for (const key of appliedValves.keys()) {\n                        if(!valves.has(key))\n                            appliedValves.delete(key);\n                    }\n                } else {\n                    for (const [key, value] of valves.entries()) {\n                        appliedValves.set(key, value);\n                    }\n                }\n            }\n\n            const possibles = appliedValves.size ? appliedValves : dataList;\n\n            for(const key of possibles.keys()) {\n                if (!result.has(key)) {\n\n                    const data = mirrors.get(key) || dataList.get(key);\n                    if (data)\n                        result.set(key, data);\n                }\n            }\n\n        }\n\n        return result;\n\n    };\n\n\n    find(name, required){\n\n        const localData = this.grab(name);\n        if(localData)\n            return localData;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror)\n                return mirror;\n\n            const d = scope.grab(name);\n\n            if(d)\n                return d;\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    findOuter(name, required){\n\n        let foundInner = false;\n        const localData = this.grab(name);\n        if(localData)\n            foundInner = true;\n\n        let scope = this;\n\n        while(scope = scope._parent){\n\n            const valves = scope._valves;\n\n            // if valves exist and the name is not present, stop looking\n            if(valves.size && !valves.has(name)){\n                break;\n            }\n\n            const mirror = scope._mirrors.get(name);\n\n            if(mirror) {\n\n                if(foundInner)\n                    return mirror;\n\n                foundInner = true;\n                continue;\n            }\n\n            const d = scope.grab(name);\n\n            if(d) {\n\n                if(foundInner)\n                    return d;\n\n                foundInner = true;\n            }\n\n        }\n\n        if(required)\n            throw new Error('Required data: ' + name + ' not found!');\n\n        return null;\n\n    };\n\n    grab(name, required) {\n\n        const data = this._dataList.get(name);\n\n        if(!data && required)\n            throw new Error('Required Data: ' + name + ' not found!');\n\n        return data || null;\n\n    };\n\n    transaction(writes){\n\n        if(Array.isArray(writes))\n            return this._multiWriteArray(writes);\n        else if(typeof writes === 'object')\n            return this._multiWriteHash(writes);\n\n        throw new Error('Write values must be in an array of object hash.');\n\n    };\n\n    // write {name, topic, value} objects as a transaction\n    _multiWriteArray(writeArray){\n\n        const list = [];\n\n        for(const w of writeArray){\n            const d = this.find(w.name);\n            d.silentWrite(w.value, w.topic);\n            list.push(d);\n        }\n\n        let i = 0;\n        for(const d of list){\n            const w = writeArray[i];\n            d.refresh(w.topic);\n        }\n\n        return this;\n\n    };\n\n\n    // write key-values as a transaction\n    _multiWriteHash(writeHash){\n\n        const list = [];\n\n        for(const k in writeHash){\n            const v = writeHash[k];\n            const d = this.find(k);\n            d.silentWrite(v);\n            list.push(d);\n        }\n\n        for(const d of list){\n            d.refresh();\n        }\n\n        return this;\n\n    };\n\n}\n\nexport default Scope;\n","\nimport Scope from './scope.js';\nimport Wire from './wire.js';\nimport Bus from './bus.js';\n\n\nconst Catbus = {};\n\nlet _batchQueue = [];\nlet _primed = false;\n\n\n\nCatbus.fromEvent = function(target, eventName, useCapture){\n\n    const bus = new Bus();\n    bus.event(target, eventName, useCapture);\n    return bus;\n\n};\n\n// todo stable output queue -- output pools go in a queue that runs after the batch q is cleared, thus run once only\n\nCatbus.enqueue = function(pool){\n\n    _batchQueue.push(pool);\n\n    if(!_primed) { // register to flush the queue\n        _primed = true;\n        if (typeof window !== 'undefined' && window.requestAnimationFrame) requestAnimationFrame(Catbus.flush);\n        else process.nextTick(Catbus.flush);\n    }\n\n};\n\n\nCatbus.createChild = Catbus.scope = function(name){\n\n    return new Scope(name);\n\n};\n\n\nCatbus.flush = function(){\n\n    _primed = false;\n\n    let cycles = 0;\n    let q = _batchQueue;\n    _batchQueue = [];\n\n    while(q.length) {\n\n        while (q.length) {\n            const pool = q.shift();\n            pool.release();\n        }\n\n        q = _batchQueue;\n        _batchQueue = [];\n\n        cycles++;\n        if(cycles > 10)\n            throw new Error('Flush batch cycling loop > 10.', q);\n\n    }\n\n};\n\n\n\nexport default Catbus;\n","\nimport Catbus from './catbus.js';\n\nexport default Catbus;\n\n// export default () => {\n//     let s = new Scope('cow');\n//     return s;\n// }"],"names":["ALWAYS_TRUE","ALWAYS_FALSE","TO_SOURCE","msg","source","TO_TOPIC","topic","TO_MSG","NOOP","FUNCTOR","val","Func","args","length","Error","func","pool","enqueue","release","fNum","wasEmpty","timeoutId","msgDuringTimer","auto","keep","timedRelease","fromTimeout","stream","dead","nowEmpty","isEmpty","setTimeout","call","n","Infinity","buffer","f","push","isBuffer","next","shift","content","seed","hasSeed","arguments","acc","initMsg","reset","groupBy","hash","g","k","last","firstMsg","hasFirst","latched","messages","keys","keyHash","len","i","messagesByKey","hasOwnProperty","noLatch","hadMsg","lastMsg","diff","bus","holding","To_MSG","Packet","_msg","_topic","_source","_timestamp","Date","now","DATA_TYPES","reverseLookup","p","v","isValid","type","SubscriberList","data","_subscribers","_lastPacket","_data","_name","_dead","silently","name","currentPacket","ACTION","subscribers","concat","s","handle","watcher","indexOf","splice","Data","scope","NONE","_scope","_type","_wildcardSubscriberList","_subscriberListsByTopic","Map","_throwDead","values","list","destroy","undefined","get","set","expectedType","subscribe","packet","peek","_demandSubscriberList","add","remove","entries","m","key","value","lastPacket","subscriberList","write","MIRROR","read","Wave","process","pass","action","def","stateful","frame","wire","emit","callback","Pool","when","F","until","timer","clear","isPrimed","prop","factory","hasContent","Frame","_bus","_targets","_index","_frames","_wireMap","WeakMap","_holding","_processDef","hasWire","has","_createHandler","handler","define","Wire","target","cleanupMethod","pull","fromMonitor","wireName","toWire","unsubscribe","monitor","fromSubscribe","canPull","fromEvent","eventName","useCapture","on","addEventListener","addListener","off","removeEventListener","removeListener","WaveDef","Bus","_wires","_children","_parent","_busList","_currentFrame","lastFrame","nextFrame","ASSERT_NOT_HOLDING","fork","parent","back","addFrame","getDeferTimer","getBatchTimer","getSyncTimer","getThrottleTimer","hold","frame1","_streams","frame2","reduce","getScan","num","ASSERT_NEED_ONE_ARGUMENT","delay","ASSERT_IS_HOLDING","getAlwaysTrue","getWhenKeys","by","getGroup","getKeepAll","getKeepFirst","getKeepLast","ASSERT_IS_FUNCTION","mergedStream","Stream","streams","addTarget","fAny","transform","fStr","hasKeys","getSkipDupes","wires","map","d","newParent","oldParent","Nyan","operationDefs","sym","react","need","solo","follow","event","then","output","operationsBySymbol","operationsByName","symbolsByName","namesBySymbol","reactionsByName","withReactionsByName","thenByName","op","NyanWord","operation","maybe","alias","extracts","tickStack","toTickStackString","str","chunks","split","strStack","ticking","c","result","join","parse","isProcess","sentences","trim","filter","chunk","sentence","parseSentence","validate","cmdList","firstPhrase","j","phrase","validateReactPhrase","hasReaction","nw","validateProcessPhrase","firstOperation","parsePhrase","words","rawWords","rawWord","rawChunks","inMethod","trimmed","nameAndOperation","firstChar","start","slice","silentFail","children","processMethod","actionMethod","thisStream","streamName","toStream","survey","getPacketFromDataWord","word","find","getSurveyFromDataWord","throwError","log","e","getDoSkipNamedDupes","names","doSkipNamedDupes","getDoWrite","doWrite","getDoSpray","wordByAlias","dataByAlias","msgPart","silentWrite","refresh","getDoRead","firstWord","getDoReadMultiple","getDoReadSingle","getDoAnd","doReadSingle","isAndOperation","doReadMultiple","getDataStream","isObject","getEventStream","node","doExtracts","extract","getNeedsArray","getDoMsgHashExtract","extractsByAlias","hasProp","getDoMsgExtract","applyReaction","skipDupes","merge","group","batch","isTruthy","isFalsey","applyMethod","method","applyProcess","context","needs","whenKeys","run","applyMsgProcess","applySourceProcess","applyFilterProcess","nyanToBus","nyan","cmd","sync","idCounter","_destroyEach","arr","item","Scope","_id","_dataList","_valves","_mirrors","b","child","mirror","Object","create","grab","_createData","verify","STATE","state","_createMirror","required","dataSet","findDataSet","appliedValves","dataList","valves","mirrors","size","delete","possibles","localData","foundInner","writes","Array","isArray","_multiWriteArray","_multiWriteHash","writeArray","w","writeHash","from","Catbus","_batchQueue","_primed","window","requestAnimationFrame","flush","nextTick","createChild","cycles","q"],"mappings":"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"}